<<<<<<< HEAD
{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1526751099946},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1526751099947},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1526751099947},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1526751099947},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1526751099950},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1526751099950},{"_id":"themes/next/.stickler.yml","hash":"b7939095038cbdc4883fc10950e163a60a643b43","modified":1526751099950},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1526751099950},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1526751099950},{"_id":"themes/next/README.md","hash":"807c28ad6473b221101251d244aa08e2a61b0d60","modified":1526751099951},{"_id":"themes/next/bower.json","hash":"a8c832da6aad5245052aed7ff26c246f85d68c6c","modified":1526751099952},{"_id":"themes/next/_config.yml","hash":"f5a9b33aa08cf74b7243ada39a2052da05fe7622","modified":1526752133001},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1526751099952},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1526751099960},{"_id":"themes/next/package.json","hash":"11a0b27f92da8abf1efbea6e7a0af4271d7bff9e","modified":1526751099990},{"_id":"source/_posts/201805-git-guide-for-freshman.md","hash":"8b75cdd9cbf05d719f4ef38a1a5780dbb5b4b242","modified":1526751127805},{"_id":"source/_posts/201805-hexo-blog-system-guide.md","hash":"82a972abaaf8985a8e899c7a0195e13b15f1a571","modified":1526750389379},{"_id":"source/_posts/201805-vim-guide.md","hash":"fdf2273f01daa0f8ba4a6ac57ec79bca82bfee48","modified":1526781782621},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1526751099932},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1526751099935},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1526751095361},{"_id":"themes/next/.git/index","hash":"369d2d42ddbb2a3e3906b6cbf6db5c8632c45446","modified":1526751100099},{"_id":"themes/next/.git/packed-refs","hash":"e277289607b97219cf350f6a9de7e6cbb9c9e510","modified":1526751099929},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1526751099948},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"f846118d7fc68c053df47b24e1f661241645373f","modified":1526751099948},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1526751099948},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1526751099949},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1526751099949},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1526751099949},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1526751099953},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1526751099953},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1526751099953},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1526751099954},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1526751099954},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1526751099954},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1526751099955},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1526751099955},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1526751099955},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1526751099961},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1526751099961},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1526751099961},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1526751099961},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1526751099961},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1526751099962},{"_id":"themes/next/languages/ja.yml","hash":"5f8e54c666393d1ca2e257f6b1e3b4116f6657d8","modified":1526751099962},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1526751099962},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1526751099962},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1526751099963},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1526751099963},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1526751099963},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1526751099963},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1526751099963},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1526751099964},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1526751099964},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1526751099964},{"_id":"themes/next/layout/_layout.swig","hash":"09e8a6bfe5aa901c66d314601c872e57f05509e8","modified":1526751099965},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1526751099988},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1526751099988},{"_id":"themes/next/layout/index.swig","hash":"53300ca42c00cba050bc98b0a3f2d888d71829b1","modified":1526751099989},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1526751099989},{"_id":"themes/next/layout/post.swig","hash":"e7458f896ac33086d9427979f0f963475b43338e","modified":1526751099989},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1526751099990},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1526751099989},{"_id":"themes/next/scripts/helpers.js","hash":"392cda207757d4c055b53492a98f81386379fc4f","modified":1526751099991},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1526751099992},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1526751099992},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1526751100096},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1526751100097},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1526751100097},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751100050},{"_id":"themes/next/.git/logs/HEAD","hash":"c7ddc57414233a5de74d659af3f0e6af4eb9db6c","modified":1526751099934},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1526751095360},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1526751095364},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1526751095361},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1526751095367},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1526751095367},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1526751095364},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1526751095368},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1526751095363},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1526751095366},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1526751095365},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1526751095368},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1526751099956},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1526751099956},{"_id":"themes/next/docs/ru/README.md","hash":"712d9a9a557c54dd6638adfb0e1d2bb345b60756","modified":1526751099956},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1526751099957},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1526751099957},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1526751099957},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"44e4fb7ce2eca20dfa98cdd1700b50d6def4086f","modified":1526751099958},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1526751099958},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1526751099958},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1526751099959},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1526751099959},{"_id":"themes/next/docs/zh-CN/README.md","hash":"84d349fda6b9973c81a9ad4677db9d9ee1828506","modified":1526751099960},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"c1ba919f70efe87a39e6217883e1625af0b2c23c","modified":1526751099960},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1526751099965},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1526751099965},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1526751099965},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1526751099966},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"05e67c50a4f3a20fad879ed61b890de8ca6ba4ea","modified":1526751099966},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1526751099967},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1526751099967},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1526751099967},{"_id":"themes/next/layout/_macro/post.swig","hash":"686e60ede86547bdd7bc34c3629e4c9dbd134a21","modified":1526751099967},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1526751099968},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1526751099968},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5df32b286a8265ba82a4ef5e1439ff34751545ad","modified":1526751099968},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1ae77b6a369f83c9986408f2ab448090e37cd2dc","modified":1526751099968},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1526751099970},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1526751099971},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1526751099982},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1526751099979},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1526751099982},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1526751099983},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1526751099984},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1526751099984},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1526751099985},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1526751099985},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1526751099985},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1526751099972},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1526751099973},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1526751099973},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1526751099974},{"_id":"themes/next/scripts/tags/button.js","hash":"5a61c2da25970a4981fbd65f4a57c5e85db4dcda","modified":1526751099992},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"db70a841e7c1708f95ca97b44413b526b267fa9b","modified":1526751099993},{"_id":"themes/next/scripts/tags/exturl.js","hash":"2b3a4dc15dea33972c0b6d46a1483dabbf06fb5b","modified":1526751099993},{"_id":"themes/next/scripts/tags/full-image.js","hash":"a98fc19a90924f2368e1982f8c449cbc09df8439","modified":1526751099993},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1b97b1b5364945b8ab3e50813bef84273055234f","modified":1526751099994},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"b7600f6b868d8f4f7032126242d9738cd1e6ad71","modified":1526751099994},{"_id":"themes/next/scripts/tags/label.js","hash":"621004f2836040b12c4e8fef77e62cf22c561297","modified":1526751099994},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"460e5e1f305847dcd4bcab9da2038a85f0a1c273","modified":1526751099994},{"_id":"themes/next/scripts/tags/note.js","hash":"4975d4433e11161b2e9a5744b7287c2d667b3c76","modified":1526751099995},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1526751099995},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1526751100050},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526751100051},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1526751100051},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1526751100052},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526751100051},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1526751100052},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1526751100053},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1526751100053},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1526751100053},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1526751100054},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1526751100057},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526751100057},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526751100058},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1526751100060},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526751100061},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526751100059},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1526751100064},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526751100066},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1526751100065},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751099974},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751099974},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751100038},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751100038},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751100039},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751100049},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526751100050},{"_id":"themes/next/.git/refs/heads/master","hash":"35ef56b48346d32c3e02bdaa3f15f06ef9af7ce6","modified":1526751099934},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1526751099966},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1526751099966},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1526751099969},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1526751099969},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1526751099969},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1526751099969},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1526751099970},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1526751099970},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1526751099970},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1526751099971},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1526751099971},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1526751099971},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1526751099971},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1526751099972},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1526751099972},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1526751099972},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1526751099972},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1526751099975},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1526751099975},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1526751099975},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1526751099976},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1526751099976},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1526751099976},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1526751099977},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1526751099977},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1526751099977},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"cee047575ae324398025423696b760db64d04e6f","modified":1526751099978},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1526751099978},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1526751099979},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1526751099979},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1526751099980},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"8878241797f8494a70968756c57cacdfc77b61c7","modified":1526751099980},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1526751099980},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1526751099981},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1526751099981},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1526751099981},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"c0eb6123464d745ac5324ce6deac8ded601f432f","modified":1526751099982},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1526751099983},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1526751099983},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1526751099982},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1526751099984},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1526751099986},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1526751099987},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1526751099987},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1526751099987},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1526751099973},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1526751099973},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1526751099974},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1526751100038},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1526751100038},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1526751100039},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"81ca13d6d0beff8b1a4b542a51e3b0fb68f08efd","modified":1526751100039},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"7a2706304465b9e673d5561b715e7c72a238437c","modified":1526751100049},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1526751100049},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"32392d213f5d05bc26b2dc452f2fc6fea9d44f6d","modified":1526751100050},{"_id":"themes/next/source/css/_variables/base.styl","hash":"cfb03ec629f13883509eac66e561e9dba562333f","modified":1526751100050},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1526751100066},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1526751100067},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"40de94fd18fcbd67a327d63b0d1e242a08aa5404","modified":1526751100067},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1526751100068},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1526751100068},{"_id":"themes/next/source/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1526751100068},{"_id":"themes/next/source/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1526751100069},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1526751100069},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1526751100070},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1526751100071},{"_id":"themes/next/source/js/src/utils.js","hash":"4284c67ea1435de2acd523f6d48c0d073fd1ad03","modified":1526751100070},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1526751100072},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1526751100071},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1526751100072},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1526751100072},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1526751100093},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1526751100094},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1526751100095},{"_id":"themes/next/.git/objects/pack/pack-9829b0de980dc403efcab0fab027fd96c783804d.idx","hash":"118683259e5b358ac99d3441dedb260235a098dc","modified":1526751099912},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1526751100087},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1526751099932},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"c7ddc57414233a5de74d659af3f0e6af4eb9db6c","modified":1526751099934},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1526751099986},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1526751099986},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1526751099995},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1526751099996},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1526751099996},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1526751099997},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1526751099998},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1526751100014},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1526751100023},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1526751100035},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1526751100035},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1526751100036},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1526751100036},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1526751100037},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1526751100037},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1526751100037},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1526751100040},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"f362fbc791dafb378807cabbc58abf03e097af6d","modified":1526751100040},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1526751100041},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1526751100041},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1526751100042},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1526751100041},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1526751100042},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1526751100043},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1526751100044},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1526751100045},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1526751100045},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1526751100045},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1526751100045},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1526751100046},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ba1842dbeb97e46c6c4d2ae0e7a2ca6d610ada67","modified":1526751100047},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1526751100047},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1526751100047},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1526751100048},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1526751100048},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1526751100048},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1526751100069},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1526751100073},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1526751100075},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1526751100075},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1526751100088},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1526751100088},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526751100085},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"c7ddc57414233a5de74d659af3f0e6af4eb9db6c","modified":1526751099932},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1526751100091},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526751100085},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1526751099999},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1526751100005},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1526751100006},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1526751100007},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1526751100008},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1526751100008},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1526751100009},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1526751100013},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1526751100013},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1526751100000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1526751100014},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1526751100001},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1526751100002},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1526751100004},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1526751100005},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1526751100003},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1526751100015},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1526751100015},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1526751100015},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1526751100016},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1526751100016},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1526751100016},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1526751100017},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1526751100017},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1526751100018},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1526751100017},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1526751100018},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1526751100018},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1526751100019},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1526751100019},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1526751100020},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1526751100019},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1526751100020},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1526751100021},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1526751100021},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"bbe0d111f6451fc04e52719fd538bd0753ec17f9","modified":1526751100020},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1526751100021},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1526751100021},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1526751100022},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1526751100022},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1526751100022},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1526751100022},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"5d15cc8bbefe44c77a9b9f96bf04a6033a4b35b8","modified":1526751100024},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1526751100023},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1526751100024},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1526751100023},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1526751100025},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1526751100026},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1526751100025},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1526751100026},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1526751100031},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1526751100029},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1526751100032},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1526751100030},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1526751100032},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1526751100033},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1526751100034},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1526751100033},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1526751100034},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1526751100034},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c06be422bc41fd35e5c7948cdea2c09961207f6","modified":1526751100035},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1526751100043},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1526751100044},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1526751100046},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526751100078},{"_id":"themes/next/.git/objects/pack/pack-9829b0de980dc403efcab0fab027fd96c783804d.pack","hash":"9e1759de63e19531772b171ae72c0b4bb3787630","modified":1526751099909},{"_id":"public/archives/index.html","hash":"48c4b91c3433431b93e70458a0d7984a9967d25f","modified":1527406439433},{"_id":"public/archives/2018/index.html","hash":"e73c69b4f5f636b9f9db3a6e765e6cb1351c53ff","modified":1527406439433},{"_id":"public/archives/2018/05/index.html","hash":"85c0d46c6f819983df7d64af4a6044899fb270bd","modified":1527406439433},{"_id":"public/tags/git/index.html","hash":"b58415d4931c0b98613667e275fb7891d9716d14","modified":1527406439434},{"_id":"public/tags/Linux-vim/index.html","hash":"b51cf6c77ed0df8b35dbd48757a9a4b1b26badf3","modified":1527406439434},{"_id":"public/2018/05/20/vim-guide/index.html","hash":"580b3825ffb83f1fd6b6e7df6bed04afe2d9704a","modified":1527406439434},{"_id":"public/2018/05/18/hexo-blog-system-guide/index.html","hash":"83c264647ba1f272c82dea85c786c67127968086","modified":1527406439434},{"_id":"public/2018/05/18/git-guide-for-freshman/index.html","hash":"3141c3e9c49d8627e4af0f3020b18af8199d61e1","modified":1527406439434},{"_id":"public/index.html","hash":"27ad8b996fba11853a30edcbd7ed3eb1a2e2c282","modified":1527406439434},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526752159607},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1526752159607},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1526752159607},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526752159607},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1526752159607},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1526752159607},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1526752159607},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1526752159607},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1526752159607},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1526752159607},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526752159608},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526752159608},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1526752159608},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526752159608},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526752159608},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1526752159608},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526752159608},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1526752159608},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1526752159608},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1526752159608},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526752160353},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526752160357},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1526752160421},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1526752160421},{"_id":"public/js/src/bootstrap.js","hash":"40de94fd18fcbd67a327d63b0d1e242a08aa5404","modified":1526752160421},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1526752160421},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1526752160421},{"_id":"public/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1526752160422},{"_id":"public/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1526752160422},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1526752160422},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1526752160422},{"_id":"public/js/src/utils.js","hash":"4284c67ea1435de2acd523f6d48c0d073fd1ad03","modified":1526752160422},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1526752160422},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1526752160422},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1526752160422},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1526752160423},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1526752160423},{"_id":"public/css/main.css","hash":"b20c01f67622e5c2eb131fb2c42a034019d7251a","modified":1526752160423},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1526752160423},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1526752160423},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1526752160423},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1526752160423},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1526752160424},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1526752160424},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526752160424},{"_id":"source/_posts/201805-scala-array-list-tuple-and-so-on.md","hash":"e9618b5e78417577d47d22200c0d1c04b4365954","modified":1526905915368},{"_id":"source/_posts/201805-tensorflow-flags-guide.md","hash":"3f2923c6de9cbdec2f01c20615df7058694f7938","modified":1526905791542},{"_id":"public/2018/05/21/tensorflow-flags-guide/index.html","hash":"03aaaa2fbd2a3c2430d08774df09351ac215c0ca","modified":1527406439432},{"_id":"public/2018/05/20/scala-array-list-tuple-and-so-on/index.html","hash":"ea70257bd29a5dffc41a9791a987b18bd3a2681c","modified":1527406439434}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"git 使用指南","date":"2018-05-17T16:11:03.000Z","_content":"\n# 克隆 git 仓库\n\n命令\n\n``` bash\ngit clone <remote_repo> -b <branch>\n```\n\n# 远程仓库\n\n## 添加远程仓库\n\n``` bash\ngit remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist # （”quantum_rng_testing/nist“ 为工程的目录）\n```\n\n## git push 命令\n\ngit push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。\n\n```\n$ git push [参数] <远程主机名> <本地分支名>:<远程分支名>\n```\n参数：\n- -u 第一次推送的时候，可以将分支进行关联，以后只要 `git push` 就行了\n\n### 删除远程分支\n如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。\n```\n$ git push origin :master\n# 等同于\n$ git push origin --delete master\n```\n\n### 强制覆盖远程分支\n\n``` bash\n# 方法一\ngit push origin develop:master -f # 就可以把本地的develop分支强制(-f)推送到远程master\n\n# 方法二 \ngit checkout master \t\t# 切换到旧的分支 \ngit reset –hard develop \t# 将本地的旧分支 master 重置成 develop \ngit push origin master –force \t# 再推送到远程仓库\n```\n\n### 推送本地所有分支\n不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。\n```\ngit push --all origin\n\n```\n\n## 放弃本地所有修改，强制拉取远程更新\n\n开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：\n\n``` bash\ngit fetch --all\ngit reset --hard origin/master\ngit pull //可以省略\n```\ngit fetch 指令是下载远程仓库最新内容，不做合并 \ngit reset 指令把HEAD指向master最新版本\n\n\n## 查看远程分支\n\n查看远程分支\n```\ngit branch -r \n```\n\n## 拉取远程分支并创建本地分支\n\n### 方法一\n\n使用如下命令：\n```\ngit checkout -b 本地分支名 origin/远程分支名\n```\n使用该方式会在本地新建分支，并自动切换到该本地分支x\n\n> 采用此种方法建立的本地分支会和远程分支建立映射关系。\n\n### 方式二\n\n使用如下命令：\n```\ngit fetch origin 远程分支名x:本地分支名x\n```\n\n使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。\n\n> 采用此种方法建立的本地分支不会和远程分支建立映射关系。\n\n### 本地分支和远程分支建立映射关系的作用\n\nref: 博文[Git branch upstream](https://blog.csdn.net/tterminator/article/details/78108550)\n\n#### 目标\n\n本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 `git pull` 或者 `git push` 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。\n\n#### 查看本地分支与远程分支的映射关系\n\n使用以下命令（注意是双v）：\n\n```\ngit branch -vv\n```\n\n可以获得如下信息： \n```\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n```\n同理，若此时执行如下推送命令同样不成功： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n\nKevin-MacBook-Air:blog arthur-mac$ git push\nfatal: The current branch hexo has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin hexo\n```\n\n#### 建立本地分支与远程分支的映射关系\n\n建立当前分支与远程分支的映射关系:\n```\ngit branch -u origin/hexo\n```\n\n或者使用命令：\n```\ngit branch --set-upstream-to origin/hexo\n```\n得到结果如下： \n```\nBranch 'hexo' set up to track remote branch 'hexo' from 'origin'.\n```\n查看当前本地分支与远程分支的映射关系结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a [origin/hexo] create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n此时就能够正常的拉取和推送了。\n\n#### 撤销本地分支与远程分支的映射关系\n撤销本地分支与远程分支的映射关系\n\n```\ngit branch --unset-upstream\n```\n使用git branch -vv得到结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到本地分支与远程分支的映射关系已经撤销。\n\n#### 问题思考：本地分支只能跟踪远程的同名分支吗？\n\n答案是否定的，本地分支可以与远程不同名的分支建立映射关系。\n","source":"_posts/201805-git-guide-for-freshman.md","raw":"title: git 使用指南\ntags: git\ndate: 2018-05-18 00:11:03\n---\n\n# 克隆 git 仓库\n\n命令\n\n``` bash\ngit clone <remote_repo> -b <branch>\n```\n\n# 远程仓库\n\n## 添加远程仓库\n\n``` bash\ngit remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist # （”quantum_rng_testing/nist“ 为工程的目录）\n```\n\n## git push 命令\n\ngit push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。\n\n```\n$ git push [参数] <远程主机名> <本地分支名>:<远程分支名>\n```\n参数：\n- -u 第一次推送的时候，可以将分支进行关联，以后只要 `git push` 就行了\n\n### 删除远程分支\n如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。\n```\n$ git push origin :master\n# 等同于\n$ git push origin --delete master\n```\n\n### 强制覆盖远程分支\n\n``` bash\n# 方法一\ngit push origin develop:master -f # 就可以把本地的develop分支强制(-f)推送到远程master\n\n# 方法二 \ngit checkout master \t\t# 切换到旧的分支 \ngit reset –hard develop \t# 将本地的旧分支 master 重置成 develop \ngit push origin master –force \t# 再推送到远程仓库\n```\n\n### 推送本地所有分支\n不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。\n```\ngit push --all origin\n\n```\n\n## 放弃本地所有修改，强制拉取远程更新\n\n开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：\n\n``` bash\ngit fetch --all\ngit reset --hard origin/master\ngit pull //可以省略\n```\ngit fetch 指令是下载远程仓库最新内容，不做合并 \ngit reset 指令把HEAD指向master最新版本\n\n\n## 查看远程分支\n\n查看远程分支\n```\ngit branch -r \n```\n\n## 拉取远程分支并创建本地分支\n\n### 方法一\n\n使用如下命令：\n```\ngit checkout -b 本地分支名 origin/远程分支名\n```\n使用该方式会在本地新建分支，并自动切换到该本地分支x\n\n> 采用此种方法建立的本地分支会和远程分支建立映射关系。\n\n### 方式二\n\n使用如下命令：\n```\ngit fetch origin 远程分支名x:本地分支名x\n```\n\n使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。\n\n> 采用此种方法建立的本地分支不会和远程分支建立映射关系。\n\n### 本地分支和远程分支建立映射关系的作用\n\nref: 博文[Git branch upstream](https://blog.csdn.net/tterminator/article/details/78108550)\n\n#### 目标\n\n本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 `git pull` 或者 `git push` 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。\n\n#### 查看本地分支与远程分支的映射关系\n\n使用以下命令（注意是双v）：\n\n```\ngit branch -vv\n```\n\n可以获得如下信息： \n```\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n```\n同理，若此时执行如下推送命令同样不成功： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n\nKevin-MacBook-Air:blog arthur-mac$ git push\nfatal: The current branch hexo has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin hexo\n```\n\n#### 建立本地分支与远程分支的映射关系\n\n建立当前分支与远程分支的映射关系:\n```\ngit branch -u origin/hexo\n```\n\n或者使用命令：\n```\ngit branch --set-upstream-to origin/hexo\n```\n得到结果如下： \n```\nBranch 'hexo' set up to track remote branch 'hexo' from 'origin'.\n```\n查看当前本地分支与远程分支的映射关系结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a [origin/hexo] create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n此时就能够正常的拉取和推送了。\n\n#### 撤销本地分支与远程分支的映射关系\n撤销本地分支与远程分支的映射关系\n\n```\ngit branch --unset-upstream\n```\n使用git branch -vv得到结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到本地分支与远程分支的映射关系已经撤销。\n\n#### 问题思考：本地分支只能跟踪远程的同名分支吗？\n\n答案是否定的，本地分支可以与远程不同名的分支建立映射关系。\n","slug":"git-guide-for-freshman","published":1,"updated":"2018-05-19T17:32:07.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhdotckp00001uoj5zmb9sd3","content":"<h1 id=\"克隆-git-仓库\"><a href=\"#克隆-git-仓库\" class=\"headerlink\" title=\"克隆 git 仓库\"></a>克隆 git 仓库</h1><p>命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> &lt;remote_repo&gt; -b &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><h2 id=\"添加远程仓库\"><a href=\"#添加远程仓库\" class=\"headerlink\" title=\"添加远程仓库\"></a>添加远程仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist <span class=\"comment\"># （”quantum_rng_testing/nist“ 为工程的目录）</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-push-命令\"><a href=\"#git-push-命令\" class=\"headerlink\" title=\"git push 命令\"></a>git push 命令</h2><p>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push [参数] &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>\n<p>参数：</p>\n<ul>\n<li>-u 第一次推送的时候，可以将分支进行关联，以后只要 <code>git push</code> 就行了</li>\n</ul>\n<h3 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h3><p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :master</span><br><span class=\"line\"># 等同于</span><br><span class=\"line\">$ git push origin --delete master</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"强制覆盖远程分支\"><a href=\"#强制覆盖远程分支\" class=\"headerlink\" title=\"强制覆盖远程分支\"></a>强制覆盖远程分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法一</span></span><br><span class=\"line\">git push origin develop:master -f <span class=\"comment\"># 就可以把本地的develop分支强制(-f)推送到远程master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二 </span></span><br><span class=\"line\">git checkout master \t\t<span class=\"comment\"># 切换到旧的分支 </span></span><br><span class=\"line\">git reset –hard develop \t<span class=\"comment\"># 将本地的旧分支 master 重置成 develop </span></span><br><span class=\"line\">git push origin master –force \t<span class=\"comment\"># 再推送到远程仓库</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"推送本地所有分支\"><a href=\"#推送本地所有分支\" class=\"headerlink\" title=\"推送本地所有分支\"></a>推送本地所有分支</h3><p>不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --all origin</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"放弃本地所有修改，强制拉取远程更新\"><a href=\"#放弃本地所有修改，强制拉取远程更新\" class=\"headerlink\" title=\"放弃本地所有修改，强制拉取远程更新\"></a>放弃本地所有修改，强制拉取远程更新</h2><p>开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch --all</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\">git pull //可以省略</span><br></pre></td></tr></table></figure>\n<p>git fetch 指令是下载远程仓库最新内容，不做合并<br>git reset 指令把HEAD指向master最新版本</p>\n<h2 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h2><p>查看远程分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"拉取远程分支并创建本地分支\"><a href=\"#拉取远程分支并创建本地分支\" class=\"headerlink\" title=\"拉取远程分支并创建本地分支\"></a>拉取远程分支并创建本地分支</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b 本地分支名 origin/远程分支名</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支，并自动切换到该本地分支x</p>\n<blockquote>\n<p>采用此种方法建立的本地分支会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch origin 远程分支名x:本地分支名x</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。</p>\n<blockquote>\n<p>采用此种方法建立的本地分支不会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"本地分支和远程分支建立映射关系的作用\"><a href=\"#本地分支和远程分支建立映射关系的作用\" class=\"headerlink\" title=\"本地分支和远程分支建立映射关系的作用\"></a>本地分支和远程分支建立映射关系的作用</h3><p>ref: 博文<a href=\"https://blog.csdn.net/tterminator/article/details/78108550\" target=\"_blank\" rel=\"noopener\">Git branch upstream</a></p>\n<h4 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h4><p>本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 <code>git pull</code> 或者 <code>git push</code> 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。</p>\n<h4 id=\"查看本地分支与远程分支的映射关系\"><a href=\"#查看本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"查看本地分支与远程分支的映射关系\"></a>查看本地分支与远程分支的映射关系</h4><p>使用以下命令（注意是双v）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -vv</span><br></pre></td></tr></table></figure>\n<p>可以获得如下信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br></pre></td></tr></table></figure></p>\n<p>同理，若此时执行如下推送命令同样不成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br><span class=\"line\"></span><br><span class=\"line\">Kevin-MacBook-Air:blog arthur-mac$ git push</span><br><span class=\"line\">fatal: The current branch hexo has no upstream branch.</span><br><span class=\"line\">To push the current branch and set the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"建立本地分支与远程分支的映射关系\"><a href=\"#建立本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"建立本地分支与远程分支的映射关系\"></a>建立本地分支与远程分支的映射关系</h4><p>建立当前分支与远程分支的映射关系:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -u origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>或者使用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream-to origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Branch &apos;hexo&apos; set up to track remote branch &apos;hexo&apos; from &apos;origin&apos;.</span><br></pre></td></tr></table></figure></p>\n<p>查看当前本地分支与远程分支的映射关系结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a [origin/hexo] create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>此时就能够正常的拉取和推送了。</p>\n<h4 id=\"撤销本地分支与远程分支的映射关系\"><a href=\"#撤销本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"撤销本地分支与远程分支的映射关系\"></a>撤销本地分支与远程分支的映射关系</h4><p>撤销本地分支与远程分支的映射关系</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --unset-upstream</span><br></pre></td></tr></table></figure>\n<p>使用git branch -vv得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到本地分支与远程分支的映射关系已经撤销。</p>\n<h4 id=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"><a href=\"#问题思考：本地分支只能跟踪远程的同名分支吗？\" class=\"headerlink\" title=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"></a>问题思考：本地分支只能跟踪远程的同名分支吗？</h4><p>答案是否定的，本地分支可以与远程不同名的分支建立映射关系。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"克隆-git-仓库\"><a href=\"#克隆-git-仓库\" class=\"headerlink\" title=\"克隆 git 仓库\"></a>克隆 git 仓库</h1><p>命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> &lt;remote_repo&gt; -b &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><h2 id=\"添加远程仓库\"><a href=\"#添加远程仓库\" class=\"headerlink\" title=\"添加远程仓库\"></a>添加远程仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist <span class=\"comment\"># （”quantum_rng_testing/nist“ 为工程的目录）</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-push-命令\"><a href=\"#git-push-命令\" class=\"headerlink\" title=\"git push 命令\"></a>git push 命令</h2><p>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push [参数] &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>\n<p>参数：</p>\n<ul>\n<li>-u 第一次推送的时候，可以将分支进行关联，以后只要 <code>git push</code> 就行了</li>\n</ul>\n<h3 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h3><p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :master</span><br><span class=\"line\"># 等同于</span><br><span class=\"line\">$ git push origin --delete master</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"强制覆盖远程分支\"><a href=\"#强制覆盖远程分支\" class=\"headerlink\" title=\"强制覆盖远程分支\"></a>强制覆盖远程分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法一</span></span><br><span class=\"line\">git push origin develop:master -f <span class=\"comment\"># 就可以把本地的develop分支强制(-f)推送到远程master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二 </span></span><br><span class=\"line\">git checkout master \t\t<span class=\"comment\"># 切换到旧的分支 </span></span><br><span class=\"line\">git reset –hard develop \t<span class=\"comment\"># 将本地的旧分支 master 重置成 develop </span></span><br><span class=\"line\">git push origin master –force \t<span class=\"comment\"># 再推送到远程仓库</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"推送本地所有分支\"><a href=\"#推送本地所有分支\" class=\"headerlink\" title=\"推送本地所有分支\"></a>推送本地所有分支</h3><p>不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --all origin</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"放弃本地所有修改，强制拉取远程更新\"><a href=\"#放弃本地所有修改，强制拉取远程更新\" class=\"headerlink\" title=\"放弃本地所有修改，强制拉取远程更新\"></a>放弃本地所有修改，强制拉取远程更新</h2><p>开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch --all</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\">git pull //可以省略</span><br></pre></td></tr></table></figure>\n<p>git fetch 指令是下载远程仓库最新内容，不做合并<br>git reset 指令把HEAD指向master最新版本</p>\n<h2 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h2><p>查看远程分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"拉取远程分支并创建本地分支\"><a href=\"#拉取远程分支并创建本地分支\" class=\"headerlink\" title=\"拉取远程分支并创建本地分支\"></a>拉取远程分支并创建本地分支</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b 本地分支名 origin/远程分支名</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支，并自动切换到该本地分支x</p>\n<blockquote>\n<p>采用此种方法建立的本地分支会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch origin 远程分支名x:本地分支名x</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。</p>\n<blockquote>\n<p>采用此种方法建立的本地分支不会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"本地分支和远程分支建立映射关系的作用\"><a href=\"#本地分支和远程分支建立映射关系的作用\" class=\"headerlink\" title=\"本地分支和远程分支建立映射关系的作用\"></a>本地分支和远程分支建立映射关系的作用</h3><p>ref: 博文<a href=\"https://blog.csdn.net/tterminator/article/details/78108550\" target=\"_blank\" rel=\"noopener\">Git branch upstream</a></p>\n<h4 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h4><p>本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 <code>git pull</code> 或者 <code>git push</code> 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。</p>\n<h4 id=\"查看本地分支与远程分支的映射关系\"><a href=\"#查看本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"查看本地分支与远程分支的映射关系\"></a>查看本地分支与远程分支的映射关系</h4><p>使用以下命令（注意是双v）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -vv</span><br></pre></td></tr></table></figure>\n<p>可以获得如下信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br></pre></td></tr></table></figure></p>\n<p>同理，若此时执行如下推送命令同样不成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br><span class=\"line\"></span><br><span class=\"line\">Kevin-MacBook-Air:blog arthur-mac$ git push</span><br><span class=\"line\">fatal: The current branch hexo has no upstream branch.</span><br><span class=\"line\">To push the current branch and set the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"建立本地分支与远程分支的映射关系\"><a href=\"#建立本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"建立本地分支与远程分支的映射关系\"></a>建立本地分支与远程分支的映射关系</h4><p>建立当前分支与远程分支的映射关系:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -u origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>或者使用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream-to origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Branch &apos;hexo&apos; set up to track remote branch &apos;hexo&apos; from &apos;origin&apos;.</span><br></pre></td></tr></table></figure></p>\n<p>查看当前本地分支与远程分支的映射关系结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a [origin/hexo] create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>此时就能够正常的拉取和推送了。</p>\n<h4 id=\"撤销本地分支与远程分支的映射关系\"><a href=\"#撤销本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"撤销本地分支与远程分支的映射关系\"></a>撤销本地分支与远程分支的映射关系</h4><p>撤销本地分支与远程分支的映射关系</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --unset-upstream</span><br></pre></td></tr></table></figure>\n<p>使用git branch -vv得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到本地分支与远程分支的映射关系已经撤销。</p>\n<h4 id=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"><a href=\"#问题思考：本地分支只能跟踪远程的同名分支吗？\" class=\"headerlink\" title=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"></a>问题思考：本地分支只能跟踪远程的同名分支吗？</h4><p>答案是否定的，本地分支可以与远程不同名的分支建立映射关系。</p>\n"},{"title":"hexo 使用记录","date":"2018-05-18T03:03:14.000Z","_content":"\n# 安装\n\n1. 安装Node.js\n\n```\ncurl https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n2. 安装git\n\n```\nWindows：下载并安装 git.\nMac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。\nLinux (Ubuntu, Debian)：sudo apt-get install git-core\nLinux (Fedora, Red Hat, CentOS)：sudo yum install git-core\n```\n\n3. 安装Hexo\n\n```\n$ npm install -g hexo-cli\n```\n之后要在博客的文件夹下执行以下命令\n```\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git\n```\n\n# 可视化写博客\n\n借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 `hexo-admin`这款插件。\n\n`hexo-admin` 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到`source/images`目录下,部署博客时同时上传。\n\n另外，还有一款`hexo-admin-qiniu` 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装`hexo-admin`，直接装这个就行了）\n\n网址： [hexo-admin-qiniu github](https://github.com/xbotao/hexo-admin-qiniu)\n\n# hexo 主题\n\n> 说明：在 Hexo 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n\n为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。\n## Next\n\nNext是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。\n\n[Next主题主页](http://theme-next.iissnan.com/)\n\n### 下载主题\n\n``` bash\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n### 启用主题\n\n与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 `_config.yml`， 找到 theme 字段，并将其值更改为 next。\n\n```\n# 启用 NexT 主题\ntheme: next\n```\n到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。\n\n主题设定包括：详细见官网介绍\n- 选择「Scheme」\n- 设置「界面语言」\n- 设置「菜单」\n- 设置「侧栏」\n- 设置「头像」\n- 设置「作者昵称」\n- 设置「站点描述」\n\n### 设置语言\n\n编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：\n\n`language: zh-Hans`\n\n\n# hexo 使用过程中出现的错误\n\n- hexo本地测试运行重启后页面空白,提示 : `WARN No layout: index.html`?\n\n原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库\n\n``` bash\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n","source":"_posts/201805-hexo-blog-system-guide.md","raw":"---\ntitle: hexo 使用记录\ndate: 2018-05-18 11:03:14\ntags:\n---\n\n# 安装\n\n1. 安装Node.js\n\n```\ncurl https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n2. 安装git\n\n```\nWindows：下载并安装 git.\nMac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。\nLinux (Ubuntu, Debian)：sudo apt-get install git-core\nLinux (Fedora, Red Hat, CentOS)：sudo yum install git-core\n```\n\n3. 安装Hexo\n\n```\n$ npm install -g hexo-cli\n```\n之后要在博客的文件夹下执行以下命令\n```\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git\n```\n\n# 可视化写博客\n\n借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 `hexo-admin`这款插件。\n\n`hexo-admin` 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到`source/images`目录下,部署博客时同时上传。\n\n另外，还有一款`hexo-admin-qiniu` 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装`hexo-admin`，直接装这个就行了）\n\n网址： [hexo-admin-qiniu github](https://github.com/xbotao/hexo-admin-qiniu)\n\n# hexo 主题\n\n> 说明：在 Hexo 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n\n为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。\n## Next\n\nNext是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。\n\n[Next主题主页](http://theme-next.iissnan.com/)\n\n### 下载主题\n\n``` bash\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n### 启用主题\n\n与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 `_config.yml`， 找到 theme 字段，并将其值更改为 next。\n\n```\n# 启用 NexT 主题\ntheme: next\n```\n到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。\n\n主题设定包括：详细见官网介绍\n- 选择「Scheme」\n- 设置「界面语言」\n- 设置「菜单」\n- 设置「侧栏」\n- 设置「头像」\n- 设置「作者昵称」\n- 设置「站点描述」\n\n### 设置语言\n\n编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：\n\n`language: zh-Hans`\n\n\n# hexo 使用过程中出现的错误\n\n- hexo本地测试运行重启后页面空白,提示 : `WARN No layout: index.html`?\n\n原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库\n\n``` bash\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n","slug":"hexo-blog-system-guide","published":1,"updated":"2018-05-19T17:19:49.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhdotcku00011uojg7yki6eu","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ol>\n<li>安装Node.js</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装git</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows：下载并安装 git.</span><br><span class=\"line\">Mac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。</span><br><span class=\"line\">Linux (Ubuntu, Debian)：sudo apt-get install git-core</span><br><span class=\"line\">Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>安装Hexo</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>之后要在博客的文件夹下执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"可视化写博客\"><a href=\"#可视化写博客\" class=\"headerlink\" title=\"可视化写博客\"></a>可视化写博客</h1><p>借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 <code>hexo-admin</code>这款插件。</p>\n<p><code>hexo-admin</code> 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到<code>source/images</code>目录下,部署博客时同时上传。</p>\n<p>另外，还有一款<code>hexo-admin-qiniu</code> 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装<code>hexo-admin</code>，直接装这个就行了）</p>\n<p>网址： <a href=\"https://github.com/xbotao/hexo-admin-qiniu\" target=\"_blank\" rel=\"noopener\">hexo-admin-qiniu github</a></p>\n<h1 id=\"hexo-主题\"><a href=\"#hexo-主题\" class=\"headerlink\" title=\"hexo 主题\"></a>hexo 主题</h1><blockquote>\n<p>说明：在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>\n</blockquote>\n<p>为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。</p>\n<h2 id=\"Next\"><a href=\"#Next\" class=\"headerlink\" title=\"Next\"></a>Next</h2><p>Next是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。</p>\n<p><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题主页</a></p>\n<h3 id=\"下载主题\"><a href=\"#下载主题\" class=\"headerlink\" title=\"下载主题\"></a>下载主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> your-hexo-site</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<h3 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 <code>_config.yml</code>， 找到 theme 字段，并将其值更改为 next。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启用 NexT 主题</span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>\n<p>主题设定包括：详细见官网介绍</p>\n<ul>\n<li>选择「Scheme」</li>\n<li>设置「界面语言」</li>\n<li>设置「菜单」</li>\n<li>设置「侧栏」</li>\n<li>设置「头像」</li>\n<li>设置「作者昵称」</li>\n<li>设置「站点描述」</li>\n</ul>\n<h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p>\n<p><code>language: zh-Hans</code></p>\n<h1 id=\"hexo-使用过程中出现的错误\"><a href=\"#hexo-使用过程中出现的错误\" class=\"headerlink\" title=\"hexo 使用过程中出现的错误\"></a>hexo 使用过程中出现的错误</h1><ul>\n<li>hexo本地测试运行重启后页面空白,提示 : <code>WARN No layout: index.html</code>?</li>\n</ul>\n<p>原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ol>\n<li>安装Node.js</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装git</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows：下载并安装 git.</span><br><span class=\"line\">Mac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。</span><br><span class=\"line\">Linux (Ubuntu, Debian)：sudo apt-get install git-core</span><br><span class=\"line\">Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>安装Hexo</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>之后要在博客的文件夹下执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"可视化写博客\"><a href=\"#可视化写博客\" class=\"headerlink\" title=\"可视化写博客\"></a>可视化写博客</h1><p>借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 <code>hexo-admin</code>这款插件。</p>\n<p><code>hexo-admin</code> 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到<code>source/images</code>目录下,部署博客时同时上传。</p>\n<p>另外，还有一款<code>hexo-admin-qiniu</code> 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装<code>hexo-admin</code>，直接装这个就行了）</p>\n<p>网址： <a href=\"https://github.com/xbotao/hexo-admin-qiniu\" target=\"_blank\" rel=\"noopener\">hexo-admin-qiniu github</a></p>\n<h1 id=\"hexo-主题\"><a href=\"#hexo-主题\" class=\"headerlink\" title=\"hexo 主题\"></a>hexo 主题</h1><blockquote>\n<p>说明：在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>\n</blockquote>\n<p>为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。</p>\n<h2 id=\"Next\"><a href=\"#Next\" class=\"headerlink\" title=\"Next\"></a>Next</h2><p>Next是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。</p>\n<p><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题主页</a></p>\n<h3 id=\"下载主题\"><a href=\"#下载主题\" class=\"headerlink\" title=\"下载主题\"></a>下载主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> your-hexo-site</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<h3 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 <code>_config.yml</code>， 找到 theme 字段，并将其值更改为 next。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启用 NexT 主题</span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>\n<p>主题设定包括：详细见官网介绍</p>\n<ul>\n<li>选择「Scheme」</li>\n<li>设置「界面语言」</li>\n<li>设置「菜单」</li>\n<li>设置「侧栏」</li>\n<li>设置「头像」</li>\n<li>设置「作者昵称」</li>\n<li>设置「站点描述」</li>\n</ul>\n<h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p>\n<p><code>language: zh-Hans</code></p>\n<h1 id=\"hexo-使用过程中出现的错误\"><a href=\"#hexo-使用过程中出现的错误\" class=\"headerlink\" title=\"hexo 使用过程中出现的错误\"></a>hexo 使用过程中出现的错误</h1><ul>\n<li>hexo本地测试运行重启后页面空白,提示 : <code>WARN No layout: index.html</code>?</li>\n</ul>\n<p>原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n"},{"title":"vim使用指南及vim快捷键","date":"2018-05-19T17:12:54.000Z","_content":"\n# 移动光标\n\n``` \nh, j, k, l 上，下，左，右\nctrl-e 移动页面\nctrl-f 上翻一页\nctrl-b 下翻一页\nctrl-u 上翻半页\nctrl-d 下翻半页\nw 跳到下一个字首，按标点或单词分割\nW 跳到下一个字首，长跳，如end-of-line被认为是一个字\ne 跳到下一个字尾\nE 跳到下一个字尾，长跳\nb 跳到上一个字\nB 跳到上一个字，长跳\n0 跳至行首，不管有无缩进，就是跳到第0个字符\n^ 跳至行首的第一个字符\n$ 跳至行尾\ngg 跳至文首\nG 调至文尾\n5gg/5G 调至第5行\ngd 跳至当前光标所在的变量的声明处\nfx 在当前行中找x字符，找到了就跳转至\n; 重复上一个f命令，而不用重复的输入fx\n* 查找光标所在处的单词，向下查找\n# 查找光标所在处的单词，向上查找\n```\n\n# 删除复制\n\n```\ndd 删除光标所在行\ndw 删除一个字(word)\nd/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末\np 粘贴粘贴板的内容到当前行的下面\nP 粘贴粘贴板的内容到当前行的上面\n```\n\n# 插入模式\n\n```\ni 从当前光标处进入插入模式\nI 进入插入模式，并置光标于行首\na 追加模式，置光标于当前光标之后\nA 追加模式，置光标于行末\no 在当前行之下新加一行，并进入插入模式\nO 在当前行之上新加一行，并进入插入模式\nEsc 退出插入模式\n```\n\n# 编辑\n\n```\nJ 将下一行和当前行连接为一行\ncc 删除当前行并进入编辑模式\ncw 删除当前字，并进入编辑模式\nc$ 擦除从当前位置至行末的内容，并进入编辑模式\ns 删除当前字符并进入编辑模式\nS 删除光标所在行并进入编辑模式\nxp 交换当前字符和下一个字符\nu 撤销\nctrl+r 重做\n~ 切换大小写，当前字符\n>> 将当前行右移一个单位\n<< 将当前行左移一个单位(一个tab符)\n== 自动缩进当前行\n```\n\n# 查找替换\n```\n/pattern 向后搜索字符串pattern\n?pattern 向前搜索字符串pattern\n\"\\c\" 忽略大小写\n\"\\C\" 大小写敏感\n\nn 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)\nN 上一个匹配(同上)\n:%s/old/new/g 搜索整个文件，将所有的old替换为new\n:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换\n```\n# 退出编辑器\n```\n:w 将缓冲区写入文件，即保存修改\n:wq 保存修改并退出\n:x 保存修改并退出\n:q 退出，如果对缓冲区进行过修改，则会提示\n:q! 强制退出，放弃修改\n```\n# 多文件编辑\n\n```\nvim file1.. 同时打开多个文件\n:args 显示当前编辑文件\n:next 切换到下个文件\n:prev 切换到前个文件\n:next！ 不保存当前编辑文件并切换到下个文件\n:prev！ 不保存当前编辑文件并切换到上个文件\n:wnext 保存当前编辑文件并切换到下个文件\n:wprev 保存当前编辑文件并切换到上个文件\n:first 定位首文件\n:last 定位尾文件\nctrl+^ 快速在最近打开的两个文件间切换\n:split[sp] 把当前文件水平分割\n:split file 把当前窗口水平分割, file\n:vsplit[vsp] file 把当前窗口垂直分割, file\n:new file 同split file\n:close 关闭当前窗口\n:only 只显示当前窗口, 关闭所有其他的窗口\n:all 打开所有的窗口\n:vertical all 打开所有的窗口, 垂直打开\n:qall 对所有窗口执行：q操作\n:qall! 对所有窗口执行：q!操作\n:wall 对所有窗口执行：w操作\n:wqall 对所有窗口执行：wq操作\nctrl-w h 跳转到左边的窗口\nctrl-w j 跳转到下面的窗口\nctrl-w k 跳转到上面的窗口\nctrl-w l 跳转到右边的窗口\nctrl-w t 跳转到最顶上的窗口\nctrl-w b 跳转到最底下的窗口\n```\n# 多标签编辑\n```\n:tabedit file 在新标签中打开文件file\n:tab split file 在新标签中打开文件file\n:tabp 切换到前一个标签\n:tabn 切换到后一个标签\n:tabc 关闭当前标签\n:tabo 关闭其他标签\ngt 到下一个tab\ngT 到上一个tab\n0gt 跳到第一个tab\n5gt 跳到第五个tab\n```\n# 执行shell命令\n\n1、在命令模式下输入\":sh\"，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器\n2、可以\"!command\"，运行结束后自动回到VIM编辑器中\n3、用“Ctrl+Z“回到shell，用fg返回编辑\n4、:!make -> 直接在当前目录下运行make指令\n\n# VIM启动项\n-o[n] 以水平分屏的方式打开多个文件\n-O[n] 以垂直分屏的方式打开多个文件\n\n# 自动排版\n在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定\n\n# 如何在vim中编译程序\n在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make\n编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。\n\n# buffer操作\n\n## buffer状态\n```\n- （非活动的缓冲区）\na （当前被激活缓冲区）\nh （隐藏的缓冲区）\n% （当前的缓冲区）\n# （交换缓冲区）\n= （只读缓冲区）\n+ （已经更改的缓冲区）\n```\n\n# VIM 操作目录\n## 打开目录\n\n```\nvim .\nvim a-path/\n```\n## 以下操作在操作目录时生效\n```\np,P,t,u,U,x,v,o,r,s\n\nc 使当前打开的目录成为当前目录\nd 创建目录\n% 创建文件\nD 删除文件/目录\n- 转到上层目录\ngb 转到上一个 bookmarked directory\ni 改变目录文件列表方式\n^l 刷新当前打开的目录\n\nmf - 标记文件\nmu - unmark all marked files\nmz - Compress/decompress marked files\ngh 显示/不显示隐藏文件( dot-files)\n^h 编辑隐藏文件列表\na 转换显示模式, all - hide - unhide\nqf diplay infomation about file\nqb list the bookmarked directories and directory traversal history\ngi Display information on file\n\nmb\nmc\nmd - 将标记的文件(mf标记文件)使用 diff 模式\nme - 编辑标记的文件,只显示一个，其余放入 buffer 中\nmh\nmm - move marked files to marked-file target directory\nmc - copy\nmp\nmr\nmt\n```\n\nvim 中复制,移动文件\n```\n1, mt - 移动到的目录\n2, mf - 标记要移动的文件\n3, mc - 移动/复制\n```\n\nR 移动文件\n\n打开当前编辑文件的目录\n\n```\n:Explore\n:Hexplore\n:Nexplore\n:Pexplore\n:Sexplore\n:Texplore\n:Vexplore\n```","source":"_posts/201805-vim-guide.md","raw":"---\ntitle: vim使用指南及vim快捷键\ndate: 2018-05-20 01:12:54\ntags: Linux, vim\n---\n\n# 移动光标\n\n``` \nh, j, k, l 上，下，左，右\nctrl-e 移动页面\nctrl-f 上翻一页\nctrl-b 下翻一页\nctrl-u 上翻半页\nctrl-d 下翻半页\nw 跳到下一个字首，按标点或单词分割\nW 跳到下一个字首，长跳，如end-of-line被认为是一个字\ne 跳到下一个字尾\nE 跳到下一个字尾，长跳\nb 跳到上一个字\nB 跳到上一个字，长跳\n0 跳至行首，不管有无缩进，就是跳到第0个字符\n^ 跳至行首的第一个字符\n$ 跳至行尾\ngg 跳至文首\nG 调至文尾\n5gg/5G 调至第5行\ngd 跳至当前光标所在的变量的声明处\nfx 在当前行中找x字符，找到了就跳转至\n; 重复上一个f命令，而不用重复的输入fx\n* 查找光标所在处的单词，向下查找\n# 查找光标所在处的单词，向上查找\n```\n\n# 删除复制\n\n```\ndd 删除光标所在行\ndw 删除一个字(word)\nd/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末\np 粘贴粘贴板的内容到当前行的下面\nP 粘贴粘贴板的内容到当前行的上面\n```\n\n# 插入模式\n\n```\ni 从当前光标处进入插入模式\nI 进入插入模式，并置光标于行首\na 追加模式，置光标于当前光标之后\nA 追加模式，置光标于行末\no 在当前行之下新加一行，并进入插入模式\nO 在当前行之上新加一行，并进入插入模式\nEsc 退出插入模式\n```\n\n# 编辑\n\n```\nJ 将下一行和当前行连接为一行\ncc 删除当前行并进入编辑模式\ncw 删除当前字，并进入编辑模式\nc$ 擦除从当前位置至行末的内容，并进入编辑模式\ns 删除当前字符并进入编辑模式\nS 删除光标所在行并进入编辑模式\nxp 交换当前字符和下一个字符\nu 撤销\nctrl+r 重做\n~ 切换大小写，当前字符\n>> 将当前行右移一个单位\n<< 将当前行左移一个单位(一个tab符)\n== 自动缩进当前行\n```\n\n# 查找替换\n```\n/pattern 向后搜索字符串pattern\n?pattern 向前搜索字符串pattern\n\"\\c\" 忽略大小写\n\"\\C\" 大小写敏感\n\nn 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)\nN 上一个匹配(同上)\n:%s/old/new/g 搜索整个文件，将所有的old替换为new\n:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换\n```\n# 退出编辑器\n```\n:w 将缓冲区写入文件，即保存修改\n:wq 保存修改并退出\n:x 保存修改并退出\n:q 退出，如果对缓冲区进行过修改，则会提示\n:q! 强制退出，放弃修改\n```\n# 多文件编辑\n\n```\nvim file1.. 同时打开多个文件\n:args 显示当前编辑文件\n:next 切换到下个文件\n:prev 切换到前个文件\n:next！ 不保存当前编辑文件并切换到下个文件\n:prev！ 不保存当前编辑文件并切换到上个文件\n:wnext 保存当前编辑文件并切换到下个文件\n:wprev 保存当前编辑文件并切换到上个文件\n:first 定位首文件\n:last 定位尾文件\nctrl+^ 快速在最近打开的两个文件间切换\n:split[sp] 把当前文件水平分割\n:split file 把当前窗口水平分割, file\n:vsplit[vsp] file 把当前窗口垂直分割, file\n:new file 同split file\n:close 关闭当前窗口\n:only 只显示当前窗口, 关闭所有其他的窗口\n:all 打开所有的窗口\n:vertical all 打开所有的窗口, 垂直打开\n:qall 对所有窗口执行：q操作\n:qall! 对所有窗口执行：q!操作\n:wall 对所有窗口执行：w操作\n:wqall 对所有窗口执行：wq操作\nctrl-w h 跳转到左边的窗口\nctrl-w j 跳转到下面的窗口\nctrl-w k 跳转到上面的窗口\nctrl-w l 跳转到右边的窗口\nctrl-w t 跳转到最顶上的窗口\nctrl-w b 跳转到最底下的窗口\n```\n# 多标签编辑\n```\n:tabedit file 在新标签中打开文件file\n:tab split file 在新标签中打开文件file\n:tabp 切换到前一个标签\n:tabn 切换到后一个标签\n:tabc 关闭当前标签\n:tabo 关闭其他标签\ngt 到下一个tab\ngT 到上一个tab\n0gt 跳到第一个tab\n5gt 跳到第五个tab\n```\n# 执行shell命令\n\n1、在命令模式下输入\":sh\"，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器\n2、可以\"!command\"，运行结束后自动回到VIM编辑器中\n3、用“Ctrl+Z“回到shell，用fg返回编辑\n4、:!make -> 直接在当前目录下运行make指令\n\n# VIM启动项\n-o[n] 以水平分屏的方式打开多个文件\n-O[n] 以垂直分屏的方式打开多个文件\n\n# 自动排版\n在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定\n\n# 如何在vim中编译程序\n在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make\n编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。\n\n# buffer操作\n\n## buffer状态\n```\n- （非活动的缓冲区）\na （当前被激活缓冲区）\nh （隐藏的缓冲区）\n% （当前的缓冲区）\n# （交换缓冲区）\n= （只读缓冲区）\n+ （已经更改的缓冲区）\n```\n\n# VIM 操作目录\n## 打开目录\n\n```\nvim .\nvim a-path/\n```\n## 以下操作在操作目录时生效\n```\np,P,t,u,U,x,v,o,r,s\n\nc 使当前打开的目录成为当前目录\nd 创建目录\n% 创建文件\nD 删除文件/目录\n- 转到上层目录\ngb 转到上一个 bookmarked directory\ni 改变目录文件列表方式\n^l 刷新当前打开的目录\n\nmf - 标记文件\nmu - unmark all marked files\nmz - Compress/decompress marked files\ngh 显示/不显示隐藏文件( dot-files)\n^h 编辑隐藏文件列表\na 转换显示模式, all - hide - unhide\nqf diplay infomation about file\nqb list the bookmarked directories and directory traversal history\ngi Display information on file\n\nmb\nmc\nmd - 将标记的文件(mf标记文件)使用 diff 模式\nme - 编辑标记的文件,只显示一个，其余放入 buffer 中\nmh\nmm - move marked files to marked-file target directory\nmc - copy\nmp\nmr\nmt\n```\n\nvim 中复制,移动文件\n```\n1, mt - 移动到的目录\n2, mf - 标记要移动的文件\n3, mc - 移动/复制\n```\n\nR 移动文件\n\n打开当前编辑文件的目录\n\n```\n:Explore\n:Hexplore\n:Nexplore\n:Pexplore\n:Sexplore\n:Texplore\n:Vexplore\n```","slug":"vim-guide","published":1,"updated":"2018-05-20T02:03:02.621Z","_id":"cjhdotckz00031uojpy16n3lw","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"移动光标\"><a href=\"#移动光标\" class=\"headerlink\" title=\"移动光标\"></a>移动光标</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h, j, k, l 上，下，左，右</span><br><span class=\"line\">ctrl-e 移动页面</span><br><span class=\"line\">ctrl-f 上翻一页</span><br><span class=\"line\">ctrl-b 下翻一页</span><br><span class=\"line\">ctrl-u 上翻半页</span><br><span class=\"line\">ctrl-d 下翻半页</span><br><span class=\"line\">w 跳到下一个字首，按标点或单词分割</span><br><span class=\"line\">W 跳到下一个字首，长跳，如end-of-line被认为是一个字</span><br><span class=\"line\">e 跳到下一个字尾</span><br><span class=\"line\">E 跳到下一个字尾，长跳</span><br><span class=\"line\">b 跳到上一个字</span><br><span class=\"line\">B 跳到上一个字，长跳</span><br><span class=\"line\">0 跳至行首，不管有无缩进，就是跳到第0个字符</span><br><span class=\"line\">^ 跳至行首的第一个字符</span><br><span class=\"line\">$ 跳至行尾</span><br><span class=\"line\">gg 跳至文首</span><br><span class=\"line\">G 调至文尾</span><br><span class=\"line\">5gg/5G 调至第5行</span><br><span class=\"line\">gd 跳至当前光标所在的变量的声明处</span><br><span class=\"line\">fx 在当前行中找x字符，找到了就跳转至</span><br><span class=\"line\">; 重复上一个f命令，而不用重复的输入fx</span><br><span class=\"line\">* 查找光标所在处的单词，向下查找</span><br><span class=\"line\"># 查找光标所在处的单词，向上查找</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除复制\"><a href=\"#删除复制\" class=\"headerlink\" title=\"删除复制\"></a>删除复制</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd 删除光标所在行</span><br><span class=\"line\">dw 删除一个字(word)</span><br><span class=\"line\">d/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末</span><br><span class=\"line\">p 粘贴粘贴板的内容到当前行的下面</span><br><span class=\"line\">P 粘贴粘贴板的内容到当前行的上面</span><br></pre></td></tr></table></figure>\n<h1 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i 从当前光标处进入插入模式</span><br><span class=\"line\">I 进入插入模式，并置光标于行首</span><br><span class=\"line\">a 追加模式，置光标于当前光标之后</span><br><span class=\"line\">A 追加模式，置光标于行末</span><br><span class=\"line\">o 在当前行之下新加一行，并进入插入模式</span><br><span class=\"line\">O 在当前行之上新加一行，并进入插入模式</span><br><span class=\"line\">Esc 退出插入模式</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J 将下一行和当前行连接为一行</span><br><span class=\"line\">cc 删除当前行并进入编辑模式</span><br><span class=\"line\">cw 删除当前字，并进入编辑模式</span><br><span class=\"line\">c$ 擦除从当前位置至行末的内容，并进入编辑模式</span><br><span class=\"line\">s 删除当前字符并进入编辑模式</span><br><span class=\"line\">S 删除光标所在行并进入编辑模式</span><br><span class=\"line\">xp 交换当前字符和下一个字符</span><br><span class=\"line\">u 撤销</span><br><span class=\"line\">ctrl+r 重做</span><br><span class=\"line\">~ 切换大小写，当前字符</span><br><span class=\"line\">&gt;&gt; 将当前行右移一个单位</span><br><span class=\"line\">&lt;&lt; 将当前行左移一个单位(一个tab符)</span><br><span class=\"line\">== 自动缩进当前行</span><br></pre></td></tr></table></figure>\n<h1 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/pattern 向后搜索字符串pattern</span><br><span class=\"line\">?pattern 向前搜索字符串pattern</span><br><span class=\"line\">&quot;\\c&quot; 忽略大小写</span><br><span class=\"line\">&quot;\\C&quot; 大小写敏感</span><br><span class=\"line\"></span><br><span class=\"line\">n 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)</span><br><span class=\"line\">N 上一个匹配(同上)</span><br><span class=\"line\">:%s/old/new/g 搜索整个文件，将所有的old替换为new</span><br><span class=\"line\">:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换</span><br></pre></td></tr></table></figure>\n<h1 id=\"退出编辑器\"><a href=\"#退出编辑器\" class=\"headerlink\" title=\"退出编辑器\"></a>退出编辑器</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:w 将缓冲区写入文件，即保存修改</span><br><span class=\"line\">:wq 保存修改并退出</span><br><span class=\"line\">:x 保存修改并退出</span><br><span class=\"line\">:q 退出，如果对缓冲区进行过修改，则会提示</span><br><span class=\"line\">:q! 强制退出，放弃修改</span><br></pre></td></tr></table></figure>\n<h1 id=\"多文件编辑\"><a href=\"#多文件编辑\" class=\"headerlink\" title=\"多文件编辑\"></a>多文件编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim file1.. 同时打开多个文件</span><br><span class=\"line\">:args 显示当前编辑文件</span><br><span class=\"line\">:next 切换到下个文件</span><br><span class=\"line\">:prev 切换到前个文件</span><br><span class=\"line\">:next！ 不保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:prev！ 不保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:wnext 保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:wprev 保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:first 定位首文件</span><br><span class=\"line\">:last 定位尾文件</span><br><span class=\"line\">ctrl+^ 快速在最近打开的两个文件间切换</span><br><span class=\"line\">:split[sp] 把当前文件水平分割</span><br><span class=\"line\">:split file 把当前窗口水平分割, file</span><br><span class=\"line\">:vsplit[vsp] file 把当前窗口垂直分割, file</span><br><span class=\"line\">:new file 同split file</span><br><span class=\"line\">:close 关闭当前窗口</span><br><span class=\"line\">:only 只显示当前窗口, 关闭所有其他的窗口</span><br><span class=\"line\">:all 打开所有的窗口</span><br><span class=\"line\">:vertical all 打开所有的窗口, 垂直打开</span><br><span class=\"line\">:qall 对所有窗口执行：q操作</span><br><span class=\"line\">:qall! 对所有窗口执行：q!操作</span><br><span class=\"line\">:wall 对所有窗口执行：w操作</span><br><span class=\"line\">:wqall 对所有窗口执行：wq操作</span><br><span class=\"line\">ctrl-w h 跳转到左边的窗口</span><br><span class=\"line\">ctrl-w j 跳转到下面的窗口</span><br><span class=\"line\">ctrl-w k 跳转到上面的窗口</span><br><span class=\"line\">ctrl-w l 跳转到右边的窗口</span><br><span class=\"line\">ctrl-w t 跳转到最顶上的窗口</span><br><span class=\"line\">ctrl-w b 跳转到最底下的窗口</span><br></pre></td></tr></table></figure>\n<h1 id=\"多标签编辑\"><a href=\"#多标签编辑\" class=\"headerlink\" title=\"多标签编辑\"></a>多标签编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:tabedit file 在新标签中打开文件file</span><br><span class=\"line\">:tab split file 在新标签中打开文件file</span><br><span class=\"line\">:tabp 切换到前一个标签</span><br><span class=\"line\">:tabn 切换到后一个标签</span><br><span class=\"line\">:tabc 关闭当前标签</span><br><span class=\"line\">:tabo 关闭其他标签</span><br><span class=\"line\">gt 到下一个tab</span><br><span class=\"line\">gT 到上一个tab</span><br><span class=\"line\">0gt 跳到第一个tab</span><br><span class=\"line\">5gt 跳到第五个tab</span><br></pre></td></tr></table></figure>\n<h1 id=\"执行shell命令\"><a href=\"#执行shell命令\" class=\"headerlink\" title=\"执行shell命令\"></a>执行shell命令</h1><p>1、在命令模式下输入”:sh”，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器<br>2、可以”!command”，运行结束后自动回到VIM编辑器中<br>3、用“Ctrl+Z“回到shell，用fg返回编辑<br>4、:!make -&gt; 直接在当前目录下运行make指令</p>\n<h1 id=\"VIM启动项\"><a href=\"#VIM启动项\" class=\"headerlink\" title=\"VIM启动项\"></a>VIM启动项</h1><p>-o[n] 以水平分屏的方式打开多个文件<br>-O[n] 以垂直分屏的方式打开多个文件</p>\n<h1 id=\"自动排版\"><a href=\"#自动排版\" class=\"headerlink\" title=\"自动排版\"></a>自动排版</h1><p>在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定</p>\n<h1 id=\"如何在vim中编译程序\"><a href=\"#如何在vim中编译程序\" class=\"headerlink\" title=\"如何在vim中编译程序\"></a>如何在vim中编译程序</h1><p>在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make<br>编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。</p>\n<h1 id=\"buffer操作\"><a href=\"#buffer操作\" class=\"headerlink\" title=\"buffer操作\"></a>buffer操作</h1><h2 id=\"buffer状态\"><a href=\"#buffer状态\" class=\"headerlink\" title=\"buffer状态\"></a>buffer状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- （非活动的缓冲区）</span><br><span class=\"line\">a （当前被激活缓冲区）</span><br><span class=\"line\">h （隐藏的缓冲区）</span><br><span class=\"line\">% （当前的缓冲区）</span><br><span class=\"line\"># （交换缓冲区）</span><br><span class=\"line\">= （只读缓冲区）</span><br><span class=\"line\">+ （已经更改的缓冲区）</span><br></pre></td></tr></table></figure>\n<h1 id=\"VIM-操作目录\"><a href=\"#VIM-操作目录\" class=\"headerlink\" title=\"VIM 操作目录\"></a>VIM 操作目录</h1><h2 id=\"打开目录\"><a href=\"#打开目录\" class=\"headerlink\" title=\"打开目录\"></a>打开目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .</span><br><span class=\"line\">vim a-path/</span><br></pre></td></tr></table></figure>\n<h2 id=\"以下操作在操作目录时生效\"><a href=\"#以下操作在操作目录时生效\" class=\"headerlink\" title=\"以下操作在操作目录时生效\"></a>以下操作在操作目录时生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p,P,t,u,U,x,v,o,r,s</span><br><span class=\"line\"></span><br><span class=\"line\">c 使当前打开的目录成为当前目录</span><br><span class=\"line\">d 创建目录</span><br><span class=\"line\">% 创建文件</span><br><span class=\"line\">D 删除文件/目录</span><br><span class=\"line\">- 转到上层目录</span><br><span class=\"line\">gb 转到上一个 bookmarked directory</span><br><span class=\"line\">i 改变目录文件列表方式</span><br><span class=\"line\">^l 刷新当前打开的目录</span><br><span class=\"line\"></span><br><span class=\"line\">mf - 标记文件</span><br><span class=\"line\">mu - unmark all marked files</span><br><span class=\"line\">mz - Compress/decompress marked files</span><br><span class=\"line\">gh 显示/不显示隐藏文件( dot-files)</span><br><span class=\"line\">^h 编辑隐藏文件列表</span><br><span class=\"line\">a 转换显示模式, all - hide - unhide</span><br><span class=\"line\">qf diplay infomation about file</span><br><span class=\"line\">qb list the bookmarked directories and directory traversal history</span><br><span class=\"line\">gi Display information on file</span><br><span class=\"line\"></span><br><span class=\"line\">mb</span><br><span class=\"line\">mc</span><br><span class=\"line\">md - 将标记的文件(mf标记文件)使用 diff 模式</span><br><span class=\"line\">me - 编辑标记的文件,只显示一个，其余放入 buffer 中</span><br><span class=\"line\">mh</span><br><span class=\"line\">mm - move marked files to marked-file target directory</span><br><span class=\"line\">mc - copy</span><br><span class=\"line\">mp</span><br><span class=\"line\">mr</span><br><span class=\"line\">mt</span><br></pre></td></tr></table></figure>\n<p>vim 中复制,移动文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1, mt - 移动到的目录</span><br><span class=\"line\">2, mf - 标记要移动的文件</span><br><span class=\"line\">3, mc - 移动/复制</span><br></pre></td></tr></table></figure></p>\n<p>R 移动文件</p>\n<p>打开当前编辑文件的目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:Explore</span><br><span class=\"line\">:Hexplore</span><br><span class=\"line\">:Nexplore</span><br><span class=\"line\">:Pexplore</span><br><span class=\"line\">:Sexplore</span><br><span class=\"line\">:Texplore</span><br><span class=\"line\">:Vexplore</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"移动光标\"><a href=\"#移动光标\" class=\"headerlink\" title=\"移动光标\"></a>移动光标</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h, j, k, l 上，下，左，右</span><br><span class=\"line\">ctrl-e 移动页面</span><br><span class=\"line\">ctrl-f 上翻一页</span><br><span class=\"line\">ctrl-b 下翻一页</span><br><span class=\"line\">ctrl-u 上翻半页</span><br><span class=\"line\">ctrl-d 下翻半页</span><br><span class=\"line\">w 跳到下一个字首，按标点或单词分割</span><br><span class=\"line\">W 跳到下一个字首，长跳，如end-of-line被认为是一个字</span><br><span class=\"line\">e 跳到下一个字尾</span><br><span class=\"line\">E 跳到下一个字尾，长跳</span><br><span class=\"line\">b 跳到上一个字</span><br><span class=\"line\">B 跳到上一个字，长跳</span><br><span class=\"line\">0 跳至行首，不管有无缩进，就是跳到第0个字符</span><br><span class=\"line\">^ 跳至行首的第一个字符</span><br><span class=\"line\">$ 跳至行尾</span><br><span class=\"line\">gg 跳至文首</span><br><span class=\"line\">G 调至文尾</span><br><span class=\"line\">5gg/5G 调至第5行</span><br><span class=\"line\">gd 跳至当前光标所在的变量的声明处</span><br><span class=\"line\">fx 在当前行中找x字符，找到了就跳转至</span><br><span class=\"line\">; 重复上一个f命令，而不用重复的输入fx</span><br><span class=\"line\">* 查找光标所在处的单词，向下查找</span><br><span class=\"line\"># 查找光标所在处的单词，向上查找</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除复制\"><a href=\"#删除复制\" class=\"headerlink\" title=\"删除复制\"></a>删除复制</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd 删除光标所在行</span><br><span class=\"line\">dw 删除一个字(word)</span><br><span class=\"line\">d/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末</span><br><span class=\"line\">p 粘贴粘贴板的内容到当前行的下面</span><br><span class=\"line\">P 粘贴粘贴板的内容到当前行的上面</span><br></pre></td></tr></table></figure>\n<h1 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i 从当前光标处进入插入模式</span><br><span class=\"line\">I 进入插入模式，并置光标于行首</span><br><span class=\"line\">a 追加模式，置光标于当前光标之后</span><br><span class=\"line\">A 追加模式，置光标于行末</span><br><span class=\"line\">o 在当前行之下新加一行，并进入插入模式</span><br><span class=\"line\">O 在当前行之上新加一行，并进入插入模式</span><br><span class=\"line\">Esc 退出插入模式</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J 将下一行和当前行连接为一行</span><br><span class=\"line\">cc 删除当前行并进入编辑模式</span><br><span class=\"line\">cw 删除当前字，并进入编辑模式</span><br><span class=\"line\">c$ 擦除从当前位置至行末的内容，并进入编辑模式</span><br><span class=\"line\">s 删除当前字符并进入编辑模式</span><br><span class=\"line\">S 删除光标所在行并进入编辑模式</span><br><span class=\"line\">xp 交换当前字符和下一个字符</span><br><span class=\"line\">u 撤销</span><br><span class=\"line\">ctrl+r 重做</span><br><span class=\"line\">~ 切换大小写，当前字符</span><br><span class=\"line\">&gt;&gt; 将当前行右移一个单位</span><br><span class=\"line\">&lt;&lt; 将当前行左移一个单位(一个tab符)</span><br><span class=\"line\">== 自动缩进当前行</span><br></pre></td></tr></table></figure>\n<h1 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/pattern 向后搜索字符串pattern</span><br><span class=\"line\">?pattern 向前搜索字符串pattern</span><br><span class=\"line\">&quot;\\c&quot; 忽略大小写</span><br><span class=\"line\">&quot;\\C&quot; 大小写敏感</span><br><span class=\"line\"></span><br><span class=\"line\">n 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)</span><br><span class=\"line\">N 上一个匹配(同上)</span><br><span class=\"line\">:%s/old/new/g 搜索整个文件，将所有的old替换为new</span><br><span class=\"line\">:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换</span><br></pre></td></tr></table></figure>\n<h1 id=\"退出编辑器\"><a href=\"#退出编辑器\" class=\"headerlink\" title=\"退出编辑器\"></a>退出编辑器</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:w 将缓冲区写入文件，即保存修改</span><br><span class=\"line\">:wq 保存修改并退出</span><br><span class=\"line\">:x 保存修改并退出</span><br><span class=\"line\">:q 退出，如果对缓冲区进行过修改，则会提示</span><br><span class=\"line\">:q! 强制退出，放弃修改</span><br></pre></td></tr></table></figure>\n<h1 id=\"多文件编辑\"><a href=\"#多文件编辑\" class=\"headerlink\" title=\"多文件编辑\"></a>多文件编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim file1.. 同时打开多个文件</span><br><span class=\"line\">:args 显示当前编辑文件</span><br><span class=\"line\">:next 切换到下个文件</span><br><span class=\"line\">:prev 切换到前个文件</span><br><span class=\"line\">:next！ 不保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:prev！ 不保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:wnext 保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:wprev 保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:first 定位首文件</span><br><span class=\"line\">:last 定位尾文件</span><br><span class=\"line\">ctrl+^ 快速在最近打开的两个文件间切换</span><br><span class=\"line\">:split[sp] 把当前文件水平分割</span><br><span class=\"line\">:split file 把当前窗口水平分割, file</span><br><span class=\"line\">:vsplit[vsp] file 把当前窗口垂直分割, file</span><br><span class=\"line\">:new file 同split file</span><br><span class=\"line\">:close 关闭当前窗口</span><br><span class=\"line\">:only 只显示当前窗口, 关闭所有其他的窗口</span><br><span class=\"line\">:all 打开所有的窗口</span><br><span class=\"line\">:vertical all 打开所有的窗口, 垂直打开</span><br><span class=\"line\">:qall 对所有窗口执行：q操作</span><br><span class=\"line\">:qall! 对所有窗口执行：q!操作</span><br><span class=\"line\">:wall 对所有窗口执行：w操作</span><br><span class=\"line\">:wqall 对所有窗口执行：wq操作</span><br><span class=\"line\">ctrl-w h 跳转到左边的窗口</span><br><span class=\"line\">ctrl-w j 跳转到下面的窗口</span><br><span class=\"line\">ctrl-w k 跳转到上面的窗口</span><br><span class=\"line\">ctrl-w l 跳转到右边的窗口</span><br><span class=\"line\">ctrl-w t 跳转到最顶上的窗口</span><br><span class=\"line\">ctrl-w b 跳转到最底下的窗口</span><br></pre></td></tr></table></figure>\n<h1 id=\"多标签编辑\"><a href=\"#多标签编辑\" class=\"headerlink\" title=\"多标签编辑\"></a>多标签编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:tabedit file 在新标签中打开文件file</span><br><span class=\"line\">:tab split file 在新标签中打开文件file</span><br><span class=\"line\">:tabp 切换到前一个标签</span><br><span class=\"line\">:tabn 切换到后一个标签</span><br><span class=\"line\">:tabc 关闭当前标签</span><br><span class=\"line\">:tabo 关闭其他标签</span><br><span class=\"line\">gt 到下一个tab</span><br><span class=\"line\">gT 到上一个tab</span><br><span class=\"line\">0gt 跳到第一个tab</span><br><span class=\"line\">5gt 跳到第五个tab</span><br></pre></td></tr></table></figure>\n<h1 id=\"执行shell命令\"><a href=\"#执行shell命令\" class=\"headerlink\" title=\"执行shell命令\"></a>执行shell命令</h1><p>1、在命令模式下输入”:sh”，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器<br>2、可以”!command”，运行结束后自动回到VIM编辑器中<br>3、用“Ctrl+Z“回到shell，用fg返回编辑<br>4、:!make -&gt; 直接在当前目录下运行make指令</p>\n<h1 id=\"VIM启动项\"><a href=\"#VIM启动项\" class=\"headerlink\" title=\"VIM启动项\"></a>VIM启动项</h1><p>-o[n] 以水平分屏的方式打开多个文件<br>-O[n] 以垂直分屏的方式打开多个文件</p>\n<h1 id=\"自动排版\"><a href=\"#自动排版\" class=\"headerlink\" title=\"自动排版\"></a>自动排版</h1><p>在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定</p>\n<h1 id=\"如何在vim中编译程序\"><a href=\"#如何在vim中编译程序\" class=\"headerlink\" title=\"如何在vim中编译程序\"></a>如何在vim中编译程序</h1><p>在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make<br>编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。</p>\n<h1 id=\"buffer操作\"><a href=\"#buffer操作\" class=\"headerlink\" title=\"buffer操作\"></a>buffer操作</h1><h2 id=\"buffer状态\"><a href=\"#buffer状态\" class=\"headerlink\" title=\"buffer状态\"></a>buffer状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- （非活动的缓冲区）</span><br><span class=\"line\">a （当前被激活缓冲区）</span><br><span class=\"line\">h （隐藏的缓冲区）</span><br><span class=\"line\">% （当前的缓冲区）</span><br><span class=\"line\"># （交换缓冲区）</span><br><span class=\"line\">= （只读缓冲区）</span><br><span class=\"line\">+ （已经更改的缓冲区）</span><br></pre></td></tr></table></figure>\n<h1 id=\"VIM-操作目录\"><a href=\"#VIM-操作目录\" class=\"headerlink\" title=\"VIM 操作目录\"></a>VIM 操作目录</h1><h2 id=\"打开目录\"><a href=\"#打开目录\" class=\"headerlink\" title=\"打开目录\"></a>打开目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .</span><br><span class=\"line\">vim a-path/</span><br></pre></td></tr></table></figure>\n<h2 id=\"以下操作在操作目录时生效\"><a href=\"#以下操作在操作目录时生效\" class=\"headerlink\" title=\"以下操作在操作目录时生效\"></a>以下操作在操作目录时生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p,P,t,u,U,x,v,o,r,s</span><br><span class=\"line\"></span><br><span class=\"line\">c 使当前打开的目录成为当前目录</span><br><span class=\"line\">d 创建目录</span><br><span class=\"line\">% 创建文件</span><br><span class=\"line\">D 删除文件/目录</span><br><span class=\"line\">- 转到上层目录</span><br><span class=\"line\">gb 转到上一个 bookmarked directory</span><br><span class=\"line\">i 改变目录文件列表方式</span><br><span class=\"line\">^l 刷新当前打开的目录</span><br><span class=\"line\"></span><br><span class=\"line\">mf - 标记文件</span><br><span class=\"line\">mu - unmark all marked files</span><br><span class=\"line\">mz - Compress/decompress marked files</span><br><span class=\"line\">gh 显示/不显示隐藏文件( dot-files)</span><br><span class=\"line\">^h 编辑隐藏文件列表</span><br><span class=\"line\">a 转换显示模式, all - hide - unhide</span><br><span class=\"line\">qf diplay infomation about file</span><br><span class=\"line\">qb list the bookmarked directories and directory traversal history</span><br><span class=\"line\">gi Display information on file</span><br><span class=\"line\"></span><br><span class=\"line\">mb</span><br><span class=\"line\">mc</span><br><span class=\"line\">md - 将标记的文件(mf标记文件)使用 diff 模式</span><br><span class=\"line\">me - 编辑标记的文件,只显示一个，其余放入 buffer 中</span><br><span class=\"line\">mh</span><br><span class=\"line\">mm - move marked files to marked-file target directory</span><br><span class=\"line\">mc - copy</span><br><span class=\"line\">mp</span><br><span class=\"line\">mr</span><br><span class=\"line\">mt</span><br></pre></td></tr></table></figure>\n<p>vim 中复制,移动文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1, mt - 移动到的目录</span><br><span class=\"line\">2, mf - 标记要移动的文件</span><br><span class=\"line\">3, mc - 移动/复制</span><br></pre></td></tr></table></figure></p>\n<p>R 移动文件</p>\n<p>打开当前编辑文件的目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:Explore</span><br><span class=\"line\">:Hexplore</span><br><span class=\"line\">:Nexplore</span><br><span class=\"line\">:Pexplore</span><br><span class=\"line\">:Sexplore</span><br><span class=\"line\">:Texplore</span><br><span class=\"line\">:Vexplore</span><br></pre></td></tr></table></figure>"},{"title":"scala array list tuple and so on","date":"2018-05-20T02:11:31.000Z","_content":"\n# Array 类型参数化数组\n\nscala Array 的初始化\n\n``` java\n// 简洁的方法创造和初始化：\nval numNames = Array(\"zero\", \"one\", \"two\")\n\n// 更罗嗦的调用 apply 方法：\nval numNames2 = Array.apply(\"zero\", \"one\", \"two\") \n```\n\n``` java\nobject HelloWorld \n{\n\n    def main(args: Array[String]) \n    {\n      val greetStrings = new Array[String](3)  \n\n      greetStrings(0) = \"Scala: Hello\" \n      greetStrings(1) = \", \" \n      greetStrings(2) = \"world!\\n\" \n      for (i <- 0 to 2) \n           print(greetStrings(i)) \n    }\n\n}\n// 输出结果：Scala: Hello, world!\n```\n\nScala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。\n\n`val` 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。\n\n> 在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。\n\n# 使用列表【List】\n\nScala `Array` 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。\n\nScala的List类是共享相同类型的不可变对象序列。\n\n和数组一样，List[String]包含的仅仅是String。 \nScala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。\n\n``` java\n// 创建一个Scala的List很简单\nval oneTwoThree = List(1, 2, 3)\n\n```\n上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。\n\n## List 操作\n\n这个List可以这么用：\n\n``` java\nval oneTwo = List(1, 2)  \nval threeFour = List(3, 4) \nval oneTwoThreeFour = oneTwo ::: threeFour  // ::: 拼接List\n\nprintln(oneTwo + \" 和 \" + threeFour + \" 是不可变的\")  \nprintln(oneTwoThreeFour + \" 是个新列表了\")\n\n// 运行结果:\n// List(1, 2) 和 List(3, 4) 是不可变的\n// List(1, 2, 3, 4) 是个新列表了\n```\n\nList最常用的操作符是发音为”cons”的” :: “. 例如，\n\n``` java\nval twoThree = List(2, 3)\nval oneTwoThree = 1 :: twoThree  // 拼接元素 和 List\nprintln(oneTwoThree) \n\n// 结果为：List(1, 2, 3) \n```\n\n类List没有提供append操作。 \n如果你想通过添加元素来构造列表： \n- 前缀进去，完成之后再调用reverse； \n- 使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。\n\n# 使用元组【Tuple】\n\n另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。\n\n列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。\n\nScala里你可以简单地返回一个元组。 \n而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。 \n一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。\n\n一个例子：\n\n``` java\nval pair = (99, \"Luftballons\")  //Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。\nprintln(pair._1)                //访问_1字段，从而输出第一个元素，99。\nprintln(pair._2)                \n\n// 运行结果\n// 99\n// Luftballons\n```\n\n元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。\n\n元组的实际类型取决于它含有的元素数量和这些元素的类型。 \n因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。\n\n类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。\n\n## 访问元组的元素\n\n为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？ \n因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。 \n_1可以有一个结果类型，_2是另外一个。 \n\n> 另：元组元素编号从1开始。\n\n# 使用Set和Map\n\n当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。\n\n对于集和映射，Scala把可变性建模在类继承中。\n\n例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。\n\nScala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。\n\n如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。\n\n创造集的缺省方法实例：\n\n``` java\nvar jetSet = Set(\"Boeing\", \"Airbus\")  //定义了名为jetSet的新var，包含两个字串\njetSet += \"Lear\"                      // jetSet = jetSet + \"Lear\" \nprintln(jetSet.contains(\"Cessna\"))    //打印输出集是否包含字串\"Cessna\"。\nprintln(jetSet.contains(\"Lear\"))      //打印输出集是否包含字串\"Lear\"。\n\n// 运行结果：\n// false\n// true\n```\n\n需要不可变集，就需要使用一个引用：import，如下所示：\n\n``` java\nimport scala.collection.mutable.Set  \n\nval movieSet = Set(\"Hitch\", \"Poltergeist\")  \nmovieSet += \"Shrek\" \nprintln(movieSet)  \n\n// 运行结果：\n// Set(Poltergeist, Shrek, Hitch)\n```\n\n需要一个不可变的HashSet，你可以这么做：\n\n``` java\nimport scala.collection.immutable.HashSet  \nval hashSet = HashSet(\"Tomatoes\", \"Chilies\")  \nprintln(hashSet + \"Coriander\") \n\n// 运行结果\n// Set(Chilies, Tomatoes, Coriander)\n```\n\nMap是Scala里另一种有用的集合类。 \n和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。\n\n`scala.collection` 包里面有一个基础Map特质和两个子特质Map： \n可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。\n\n可变映射的创造过程：\n\n``` java\nimport scala.collection.mutable.Map  \n\nval treasureMap = Map[Int, String]()  \ntreasureMap += (1 -> \"我在\")  \ntreasureMap += (2 -> \"学习\")  \ntreasureMap += (3 -> \"Scala\")  \nprintln(treasureMap(1) + treasureMap(2) + treasureMap(3)) \n\n// 运行结果：\n// 我在学习Scala.\n```\n\n至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：\n\n``` java\nval romanNumeral = Map(      \n        1 -> \"我\", 2 -> \"是\", 3 -> \"缺\", 4 -> \"省\", 5 -> \"的\" )  \nprintln(romanNumeral(1) + romanNumeral(2) + romanNumeral(3) + romanNumeral(4) + romanNumeral(5))  \n\n// 运行结果：\n// 我是缺省的\n```","source":"_posts/201805-scala-array-list-tuple-and-so-on.md","raw":"---\ntitle: scala array list tuple and so on\ndate: 2018-05-20 10:11:31\ntags:\n---\n\n# Array 类型参数化数组\n\nscala Array 的初始化\n\n``` java\n// 简洁的方法创造和初始化：\nval numNames = Array(\"zero\", \"one\", \"two\")\n\n// 更罗嗦的调用 apply 方法：\nval numNames2 = Array.apply(\"zero\", \"one\", \"two\") \n```\n\n``` java\nobject HelloWorld \n{\n\n    def main(args: Array[String]) \n    {\n      val greetStrings = new Array[String](3)  \n\n      greetStrings(0) = \"Scala: Hello\" \n      greetStrings(1) = \", \" \n      greetStrings(2) = \"world!\\n\" \n      for (i <- 0 to 2) \n           print(greetStrings(i)) \n    }\n\n}\n// 输出结果：Scala: Hello, world!\n```\n\nScala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。\n\n`val` 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。\n\n> 在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。\n\n# 使用列表【List】\n\nScala `Array` 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。\n\nScala的List类是共享相同类型的不可变对象序列。\n\n和数组一样，List[String]包含的仅仅是String。 \nScala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。\n\n``` java\n// 创建一个Scala的List很简单\nval oneTwoThree = List(1, 2, 3)\n\n```\n上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。\n\n## List 操作\n\n这个List可以这么用：\n\n``` java\nval oneTwo = List(1, 2)  \nval threeFour = List(3, 4) \nval oneTwoThreeFour = oneTwo ::: threeFour  // ::: 拼接List\n\nprintln(oneTwo + \" 和 \" + threeFour + \" 是不可变的\")  \nprintln(oneTwoThreeFour + \" 是个新列表了\")\n\n// 运行结果:\n// List(1, 2) 和 List(3, 4) 是不可变的\n// List(1, 2, 3, 4) 是个新列表了\n```\n\nList最常用的操作符是发音为”cons”的” :: “. 例如，\n\n``` java\nval twoThree = List(2, 3)\nval oneTwoThree = 1 :: twoThree  // 拼接元素 和 List\nprintln(oneTwoThree) \n\n// 结果为：List(1, 2, 3) \n```\n\n类List没有提供append操作。 \n如果你想通过添加元素来构造列表： \n- 前缀进去，完成之后再调用reverse； \n- 使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。\n\n# 使用元组【Tuple】\n\n另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。\n\n列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。\n\nScala里你可以简单地返回一个元组。 \n而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。 \n一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。\n\n一个例子：\n\n``` java\nval pair = (99, \"Luftballons\")  //Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。\nprintln(pair._1)                //访问_1字段，从而输出第一个元素，99。\nprintln(pair._2)                \n\n// 运行结果\n// 99\n// Luftballons\n```\n\n元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。\n\n元组的实际类型取决于它含有的元素数量和这些元素的类型。 \n因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。\n\n类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。\n\n## 访问元组的元素\n\n为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？ \n因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。 \n_1可以有一个结果类型，_2是另外一个。 \n\n> 另：元组元素编号从1开始。\n\n# 使用Set和Map\n\n当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。\n\n对于集和映射，Scala把可变性建模在类继承中。\n\n例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。\n\nScala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。\n\n如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。\n\n创造集的缺省方法实例：\n\n``` java\nvar jetSet = Set(\"Boeing\", \"Airbus\")  //定义了名为jetSet的新var，包含两个字串\njetSet += \"Lear\"                      // jetSet = jetSet + \"Lear\" \nprintln(jetSet.contains(\"Cessna\"))    //打印输出集是否包含字串\"Cessna\"。\nprintln(jetSet.contains(\"Lear\"))      //打印输出集是否包含字串\"Lear\"。\n\n// 运行结果：\n// false\n// true\n```\n\n需要不可变集，就需要使用一个引用：import，如下所示：\n\n``` java\nimport scala.collection.mutable.Set  \n\nval movieSet = Set(\"Hitch\", \"Poltergeist\")  \nmovieSet += \"Shrek\" \nprintln(movieSet)  \n\n// 运行结果：\n// Set(Poltergeist, Shrek, Hitch)\n```\n\n需要一个不可变的HashSet，你可以这么做：\n\n``` java\nimport scala.collection.immutable.HashSet  \nval hashSet = HashSet(\"Tomatoes\", \"Chilies\")  \nprintln(hashSet + \"Coriander\") \n\n// 运行结果\n// Set(Chilies, Tomatoes, Coriander)\n```\n\nMap是Scala里另一种有用的集合类。 \n和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。\n\n`scala.collection` 包里面有一个基础Map特质和两个子特质Map： \n可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。\n\n可变映射的创造过程：\n\n``` java\nimport scala.collection.mutable.Map  \n\nval treasureMap = Map[Int, String]()  \ntreasureMap += (1 -> \"我在\")  \ntreasureMap += (2 -> \"学习\")  \ntreasureMap += (3 -> \"Scala\")  \nprintln(treasureMap(1) + treasureMap(2) + treasureMap(3)) \n\n// 运行结果：\n// 我在学习Scala.\n```\n\n至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：\n\n``` java\nval romanNumeral = Map(      \n        1 -> \"我\", 2 -> \"是\", 3 -> \"缺\", 4 -> \"省\", 5 -> \"的\" )  \nprintln(romanNumeral(1) + romanNumeral(2) + romanNumeral(3) + romanNumeral(4) + romanNumeral(5))  \n\n// 运行结果：\n// 我是缺省的\n```","slug":"scala-array-list-tuple-and-so-on","published":1,"updated":"2018-05-21T12:31:55.368Z","_id":"cjhe6r80z0000qkojuyz1tspd","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Array-类型参数化数组\"><a href=\"#Array-类型参数化数组\" class=\"headerlink\" title=\"Array 类型参数化数组\"></a>Array 类型参数化数组</h1><p>scala Array 的初始化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简洁的方法创造和初始化：</span></span><br><span class=\"line\">val numNames = Array(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 更罗嗦的调用 apply 方法：</span></span><br><span class=\"line\">val numNames2 = Array.apply(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object HelloWorld </span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">def <span class=\"title\">main</span><span class=\"params\">(args: Array[String])</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      val greetStrings = <span class=\"keyword\">new</span> Array[String](<span class=\"number\">3</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\">      greetStrings(<span class=\"number\">0</span>) = <span class=\"string\">\"Scala: Hello\"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">1</span>) = <span class=\"string\">\", \"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">2</span>) = <span class=\"string\">\"world!\\n\"</span> </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i &lt;- <span class=\"number\">0</span> to <span class=\"number\">2</span>) </span><br><span class=\"line\">           print(greetStrings(i)) </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出结果：Scala: Hello, world!</span></span><br></pre></td></tr></table></figure>\n<p>Scala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。</p>\n<p><code>val</code> 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。</p>\n<blockquote>\n<p>在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。</p>\n</blockquote>\n<h1 id=\"使用列表【List】\"><a href=\"#使用列表【List】\" class=\"headerlink\" title=\"使用列表【List】\"></a>使用列表【List】</h1><p>Scala <code>Array</code> 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。</p>\n<p>Scala的List类是共享相同类型的不可变对象序列。</p>\n<p>和数组一样，List[String]包含的仅仅是String。<br>Scala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个Scala的List很简单</span></span><br><span class=\"line\">val oneTwoThree = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n<p>上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。</p>\n<h2 id=\"List-操作\"><a href=\"#List-操作\" class=\"headerlink\" title=\"List 操作\"></a>List 操作</h2><p>这个List可以这么用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val oneTwo = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>)  </span><br><span class=\"line\">val threeFour = List(<span class=\"number\">3</span>, <span class=\"number\">4</span>) </span><br><span class=\"line\">val oneTwoThreeFour = oneTwo ::: threeFour  <span class=\"comment\">// ::: 拼接List</span></span><br><span class=\"line\"></span><br><span class=\"line\">println(oneTwo + <span class=\"string\">\" 和 \"</span> + threeFour + <span class=\"string\">\" 是不可变的\"</span>)  </span><br><span class=\"line\">println(oneTwoThreeFour + <span class=\"string\">\" 是个新列表了\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果:</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2) 和 List(3, 4) 是不可变的</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2, 3, 4) 是个新列表了</span></span><br></pre></td></tr></table></figure>\n<p>List最常用的操作符是发音为”cons”的” :: “. 例如，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val twoThree = List(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">val oneTwoThree = <span class=\"number\">1</span> :: twoThree  <span class=\"comment\">// 拼接元素 和 List</span></span><br><span class=\"line\">println(oneTwoThree) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果为：List(1, 2, 3)</span></span><br></pre></td></tr></table></figure>\n<p>类List没有提供append操作。<br>如果你想通过添加元素来构造列表： </p>\n<ul>\n<li>前缀进去，完成之后再调用reverse； </li>\n<li>使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。</li>\n</ul>\n<h1 id=\"使用元组【Tuple】\"><a href=\"#使用元组【Tuple】\" class=\"headerlink\" title=\"使用元组【Tuple】\"></a>使用元组【Tuple】</h1><p>另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。</p>\n<p>列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。</p>\n<p>Scala里你可以简单地返回一个元组。<br>而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。<br>一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。</p>\n<p>一个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val pair = (<span class=\"number\">99</span>, <span class=\"string\">\"Luftballons\"</span>)  <span class=\"comment\">//Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。</span></span><br><span class=\"line\">println(pair._1)                <span class=\"comment\">//访问_1字段，从而输出第一个元素，99。</span></span><br><span class=\"line\">println(pair._2)                </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// 99</span></span><br><span class=\"line\"><span class=\"comment\">// Luftballons</span></span><br></pre></td></tr></table></figure>\n<p>元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。</p>\n<p>元组的实际类型取决于它含有的元素数量和这些元素的类型。<br>因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。</p>\n<p>类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。</p>\n<h2 id=\"访问元组的元素\"><a href=\"#访问元组的元素\" class=\"headerlink\" title=\"访问元组的元素\"></a>访问元组的元素</h2><p>为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？<br>因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。<br>_1可以有一个结果类型，_2是另外一个。 </p>\n<blockquote>\n<p>另：元组元素编号从1开始。</p>\n</blockquote>\n<h1 id=\"使用Set和Map\"><a href=\"#使用Set和Map\" class=\"headerlink\" title=\"使用Set和Map\"></a>使用Set和Map</h1><p>当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。</p>\n<p>对于集和映射，Scala把可变性建模在类继承中。</p>\n<p>例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。</p>\n<p>Scala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。</p>\n<p>如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。</p>\n<p>创造集的缺省方法实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var jetSet = Set(<span class=\"string\">\"Boeing\"</span>, <span class=\"string\">\"Airbus\"</span>)  <span class=\"comment\">//定义了名为jetSet的新var，包含两个字串</span></span><br><span class=\"line\">jetSet += <span class=\"string\">\"Lear\"</span>                      <span class=\"comment\">// jetSet = jetSet + \"Lear\" </span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Cessna\"</span>))    <span class=\"comment\">//打印输出集是否包含字串\"Cessna\"。</span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Lear\"</span>))      <span class=\"comment\">//打印输出集是否包含字串\"Lear\"。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>需要不可变集，就需要使用一个引用：import，如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Set  </span><br><span class=\"line\"></span><br><span class=\"line\">val movieSet = Set(<span class=\"string\">\"Hitch\"</span>, <span class=\"string\">\"Poltergeist\"</span>)  </span><br><span class=\"line\">movieSet += <span class=\"string\">\"Shrek\"</span> </span><br><span class=\"line\">println(movieSet)  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Poltergeist, Shrek, Hitch)</span></span><br></pre></td></tr></table></figure>\n<p>需要一个不可变的HashSet，你可以这么做：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.immutable.HashSet  </span><br><span class=\"line\">val hashSet = HashSet(<span class=\"string\">\"Tomatoes\"</span>, <span class=\"string\">\"Chilies\"</span>)  </span><br><span class=\"line\">println(hashSet + <span class=\"string\">\"Coriander\"</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Chilies, Tomatoes, Coriander)</span></span><br></pre></td></tr></table></figure>\n<p>Map是Scala里另一种有用的集合类。<br>和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。</p>\n<p><code>scala.collection</code> 包里面有一个基础Map特质和两个子特质Map：<br>可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。</p>\n<p>可变映射的创造过程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Map  </span><br><span class=\"line\"></span><br><span class=\"line\">val treasureMap = Map[Int, String]()  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">1</span> -&gt; <span class=\"string\">\"我在\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">2</span> -&gt; <span class=\"string\">\"学习\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">3</span> -&gt; <span class=\"string\">\"Scala\"</span>)  </span><br><span class=\"line\">println(treasureMap(<span class=\"number\">1</span>) + treasureMap(<span class=\"number\">2</span>) + treasureMap(<span class=\"number\">3</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我在学习Scala.</span></span><br></pre></td></tr></table></figure>\n<p>至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val romanNumeral = Map(      </span><br><span class=\"line\">        <span class=\"number\">1</span> -&gt; <span class=\"string\">\"我\"</span>, <span class=\"number\">2</span> -&gt; <span class=\"string\">\"是\"</span>, <span class=\"number\">3</span> -&gt; <span class=\"string\">\"缺\"</span>, <span class=\"number\">4</span> -&gt; <span class=\"string\">\"省\"</span>, <span class=\"number\">5</span> -&gt; <span class=\"string\">\"的\"</span> )  </span><br><span class=\"line\">println(romanNumeral(<span class=\"number\">1</span>) + romanNumeral(<span class=\"number\">2</span>) + romanNumeral(<span class=\"number\">3</span>) + romanNumeral(<span class=\"number\">4</span>) + romanNumeral(<span class=\"number\">5</span>))  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我是缺省的</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Array-类型参数化数组\"><a href=\"#Array-类型参数化数组\" class=\"headerlink\" title=\"Array 类型参数化数组\"></a>Array 类型参数化数组</h1><p>scala Array 的初始化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简洁的方法创造和初始化：</span></span><br><span class=\"line\">val numNames = Array(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 更罗嗦的调用 apply 方法：</span></span><br><span class=\"line\">val numNames2 = Array.apply(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object HelloWorld </span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">def <span class=\"title\">main</span><span class=\"params\">(args: Array[String])</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      val greetStrings = <span class=\"keyword\">new</span> Array[String](<span class=\"number\">3</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\">      greetStrings(<span class=\"number\">0</span>) = <span class=\"string\">\"Scala: Hello\"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">1</span>) = <span class=\"string\">\", \"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">2</span>) = <span class=\"string\">\"world!\\n\"</span> </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i &lt;- <span class=\"number\">0</span> to <span class=\"number\">2</span>) </span><br><span class=\"line\">           print(greetStrings(i)) </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出结果：Scala: Hello, world!</span></span><br></pre></td></tr></table></figure>\n<p>Scala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。</p>\n<p><code>val</code> 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。</p>\n<blockquote>\n<p>在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。</p>\n</blockquote>\n<h1 id=\"使用列表【List】\"><a href=\"#使用列表【List】\" class=\"headerlink\" title=\"使用列表【List】\"></a>使用列表【List】</h1><p>Scala <code>Array</code> 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。</p>\n<p>Scala的List类是共享相同类型的不可变对象序列。</p>\n<p>和数组一样，List[String]包含的仅仅是String。<br>Scala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个Scala的List很简单</span></span><br><span class=\"line\">val oneTwoThree = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n<p>上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。</p>\n<h2 id=\"List-操作\"><a href=\"#List-操作\" class=\"headerlink\" title=\"List 操作\"></a>List 操作</h2><p>这个List可以这么用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val oneTwo = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>)  </span><br><span class=\"line\">val threeFour = List(<span class=\"number\">3</span>, <span class=\"number\">4</span>) </span><br><span class=\"line\">val oneTwoThreeFour = oneTwo ::: threeFour  <span class=\"comment\">// ::: 拼接List</span></span><br><span class=\"line\"></span><br><span class=\"line\">println(oneTwo + <span class=\"string\">\" 和 \"</span> + threeFour + <span class=\"string\">\" 是不可变的\"</span>)  </span><br><span class=\"line\">println(oneTwoThreeFour + <span class=\"string\">\" 是个新列表了\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果:</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2) 和 List(3, 4) 是不可变的</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2, 3, 4) 是个新列表了</span></span><br></pre></td></tr></table></figure>\n<p>List最常用的操作符是发音为”cons”的” :: “. 例如，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val twoThree = List(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">val oneTwoThree = <span class=\"number\">1</span> :: twoThree  <span class=\"comment\">// 拼接元素 和 List</span></span><br><span class=\"line\">println(oneTwoThree) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果为：List(1, 2, 3)</span></span><br></pre></td></tr></table></figure>\n<p>类List没有提供append操作。<br>如果你想通过添加元素来构造列表： </p>\n<ul>\n<li>前缀进去，完成之后再调用reverse； </li>\n<li>使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。</li>\n</ul>\n<h1 id=\"使用元组【Tuple】\"><a href=\"#使用元组【Tuple】\" class=\"headerlink\" title=\"使用元组【Tuple】\"></a>使用元组【Tuple】</h1><p>另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。</p>\n<p>列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。</p>\n<p>Scala里你可以简单地返回一个元组。<br>而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。<br>一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。</p>\n<p>一个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val pair = (<span class=\"number\">99</span>, <span class=\"string\">\"Luftballons\"</span>)  <span class=\"comment\">//Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。</span></span><br><span class=\"line\">println(pair._1)                <span class=\"comment\">//访问_1字段，从而输出第一个元素，99。</span></span><br><span class=\"line\">println(pair._2)                </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// 99</span></span><br><span class=\"line\"><span class=\"comment\">// Luftballons</span></span><br></pre></td></tr></table></figure>\n<p>元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。</p>\n<p>元组的实际类型取决于它含有的元素数量和这些元素的类型。<br>因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。</p>\n<p>类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。</p>\n<h2 id=\"访问元组的元素\"><a href=\"#访问元组的元素\" class=\"headerlink\" title=\"访问元组的元素\"></a>访问元组的元素</h2><p>为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？<br>因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。<br>_1可以有一个结果类型，_2是另外一个。 </p>\n<blockquote>\n<p>另：元组元素编号从1开始。</p>\n</blockquote>\n<h1 id=\"使用Set和Map\"><a href=\"#使用Set和Map\" class=\"headerlink\" title=\"使用Set和Map\"></a>使用Set和Map</h1><p>当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。</p>\n<p>对于集和映射，Scala把可变性建模在类继承中。</p>\n<p>例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。</p>\n<p>Scala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。</p>\n<p>如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。</p>\n<p>创造集的缺省方法实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var jetSet = Set(<span class=\"string\">\"Boeing\"</span>, <span class=\"string\">\"Airbus\"</span>)  <span class=\"comment\">//定义了名为jetSet的新var，包含两个字串</span></span><br><span class=\"line\">jetSet += <span class=\"string\">\"Lear\"</span>                      <span class=\"comment\">// jetSet = jetSet + \"Lear\" </span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Cessna\"</span>))    <span class=\"comment\">//打印输出集是否包含字串\"Cessna\"。</span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Lear\"</span>))      <span class=\"comment\">//打印输出集是否包含字串\"Lear\"。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>需要不可变集，就需要使用一个引用：import，如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Set  </span><br><span class=\"line\"></span><br><span class=\"line\">val movieSet = Set(<span class=\"string\">\"Hitch\"</span>, <span class=\"string\">\"Poltergeist\"</span>)  </span><br><span class=\"line\">movieSet += <span class=\"string\">\"Shrek\"</span> </span><br><span class=\"line\">println(movieSet)  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Poltergeist, Shrek, Hitch)</span></span><br></pre></td></tr></table></figure>\n<p>需要一个不可变的HashSet，你可以这么做：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.immutable.HashSet  </span><br><span class=\"line\">val hashSet = HashSet(<span class=\"string\">\"Tomatoes\"</span>, <span class=\"string\">\"Chilies\"</span>)  </span><br><span class=\"line\">println(hashSet + <span class=\"string\">\"Coriander\"</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Chilies, Tomatoes, Coriander)</span></span><br></pre></td></tr></table></figure>\n<p>Map是Scala里另一种有用的集合类。<br>和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。</p>\n<p><code>scala.collection</code> 包里面有一个基础Map特质和两个子特质Map：<br>可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。</p>\n<p>可变映射的创造过程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Map  </span><br><span class=\"line\"></span><br><span class=\"line\">val treasureMap = Map[Int, String]()  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">1</span> -&gt; <span class=\"string\">\"我在\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">2</span> -&gt; <span class=\"string\">\"学习\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">3</span> -&gt; <span class=\"string\">\"Scala\"</span>)  </span><br><span class=\"line\">println(treasureMap(<span class=\"number\">1</span>) + treasureMap(<span class=\"number\">2</span>) + treasureMap(<span class=\"number\">3</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我在学习Scala.</span></span><br></pre></td></tr></table></figure>\n<p>至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val romanNumeral = Map(      </span><br><span class=\"line\">        <span class=\"number\">1</span> -&gt; <span class=\"string\">\"我\"</span>, <span class=\"number\">2</span> -&gt; <span class=\"string\">\"是\"</span>, <span class=\"number\">3</span> -&gt; <span class=\"string\">\"缺\"</span>, <span class=\"number\">4</span> -&gt; <span class=\"string\">\"省\"</span>, <span class=\"number\">5</span> -&gt; <span class=\"string\">\"的\"</span> )  </span><br><span class=\"line\">println(romanNumeral(<span class=\"number\">1</span>) + romanNumeral(<span class=\"number\">2</span>) + romanNumeral(<span class=\"number\">3</span>) + romanNumeral(<span class=\"number\">4</span>) + romanNumeral(<span class=\"number\">5</span>))  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我是缺省的</span></span><br></pre></td></tr></table></figure>"},{"title":"tensorflow-flags-guide","date":"2018-05-21T12:29:51.000Z","_content":"","source":"_posts/201805-tensorflow-flags-guide.md","raw":"---\ntitle: tensorflow-flags-guide\ndate: 2018-05-21 20:29:51\ntags:\n---\n","slug":"tensorflow-flags-guide","published":1,"updated":"2018-05-21T12:29:51.542Z","_id":"cjhg8a9k20001qkojeheqxuqa","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjhdotckp00001uoj5zmb9sd3","tag_id":"cjhdotckx00021uojwcn5sia8","_id":"cjhdotcl100051uojf47h1p6r"},{"post_id":"cjhdotckz00031uojpy16n3lw","tag_id":"cjhdotcl100041uoj01hlcq2x","_id":"cjhdotcl200061uojdtq5hbni"}],"Tag":[{"name":"git","_id":"cjhdotckx00021uojwcn5sia8"},{"name":"Linux, vim","_id":"cjhdotcl100041uoj01hlcq2x"}]}}
=======
{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.git","hash":"042ff34da0707513a5681580b37513c890c671ef","modified":1527409906000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1527409906000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1527409906000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1527409906000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1527409906000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1527409906000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1527409906000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1527409906000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1527409906000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1527409906000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1527409906000},{"_id":"themes/next/_config.yml","hash":"123eaf7fb09ade9cf9582c9db8d045b2dd72ef06","modified":1527432140000},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1527409906000},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1527409906000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1527409906000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1527409906000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1527409907000},{"_id":"source/_posts/201805-hexo-blog-system-guide.md","hash":"fa275c2ebc22d1cc6ea60bf3916c754890a14c11","modified":1527411798000},{"_id":"source/_posts/201805-git-guide-for-freshman.md","hash":"8b75cdd9cbf05d719f4ef38a1a5780dbb5b4b242","modified":1527405404000},{"_id":"source/_posts/201805-hexo-transfer.md","hash":"077eeb9697c582475ea2a75d0d9b8152debdc72d","modified":1527425577000},{"_id":"source/_posts/201805-scala-array-list-tuple-and-so-on.md","hash":"e9618b5e78417577d47d22200c0d1c04b4365954","modified":1527405404000},{"_id":"source/_posts/201805-tensorflow-flags-guide.md","hash":"3f2923c6de9cbdec2f01c20615df7058694f7938","modified":1527405404000},{"_id":"source/_posts/201805-to-write-list.md","hash":"d84d7f735fd3286161ff040bd9800a97b6a9953e","modified":1527412079000},{"_id":"source/_posts/201805-vim-guide.md","hash":"fdf2273f01daa0f8ba4a6ac57ec79bca82bfee48","modified":1527405404000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1527409906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1527409906000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1527409906000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1527409906000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1527409906000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1527409906000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1527409906000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1527409906000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1527409906000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1527409906000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1527409906000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1527409906000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1527409906000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1527409906000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1527409906000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1527409906000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1527409906000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1527409906000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1527409906000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1527409906000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1527409906000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1527409907000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1527409907000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1527409907000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1527409907000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1527409907000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1527409907000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1527409907000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1527409907000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1527409907000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1527409907000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1527409907000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1527409907000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409907000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1527409906000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1527409906000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1527409906000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1527409906000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1527409906000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1527409906000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1527409906000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1527409906000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1527409906000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1527409906000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1527409906000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1527409906000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1527409906000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1527409906000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1527409906000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1527409906000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1527409906000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1527409906000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1527409906000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1527409906000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1527409906000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1527409906000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1527409906000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1527409906000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1527409906000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1527409907000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1527409907000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1527409907000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1527409907000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1527409907000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1527409907000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1527409907000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1527409907000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1527409907000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1527409907000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1527409907000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1527409907000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1527409907000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1527409907000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1527409907000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1527409907000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1527409907000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1527409907000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1527409907000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1527409907000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1527409907000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1527409907000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1527409907000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1527409907000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1527409907000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1527409907000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1527409907000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1527409907000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409906000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409906000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409907000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409907000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409907000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409907000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527409907000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1527409906000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1527409906000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1527409906000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1527409906000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1527409906000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1527409906000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1527409906000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1527409906000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1527409906000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1527409906000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1527409906000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1527409906000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1527409906000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1527409906000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1527409907000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1527409907000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1527409906000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1527409907000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1527409907000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1527409907000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1527409907000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1527409907000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1527409907000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1527409907000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1527409907000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1527409907000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1527409907000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1527409907000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1527409907000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1527409907000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1527409907000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1527409907000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1527409907000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1527409907000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1527409907000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1527409907000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1527409907000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1527409907000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1527409907000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1527409907000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1527409907000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1527409907000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1527409907000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1527409907000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1527409907000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1527409907000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1527409907000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1527409907000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1527409907000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1527409907000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1527409907000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1527409907000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1527409907000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1527409907000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1527409907000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1527409907000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1527409907000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1527409907000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1527409907000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1527409907000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1527409907000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1527409907000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1527409907000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1527409907000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1527409906000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1527409906000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1527409907000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1527409907000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1527409907000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1527409907000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1527409907000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1527409907000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1527409907000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1527409907000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1527409907000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1527409907000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1527409907000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1527409907000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1527409907000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1527409907000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1527409907000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1527409907000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1527409907000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1527409907000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1527409907000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1527409907000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1527409907000},{"_id":"public/2018/05/27/to-write-list/index.html","hash":"440df687a7fb4994b18b42ea4cf58e52637ff87d","modified":1527432167150},{"_id":"public/2018/05/27/hexo-transfer/index.html","hash":"e408ee012adf24e7dd3c98a2c5acf64b31b17d29","modified":1527432167150},{"_id":"public/2018/05/21/tensorflow-flags-guide/index.html","hash":"efb89a4d3d7d3a20133e01e3c19c20fe1571f960","modified":1527432167150},{"_id":"public/archives/index.html","hash":"cd3140e18772ac779a55e062e28a60cee616939e","modified":1527432167150},{"_id":"public/archives/2018/index.html","hash":"43761b0f222ed380194333d601fdb63b038db608","modified":1527432167150},{"_id":"public/archives/2018/05/index.html","hash":"870f1293191e2c3e9241065e8de948eca6a814d0","modified":1527432167150},{"_id":"public/tags/git/index.html","hash":"714ed7f333abcececcb2ba4b6da68669c44c47d2","modified":1527432167150},{"_id":"public/tags/Linux-vim/index.html","hash":"9b21bd4944d5de5cf422ba199eca971d6d8e72ac","modified":1527432167150},{"_id":"public/2018/05/20/scala-array-list-tuple-and-so-on/index.html","hash":"1c1bc2f8b4a4d63ff6c1dd817c45f6327b5ecfe5","modified":1527432167151},{"_id":"public/2018/05/20/vim-guide/index.html","hash":"4a60557ab5e60b4826de9f682ad68fb3a61d140e","modified":1527432167151},{"_id":"public/2018/05/18/hexo-blog-system-guide/index.html","hash":"a9b947ebccc33a0e6a2588fbb648c201731535cf","modified":1527432167151},{"_id":"public/2018/05/18/git-guide-for-freshman/index.html","hash":"a6b2ac7f219c1acc9c75eb64dc97d8084808229d","modified":1527432167151},{"_id":"public/index.html","hash":"5581ee14fd4c0604a675eaa0d95215e0a6cfdc31","modified":1527432167151},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1527432167156},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1527432167157},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1527432167157},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1527432167157},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1527432167157},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1527432167157},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1527432167157},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1527432167157},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1527432167157},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1527432167157},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1527432167157},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1527432167157},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1527432167157},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1527432167157},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1527432167157},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1527432167157},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1527432167157},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1527432167157},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1527432167158},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1527432167158},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1527432167158},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1527432167158},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1527432167158},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1527432167158},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1527432167158},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1527432167158},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1527432167158},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1527432167158},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1527432167158},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1527432167158},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1527432167158},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1527432167158},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1527432167158},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1527432167643},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1527432167649},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1527432167661},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1527432167661},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1527432167661},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1527432167661},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1527432167661},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1527432167661},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1527432167661},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1527432167661},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1527432167661},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1527432167661},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1527432167661},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1527432167661},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1527432167662},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1527432167662},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1527432167662},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1527432167662},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1527432167662},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1527432167662},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1527432167662},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1527432167662},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1527432167662},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1527432167662},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1527432167662},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1527432167663},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1527432167663},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1527432167663},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1527432167663},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1527432167663},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1527432167663},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1527432167663},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1527432167663},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1527432167663},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1527432167663},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1527432167663},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1527432167663},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1527432167663},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1527432167663},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1527432167663},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1527432167663},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1527432167664},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1527432167664},{"_id":"public/css/main.css","hash":"2044245697e943684ea8a0ba01b0af0ccd2b2416","modified":1527432167664},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1527432167664},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1527432167664},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1527432167664},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1527432167664},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1527432167664},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1527432167664},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1527432167664},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1527432167664},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1527432167664},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1527432167664},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1527432167665},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1527432167665},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1527432167665},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1527432167665},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1527432167665},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1527432167665},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1527432167665},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1527432167665},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1527432167665},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1527432167665},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1527432167666},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1527432167666},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1527432167666},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1527432167680}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"git 使用指南","date":"2018-05-17T16:11:03.000Z","_content":"\n# 克隆 git 仓库\n\n命令\n\n``` bash\ngit clone <remote_repo> -b <branch>\n```\n\n# 远程仓库\n\n## 添加远程仓库\n\n``` bash\ngit remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist # （”quantum_rng_testing/nist“ 为工程的目录）\n```\n\n## git push 命令\n\ngit push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。\n\n```\n$ git push [参数] <远程主机名> <本地分支名>:<远程分支名>\n```\n参数：\n- -u 第一次推送的时候，可以将分支进行关联，以后只要 `git push` 就行了\n\n### 删除远程分支\n如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。\n```\n$ git push origin :master\n# 等同于\n$ git push origin --delete master\n```\n\n### 强制覆盖远程分支\n\n``` bash\n# 方法一\ngit push origin develop:master -f # 就可以把本地的develop分支强制(-f)推送到远程master\n\n# 方法二 \ngit checkout master \t\t# 切换到旧的分支 \ngit reset –hard develop \t# 将本地的旧分支 master 重置成 develop \ngit push origin master –force \t# 再推送到远程仓库\n```\n\n### 推送本地所有分支\n不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。\n```\ngit push --all origin\n\n```\n\n## 放弃本地所有修改，强制拉取远程更新\n\n开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：\n\n``` bash\ngit fetch --all\ngit reset --hard origin/master\ngit pull //可以省略\n```\ngit fetch 指令是下载远程仓库最新内容，不做合并 \ngit reset 指令把HEAD指向master最新版本\n\n\n## 查看远程分支\n\n查看远程分支\n```\ngit branch -r \n```\n\n## 拉取远程分支并创建本地分支\n\n### 方法一\n\n使用如下命令：\n```\ngit checkout -b 本地分支名 origin/远程分支名\n```\n使用该方式会在本地新建分支，并自动切换到该本地分支x\n\n> 采用此种方法建立的本地分支会和远程分支建立映射关系。\n\n### 方式二\n\n使用如下命令：\n```\ngit fetch origin 远程分支名x:本地分支名x\n```\n\n使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。\n\n> 采用此种方法建立的本地分支不会和远程分支建立映射关系。\n\n### 本地分支和远程分支建立映射关系的作用\n\nref: 博文[Git branch upstream](https://blog.csdn.net/tterminator/article/details/78108550)\n\n#### 目标\n\n本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 `git pull` 或者 `git push` 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。\n\n#### 查看本地分支与远程分支的映射关系\n\n使用以下命令（注意是双v）：\n\n```\ngit branch -vv\n```\n\n可以获得如下信息： \n```\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n```\n同理，若此时执行如下推送命令同样不成功： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n\nKevin-MacBook-Air:blog arthur-mac$ git push\nfatal: The current branch hexo has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin hexo\n```\n\n#### 建立本地分支与远程分支的映射关系\n\n建立当前分支与远程分支的映射关系:\n```\ngit branch -u origin/hexo\n```\n\n或者使用命令：\n```\ngit branch --set-upstream-to origin/hexo\n```\n得到结果如下： \n```\nBranch 'hexo' set up to track remote branch 'hexo' from 'origin'.\n```\n查看当前本地分支与远程分支的映射关系结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a [origin/hexo] create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n此时就能够正常的拉取和推送了。\n\n#### 撤销本地分支与远程分支的映射关系\n撤销本地分支与远程分支的映射关系\n\n```\ngit branch --unset-upstream\n```\n使用git branch -vv得到结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到本地分支与远程分支的映射关系已经撤销。\n\n#### 问题思考：本地分支只能跟踪远程的同名分支吗？\n\n答案是否定的，本地分支可以与远程不同名的分支建立映射关系。\n","source":"_posts/201805-git-guide-for-freshman.md","raw":"title: git 使用指南\ntags: git\ndate: 2018-05-18 00:11:03\n---\n\n# 克隆 git 仓库\n\n命令\n\n``` bash\ngit clone <remote_repo> -b <branch>\n```\n\n# 远程仓库\n\n## 添加远程仓库\n\n``` bash\ngit remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist # （”quantum_rng_testing/nist“ 为工程的目录）\n```\n\n## git push 命令\n\ngit push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。\n\n```\n$ git push [参数] <远程主机名> <本地分支名>:<远程分支名>\n```\n参数：\n- -u 第一次推送的时候，可以将分支进行关联，以后只要 `git push` 就行了\n\n### 删除远程分支\n如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。\n```\n$ git push origin :master\n# 等同于\n$ git push origin --delete master\n```\n\n### 强制覆盖远程分支\n\n``` bash\n# 方法一\ngit push origin develop:master -f # 就可以把本地的develop分支强制(-f)推送到远程master\n\n# 方法二 \ngit checkout master \t\t# 切换到旧的分支 \ngit reset –hard develop \t# 将本地的旧分支 master 重置成 develop \ngit push origin master –force \t# 再推送到远程仓库\n```\n\n### 推送本地所有分支\n不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。\n```\ngit push --all origin\n\n```\n\n## 放弃本地所有修改，强制拉取远程更新\n\n开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：\n\n``` bash\ngit fetch --all\ngit reset --hard origin/master\ngit pull //可以省略\n```\ngit fetch 指令是下载远程仓库最新内容，不做合并 \ngit reset 指令把HEAD指向master最新版本\n\n\n## 查看远程分支\n\n查看远程分支\n```\ngit branch -r \n```\n\n## 拉取远程分支并创建本地分支\n\n### 方法一\n\n使用如下命令：\n```\ngit checkout -b 本地分支名 origin/远程分支名\n```\n使用该方式会在本地新建分支，并自动切换到该本地分支x\n\n> 采用此种方法建立的本地分支会和远程分支建立映射关系。\n\n### 方式二\n\n使用如下命令：\n```\ngit fetch origin 远程分支名x:本地分支名x\n```\n\n使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。\n\n> 采用此种方法建立的本地分支不会和远程分支建立映射关系。\n\n### 本地分支和远程分支建立映射关系的作用\n\nref: 博文[Git branch upstream](https://blog.csdn.net/tterminator/article/details/78108550)\n\n#### 目标\n\n本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 `git pull` 或者 `git push` 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。\n\n#### 查看本地分支与远程分支的映射关系\n\n使用以下命令（注意是双v）：\n\n```\ngit branch -vv\n```\n\n可以获得如下信息： \n```\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n```\n同理，若此时执行如下推送命令同样不成功： \n```\n$ git pull\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/<branch> hexo\n\nKevin-MacBook-Air:blog arthur-mac$ git push\nfatal: The current branch hexo has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin hexo\n```\n\n#### 建立本地分支与远程分支的映射关系\n\n建立当前分支与远程分支的映射关系:\n```\ngit branch -u origin/hexo\n```\n\n或者使用命令：\n```\ngit branch --set-upstream-to origin/hexo\n```\n得到结果如下： \n```\nBranch 'hexo' set up to track remote branch 'hexo' from 'origin'.\n```\n查看当前本地分支与远程分支的映射关系结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a [origin/hexo] create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n此时就能够正常的拉取和推送了。\n\n#### 撤销本地分支与远程分支的映射关系\n撤销本地分支与远程分支的映射关系\n\n```\ngit branch --unset-upstream\n```\n使用git branch -vv得到结果如下： \n```\n$ git branch -vv\n* hexo   d60a56a create the world\n  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40\n```\n可以看到本地分支与远程分支的映射关系已经撤销。\n\n#### 问题思考：本地分支只能跟踪远程的同名分支吗？\n\n答案是否定的，本地分支可以与远程不同名的分支建立映射关系。\n","slug":"git-guide-for-freshman","published":1,"updated":"2018-05-27T07:16:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhoxoa1q00003n1d4f0y174c","content":"<h1 id=\"克隆-git-仓库\"><a href=\"#克隆-git-仓库\" class=\"headerlink\" title=\"克隆 git 仓库\"></a>克隆 git 仓库</h1><p>命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> &lt;remote_repo&gt; -b &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><h2 id=\"添加远程仓库\"><a href=\"#添加远程仓库\" class=\"headerlink\" title=\"添加远程仓库\"></a>添加远程仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist <span class=\"comment\"># （”quantum_rng_testing/nist“ 为工程的目录）</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-push-命令\"><a href=\"#git-push-命令\" class=\"headerlink\" title=\"git push 命令\"></a>git push 命令</h2><p>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push [参数] &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>\n<p>参数：</p>\n<ul>\n<li>-u 第一次推送的时候，可以将分支进行关联，以后只要 <code>git push</code> 就行了</li>\n</ul>\n<h3 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h3><p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :master</span><br><span class=\"line\"># 等同于</span><br><span class=\"line\">$ git push origin --delete master</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"强制覆盖远程分支\"><a href=\"#强制覆盖远程分支\" class=\"headerlink\" title=\"强制覆盖远程分支\"></a>强制覆盖远程分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法一</span></span><br><span class=\"line\">git push origin develop:master -f <span class=\"comment\"># 就可以把本地的develop分支强制(-f)推送到远程master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二 </span></span><br><span class=\"line\">git checkout master \t\t<span class=\"comment\"># 切换到旧的分支 </span></span><br><span class=\"line\">git reset –hard develop \t<span class=\"comment\"># 将本地的旧分支 master 重置成 develop </span></span><br><span class=\"line\">git push origin master –force \t<span class=\"comment\"># 再推送到远程仓库</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"推送本地所有分支\"><a href=\"#推送本地所有分支\" class=\"headerlink\" title=\"推送本地所有分支\"></a>推送本地所有分支</h3><p>不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --all origin</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"放弃本地所有修改，强制拉取远程更新\"><a href=\"#放弃本地所有修改，强制拉取远程更新\" class=\"headerlink\" title=\"放弃本地所有修改，强制拉取远程更新\"></a>放弃本地所有修改，强制拉取远程更新</h2><p>开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch --all</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\">git pull //可以省略</span><br></pre></td></tr></table></figure>\n<p>git fetch 指令是下载远程仓库最新内容，不做合并<br>git reset 指令把HEAD指向master最新版本</p>\n<h2 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h2><p>查看远程分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"拉取远程分支并创建本地分支\"><a href=\"#拉取远程分支并创建本地分支\" class=\"headerlink\" title=\"拉取远程分支并创建本地分支\"></a>拉取远程分支并创建本地分支</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b 本地分支名 origin/远程分支名</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支，并自动切换到该本地分支x</p>\n<blockquote>\n<p>采用此种方法建立的本地分支会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch origin 远程分支名x:本地分支名x</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。</p>\n<blockquote>\n<p>采用此种方法建立的本地分支不会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"本地分支和远程分支建立映射关系的作用\"><a href=\"#本地分支和远程分支建立映射关系的作用\" class=\"headerlink\" title=\"本地分支和远程分支建立映射关系的作用\"></a>本地分支和远程分支建立映射关系的作用</h3><p>ref: 博文<a href=\"https://blog.csdn.net/tterminator/article/details/78108550\" target=\"_blank\" rel=\"noopener\">Git branch upstream</a></p>\n<h4 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h4><p>本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 <code>git pull</code> 或者 <code>git push</code> 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。</p>\n<h4 id=\"查看本地分支与远程分支的映射关系\"><a href=\"#查看本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"查看本地分支与远程分支的映射关系\"></a>查看本地分支与远程分支的映射关系</h4><p>使用以下命令（注意是双v）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -vv</span><br></pre></td></tr></table></figure>\n<p>可以获得如下信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br></pre></td></tr></table></figure></p>\n<p>同理，若此时执行如下推送命令同样不成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br><span class=\"line\"></span><br><span class=\"line\">Kevin-MacBook-Air:blog arthur-mac$ git push</span><br><span class=\"line\">fatal: The current branch hexo has no upstream branch.</span><br><span class=\"line\">To push the current branch and set the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"建立本地分支与远程分支的映射关系\"><a href=\"#建立本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"建立本地分支与远程分支的映射关系\"></a>建立本地分支与远程分支的映射关系</h4><p>建立当前分支与远程分支的映射关系:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -u origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>或者使用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream-to origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Branch &apos;hexo&apos; set up to track remote branch &apos;hexo&apos; from &apos;origin&apos;.</span><br></pre></td></tr></table></figure></p>\n<p>查看当前本地分支与远程分支的映射关系结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a [origin/hexo] create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>此时就能够正常的拉取和推送了。</p>\n<h4 id=\"撤销本地分支与远程分支的映射关系\"><a href=\"#撤销本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"撤销本地分支与远程分支的映射关系\"></a>撤销本地分支与远程分支的映射关系</h4><p>撤销本地分支与远程分支的映射关系</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --unset-upstream</span><br></pre></td></tr></table></figure>\n<p>使用git branch -vv得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到本地分支与远程分支的映射关系已经撤销。</p>\n<h4 id=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"><a href=\"#问题思考：本地分支只能跟踪远程的同名分支吗？\" class=\"headerlink\" title=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"></a>问题思考：本地分支只能跟踪远程的同名分支吗？</h4><p>答案是否定的，本地分支可以与远程不同名的分支建立映射关系。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"克隆-git-仓库\"><a href=\"#克隆-git-仓库\" class=\"headerlink\" title=\"克隆 git 仓库\"></a>克隆 git 仓库</h1><p>命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> &lt;remote_repo&gt; -b &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><h2 id=\"添加远程仓库\"><a href=\"#添加远程仓库\" class=\"headerlink\" title=\"添加远程仓库\"></a>添加远程仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin http://192.168.36.10:10080/quantum_rng_testing/nist <span class=\"comment\"># （”quantum_rng_testing/nist“ 为工程的目录）</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-push-命令\"><a href=\"#git-push-命令\" class=\"headerlink\" title=\"git push 命令\"></a>git push 命令</h2><p>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push [参数] &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>\n<p>参数：</p>\n<ul>\n<li>-u 第一次推送的时候，可以将分支进行关联，以后只要 <code>git push</code> 就行了</li>\n</ul>\n<h3 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h3><p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :master</span><br><span class=\"line\"># 等同于</span><br><span class=\"line\">$ git push origin --delete master</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"强制覆盖远程分支\"><a href=\"#强制覆盖远程分支\" class=\"headerlink\" title=\"强制覆盖远程分支\"></a>强制覆盖远程分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法一</span></span><br><span class=\"line\">git push origin develop:master -f <span class=\"comment\"># 就可以把本地的develop分支强制(-f)推送到远程master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二 </span></span><br><span class=\"line\">git checkout master \t\t<span class=\"comment\"># 切换到旧的分支 </span></span><br><span class=\"line\">git reset –hard develop \t<span class=\"comment\"># 将本地的旧分支 master 重置成 develop </span></span><br><span class=\"line\">git push origin master –force \t<span class=\"comment\"># 再推送到远程仓库</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"推送本地所有分支\"><a href=\"#推送本地所有分支\" class=\"headerlink\" title=\"推送本地所有分支\"></a>推送本地所有分支</h3><p>不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --all origin</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"放弃本地所有修改，强制拉取远程更新\"><a href=\"#放弃本地所有修改，强制拉取远程更新\" class=\"headerlink\" title=\"放弃本地所有修改，强制拉取远程更新\"></a>放弃本地所有修改，强制拉取远程更新</h2><p>开发时，对于本地的项目中修改不做保存操作（或代码改崩），可以用到Git pull的强制覆盖，具体代码如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch --all</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\">git pull //可以省略</span><br></pre></td></tr></table></figure>\n<p>git fetch 指令是下载远程仓库最新内容，不做合并<br>git reset 指令把HEAD指向master最新版本</p>\n<h2 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h2><p>查看远程分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"拉取远程分支并创建本地分支\"><a href=\"#拉取远程分支并创建本地分支\" class=\"headerlink\" title=\"拉取远程分支并创建本地分支\"></a>拉取远程分支并创建本地分支</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b 本地分支名 origin/远程分支名</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支，并自动切换到该本地分支x</p>\n<blockquote>\n<p>采用此种方法建立的本地分支会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h3><p>使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch origin 远程分支名x:本地分支名x</span><br></pre></td></tr></table></figure></p>\n<p>使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。</p>\n<blockquote>\n<p>采用此种方法建立的本地分支不会和远程分支建立映射关系。</p>\n</blockquote>\n<h3 id=\"本地分支和远程分支建立映射关系的作用\"><a href=\"#本地分支和远程分支建立映射关系的作用\" class=\"headerlink\" title=\"本地分支和远程分支建立映射关系的作用\"></a>本地分支和远程分支建立映射关系的作用</h3><p>ref: 博文<a href=\"https://blog.csdn.net/tterminator/article/details/78108550\" target=\"_blank\" rel=\"noopener\">Git branch upstream</a></p>\n<h4 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h4><p>本博文中git操作的目标为建立本地分支与远程分支的映射关系（或者为跟踪关系track）。这样使用 <code>git pull</code> 或者 <code>git push</code> 时就不必每次都要指定从远程的哪个分支拉取合并和推送到远程的哪个分支了。</p>\n<h4 id=\"查看本地分支与远程分支的映射关系\"><a href=\"#查看本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"查看本地分支与远程分支的映射关系\"></a>查看本地分支与远程分支的映射关系</h4><p>使用以下命令（注意是双v）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -vv</span><br></pre></td></tr></table></figure>\n<p>可以获得如下信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到分支hexo没有和远程分支建立任何映射，此时若执行如下拉取命令则不成功（因为git此时不知道拉取哪个远程分支和本地分支合并）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br></pre></td></tr></table></figure></p>\n<p>同理，若此时执行如下推送命令同样不成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br><span class=\"line\">There is no tracking information for the current branch.</span><br><span class=\"line\">Please specify which branch you want to merge with.</span><br><span class=\"line\">See git-pull(1) for details.</span><br><span class=\"line\"></span><br><span class=\"line\">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">If you wish to set tracking information for this branch you can do so with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git branch --set-upstream-to=origin/&lt;branch&gt; hexo</span><br><span class=\"line\"></span><br><span class=\"line\">Kevin-MacBook-Air:blog arthur-mac$ git push</span><br><span class=\"line\">fatal: The current branch hexo has no upstream branch.</span><br><span class=\"line\">To push the current branch and set the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"建立本地分支与远程分支的映射关系\"><a href=\"#建立本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"建立本地分支与远程分支的映射关系\"></a>建立本地分支与远程分支的映射关系</h4><p>建立当前分支与远程分支的映射关系:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -u origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>或者使用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream-to origin/hexo</span><br></pre></td></tr></table></figure></p>\n<p>得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Branch &apos;hexo&apos; set up to track remote branch &apos;hexo&apos; from &apos;origin&apos;.</span><br></pre></td></tr></table></figure></p>\n<p>查看当前本地分支与远程分支的映射关系结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a [origin/hexo] create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>此时就能够正常的拉取和推送了。</p>\n<h4 id=\"撤销本地分支与远程分支的映射关系\"><a href=\"#撤销本地分支与远程分支的映射关系\" class=\"headerlink\" title=\"撤销本地分支与远程分支的映射关系\"></a>撤销本地分支与远程分支的映射关系</h4><p>撤销本地分支与远程分支的映射关系</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --unset-upstream</span><br></pre></td></tr></table></figure>\n<p>使用git branch -vv得到结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -vv</span><br><span class=\"line\">* hexo   d60a56a create the world</span><br><span class=\"line\">  master 649e511 [origin/master: ahead 6, behind 3] Site updated: 2018-04-22 18:23:40</span><br></pre></td></tr></table></figure></p>\n<p>可以看到本地分支与远程分支的映射关系已经撤销。</p>\n<h4 id=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"><a href=\"#问题思考：本地分支只能跟踪远程的同名分支吗？\" class=\"headerlink\" title=\"问题思考：本地分支只能跟踪远程的同名分支吗？\"></a>问题思考：本地分支只能跟踪远程的同名分支吗？</h4><p>答案是否定的，本地分支可以与远程不同名的分支建立映射关系。</p>\n"},{"title":"hexo 使用指南","date":"2018-05-18T03:03:14.000Z","_content":"\n# 安装\b支持\n\n1. 安装Node.js\n\nmac系统到 node.js 官网下安装包\n\n``` bash\n# 安装 Node.js\n# 安装 Node.js 的最佳方式是使用 nvm。\n\n# cURL方式\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n\n# Wget方式\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n\n# 安装完成后，重启终端并执行下列命令即可安装 Node.js。\n$ nvm install stable\n```\n\n2. 安装git\n\n``` bash\n# Windows：下载并安装 git.\n\n# Mac：使用 Homebrew, MacPorts ：\nbrew install git  # ;或下载 安装程序 安装。\n\n# Linux (Ubuntu, Debian)：\nsudo apt-get install git-core\n\n# Linux (Fedora, Red Hat, CentOS)：\nsudo yum install git-core\n```\n\n# 安装Hexo\n\n```\n$ sudo npm install -g hexo-cli\n```\n之后要在博客的文件夹下执行以下命令\n\n``` bash\nnpm install hexo  # 有上面一步可以省略 \nhexo init <folder>  # 初始化\ncd <folder> \nnpm install\nnpm install hexo-deployer-git\n```\n\n# 可视化写博客\n\n借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 `hexo-admin`这款插件。\n\n`hexo-admin` 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到`source/images`目录下,部署博客时同时上传。\n\n另外，还有一款`hexo-admin-qiniu` 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装`hexo-admin`，直接装这个就行了）\n\n网址： [hexo-admin-qiniu github](https://github.com/xbotao/hexo-admin-qiniu)\n\n# hexo 主题\n\n> 说明：在 Hexo 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n\n为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。\n## Next\n\nNext是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。\n\n[Next主题主页](http://theme-next.iissnan.com/)\n\n### 下载主题\n\n``` bash\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n### 启用主题\n\n与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 `_config.yml`， 找到 theme 字段，并将其值更改为 next。\n\n```\n# 启用 NexT 主题\ntheme: next\n```\n到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。\n\n主题设定包括：详细见官网介绍\n- 选择「Scheme」\n- 设置「界面语言」\n- 设置「菜单」\n- 设置「侧栏」\n- 设置「头像」\n- 设置「作者昵称」\n- 设置「站点描述」\n\n### 设置语言\n\n编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：\n\n`language: zh-Hans`\n\n\n# 异常\n\n- hexo本地测试运行重启后页面空白,提示 : `WARN No layout: index.html`?\n\n原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库\n\n``` bash\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n- Hexo异常：fatal:inunpopulatedsubmodule'.deploy_git'怎么解决？\n\n这种情况可以先安装下相关的依赖：\n\n``` bash\nnpm install hexo-deployer-git –save\n```\n\n实在不行，就把它删掉，然后重新生成和部署。\n\n``` bash\nrm -rf .deploy_git\nhexo g\nhexo d\n```","source":"_posts/201805-hexo-blog-system-guide.md","raw":"---\ntitle: hexo 使用指南\ndate: 2018-05-18 11:03:14\ntags:\n---\n\n# 安装\b支持\n\n1. 安装Node.js\n\nmac系统到 node.js 官网下安装包\n\n``` bash\n# 安装 Node.js\n# 安装 Node.js 的最佳方式是使用 nvm。\n\n# cURL方式\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n\n# Wget方式\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n\n# 安装完成后，重启终端并执行下列命令即可安装 Node.js。\n$ nvm install stable\n```\n\n2. 安装git\n\n``` bash\n# Windows：下载并安装 git.\n\n# Mac：使用 Homebrew, MacPorts ：\nbrew install git  # ;或下载 安装程序 安装。\n\n# Linux (Ubuntu, Debian)：\nsudo apt-get install git-core\n\n# Linux (Fedora, Red Hat, CentOS)：\nsudo yum install git-core\n```\n\n# 安装Hexo\n\n```\n$ sudo npm install -g hexo-cli\n```\n之后要在博客的文件夹下执行以下命令\n\n``` bash\nnpm install hexo  # 有上面一步可以省略 \nhexo init <folder>  # 初始化\ncd <folder> \nnpm install\nnpm install hexo-deployer-git\n```\n\n# 可视化写博客\n\n借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 `hexo-admin`这款插件。\n\n`hexo-admin` 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到`source/images`目录下,部署博客时同时上传。\n\n另外，还有一款`hexo-admin-qiniu` 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装`hexo-admin`，直接装这个就行了）\n\n网址： [hexo-admin-qiniu github](https://github.com/xbotao/hexo-admin-qiniu)\n\n# hexo 主题\n\n> 说明：在 Hexo 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n\n为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。\n## Next\n\nNext是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。\n\n[Next主题主页](http://theme-next.iissnan.com/)\n\n### 下载主题\n\n``` bash\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n### 启用主题\n\n与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 `_config.yml`， 找到 theme 字段，并将其值更改为 next。\n\n```\n# 启用 NexT 主题\ntheme: next\n```\n到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。\n\n主题设定包括：详细见官网介绍\n- 选择「Scheme」\n- 设置「界面语言」\n- 设置「菜单」\n- 设置「侧栏」\n- 设置「头像」\n- 设置「作者昵称」\n- 设置「站点描述」\n\n### 设置语言\n\n编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：\n\n`language: zh-Hans`\n\n\n# 异常\n\n- hexo本地测试运行重启后页面空白,提示 : `WARN No layout: index.html`?\n\n原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库\n\n``` bash\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n- Hexo异常：fatal:inunpopulatedsubmodule'.deploy_git'怎么解决？\n\n这种情况可以先安装下相关的依赖：\n\n``` bash\nnpm install hexo-deployer-git –save\n```\n\n实在不行，就把它删掉，然后重新生成和部署。\n\n``` bash\nrm -rf .deploy_git\nhexo g\nhexo d\n```","slug":"hexo-blog-system-guide","published":1,"updated":"2018-05-27T09:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhoxoa1u00013n1dqk4mtjn3","content":"<h1 id=\"安装支持\"><a href=\"#安装支持\" class=\"headerlink\" title=\"安装\b支持\"></a>安装\b支持</h1><ol>\n<li>安装Node.js</li>\n</ol>\n<p>mac系统到 node.js 官网下安装包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 Node.js</span></span><br><span class=\"line\"><span class=\"comment\"># 安装 Node.js 的最佳方式是使用 nvm。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cURL方式</span></span><br><span class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Wget方式</span></span><br><span class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装完成后，重启终端并执行下列命令即可安装 Node.js。</span></span><br><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装git</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Windows：下载并安装 git.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Mac：使用 Homebrew, MacPorts ：</span></span><br><span class=\"line\">brew install git  <span class=\"comment\"># ;或下载 安装程序 安装。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Linux (Ubuntu, Debian)：</span></span><br><span class=\"line\">sudo apt-get install git-core</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Linux (Fedora, Red Hat, CentOS)：</span></span><br><span class=\"line\">sudo yum install git-core</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>之后要在博客的文件夹下执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo  <span class=\"comment\"># 有上面一步可以省略 </span></span><br><span class=\"line\">hexo init &lt;folder&gt;  <span class=\"comment\"># 初始化</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt; </span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>\n<h1 id=\"可视化写博客\"><a href=\"#可视化写博客\" class=\"headerlink\" title=\"可视化写博客\"></a>可视化写博客</h1><p>借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 <code>hexo-admin</code>这款插件。</p>\n<p><code>hexo-admin</code> 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到<code>source/images</code>目录下,部署博客时同时上传。</p>\n<p>另外，还有一款<code>hexo-admin-qiniu</code> 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装<code>hexo-admin</code>，直接装这个就行了）</p>\n<p>网址： <a href=\"https://github.com/xbotao/hexo-admin-qiniu\" target=\"_blank\" rel=\"noopener\">hexo-admin-qiniu github</a></p>\n<h1 id=\"hexo-主题\"><a href=\"#hexo-主题\" class=\"headerlink\" title=\"hexo 主题\"></a>hexo 主题</h1><blockquote>\n<p>说明：在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>\n</blockquote>\n<p>为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。</p>\n<h2 id=\"Next\"><a href=\"#Next\" class=\"headerlink\" title=\"Next\"></a>Next</h2><p>Next是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。</p>\n<p><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题主页</a></p>\n<h3 id=\"下载主题\"><a href=\"#下载主题\" class=\"headerlink\" title=\"下载主题\"></a>下载主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> your-hexo-site</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<h3 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 <code>_config.yml</code>， 找到 theme 字段，并将其值更改为 next。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启用 NexT 主题</span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>\n<p>主题设定包括：详细见官网介绍</p>\n<ul>\n<li>选择「Scheme」</li>\n<li>设置「界面语言」</li>\n<li>设置「菜单」</li>\n<li>设置「侧栏」</li>\n<li>设置「头像」</li>\n<li>设置「作者昵称」</li>\n<li>设置「站点描述」</li>\n</ul>\n<h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p>\n<p><code>language: zh-Hans</code></p>\n<h1 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h1><ul>\n<li>hexo本地测试运行重启后页面空白,提示 : <code>WARN No layout: index.html</code>?</li>\n</ul>\n<p>原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Hexo异常：fatal:inunpopulatedsubmodule’.deploy_git’怎么解决？</li>\n</ul>\n<p>这种情况可以先安装下相关的依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure>\n<p>实在不行，就把它删掉，然后重新生成和部署。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf .deploy_git</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"安装支持\"><a href=\"#安装支持\" class=\"headerlink\" title=\"安装\b支持\"></a>安装\b支持</h1><ol>\n<li>安装Node.js</li>\n</ol>\n<p>mac系统到 node.js 官网下安装包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 Node.js</span></span><br><span class=\"line\"><span class=\"comment\"># 安装 Node.js 的最佳方式是使用 nvm。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cURL方式</span></span><br><span class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Wget方式</span></span><br><span class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装完成后，重启终端并执行下列命令即可安装 Node.js。</span></span><br><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装git</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Windows：下载并安装 git.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Mac：使用 Homebrew, MacPorts ：</span></span><br><span class=\"line\">brew install git  <span class=\"comment\"># ;或下载 安装程序 安装。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Linux (Ubuntu, Debian)：</span></span><br><span class=\"line\">sudo apt-get install git-core</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Linux (Fedora, Red Hat, CentOS)：</span></span><br><span class=\"line\">sudo yum install git-core</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>之后要在博客的文件夹下执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo  <span class=\"comment\"># 有上面一步可以省略 </span></span><br><span class=\"line\">hexo init &lt;folder&gt;  <span class=\"comment\"># 初始化</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt; </span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>\n<h1 id=\"可视化写博客\"><a href=\"#可视化写博客\" class=\"headerlink\" title=\"可视化写博客\"></a>可视化写博客</h1><p>借助vsc、atom之类的编辑器，可以实现hexo博客的编辑和实时预览，还可以试试 <code>hexo-admin</code>这款插件。</p>\n<p><code>hexo-admin</code> 能够管理文章，添加分类和标签，也可以一键部署到pages,现在图片可以实现粘贴上传，原插件为保存到<code>source/images</code>目录下,部署博客时同时上传。</p>\n<p>另外，还有一款<code>hexo-admin-qiniu</code> 插件，实现了自动上传文件到七牛云的配置，比较方便。（不需要先安装<code>hexo-admin</code>，直接装这个就行了）</p>\n<p>网址： <a href=\"https://github.com/xbotao/hexo-admin-qiniu\" target=\"_blank\" rel=\"noopener\">hexo-admin-qiniu github</a></p>\n<h1 id=\"hexo-主题\"><a href=\"#hexo-主题\" class=\"headerlink\" title=\"hexo 主题\"></a>hexo 主题</h1><blockquote>\n<p>说明：在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>\n</blockquote>\n<p>为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。</p>\n<h2 id=\"Next\"><a href=\"#Next\" class=\"headerlink\" title=\"Next\"></a>Next</h2><p>Next是Hexo一个精简的主题系统，包含多种外观（Schema）选择，\b“精于心，简于形”是Next的目标。</p>\n<p><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题主页</a></p>\n<h3 id=\"下载主题\"><a href=\"#下载主题\" class=\"headerlink\" title=\"下载主题\"></a>下载主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> your-hexo-site</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<h3 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件 <code>_config.yml</code>， 找到 theme 字段，并将其值更改为 next。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启用 NexT 主题</span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>\n<p>主题设定包括：详细见官网介绍</p>\n<ul>\n<li>选择「Scheme」</li>\n<li>设置「界面语言」</li>\n<li>设置「菜单」</li>\n<li>设置「侧栏」</li>\n<li>设置「头像」</li>\n<li>设置「作者昵称」</li>\n<li>设置「站点描述」</li>\n</ul>\n<h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p>\n<p><code>language: zh-Hans</code></p>\n<h1 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h1><ul>\n<li>hexo本地测试运行重启后页面空白,提示 : <code>WARN No layout: index.html</code>?</li>\n</ul>\n<p>原因：从git hexo分支（存放hexo文件）把代码拉下来，\b之前的Next 主题被忽略了，就没拉下来，所以必须重新 git clone Next主题的\b仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Hexo异常：fatal:inunpopulatedsubmodule’.deploy_git’怎么解决？</li>\n</ul>\n<p>这种情况可以先安装下相关的依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure>\n<p>实在不行，就把它删掉，然后重新生成和部署。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf .deploy_git</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>"},{"title":"scala array list tuple and so on","date":"2018-05-20T02:11:31.000Z","_content":"\n# Array 类型参数化数组\n\nscala Array 的初始化\n\n``` java\n// 简洁的方法创造和初始化：\nval numNames = Array(\"zero\", \"one\", \"two\")\n\n// 更罗嗦的调用 apply 方法：\nval numNames2 = Array.apply(\"zero\", \"one\", \"two\") \n```\n\n``` java\nobject HelloWorld \n{\n\n    def main(args: Array[String]) \n    {\n      val greetStrings = new Array[String](3)  \n\n      greetStrings(0) = \"Scala: Hello\" \n      greetStrings(1) = \", \" \n      greetStrings(2) = \"world!\\n\" \n      for (i <- 0 to 2) \n           print(greetStrings(i)) \n    }\n\n}\n// 输出结果：Scala: Hello, world!\n```\n\nScala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。\n\n`val` 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。\n\n> 在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。\n\n# 使用列表【List】\n\nScala `Array` 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。\n\nScala的List类是共享相同类型的不可变对象序列。\n\n和数组一样，List[String]包含的仅仅是String。 \nScala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。\n\n``` java\n// 创建一个Scala的List很简单\nval oneTwoThree = List(1, 2, 3)\n\n```\n上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。\n\n## List 操作\n\n这个List可以这么用：\n\n``` java\nval oneTwo = List(1, 2)  \nval threeFour = List(3, 4) \nval oneTwoThreeFour = oneTwo ::: threeFour  // ::: 拼接List\n\nprintln(oneTwo + \" 和 \" + threeFour + \" 是不可变的\")  \nprintln(oneTwoThreeFour + \" 是个新列表了\")\n\n// 运行结果:\n// List(1, 2) 和 List(3, 4) 是不可变的\n// List(1, 2, 3, 4) 是个新列表了\n```\n\nList最常用的操作符是发音为”cons”的” :: “. 例如，\n\n``` java\nval twoThree = List(2, 3)\nval oneTwoThree = 1 :: twoThree  // 拼接元素 和 List\nprintln(oneTwoThree) \n\n// 结果为：List(1, 2, 3) \n```\n\n类List没有提供append操作。 \n如果你想通过添加元素来构造列表： \n- 前缀进去，完成之后再调用reverse； \n- 使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。\n\n# 使用元组【Tuple】\n\n另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。\n\n列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。\n\nScala里你可以简单地返回一个元组。 \n而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。 \n一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。\n\n一个例子：\n\n``` java\nval pair = (99, \"Luftballons\")  //Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。\nprintln(pair._1)                //访问_1字段，从而输出第一个元素，99。\nprintln(pair._2)                \n\n// 运行结果\n// 99\n// Luftballons\n```\n\n元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。\n\n元组的实际类型取决于它含有的元素数量和这些元素的类型。 \n因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。\n\n类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。\n\n## 访问元组的元素\n\n为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？ \n因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。 \n_1可以有一个结果类型，_2是另外一个。 \n\n> 另：元组元素编号从1开始。\n\n# 使用Set和Map\n\n当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。\n\n对于集和映射，Scala把可变性建模在类继承中。\n\n例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。\n\nScala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。\n\n如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。\n\n创造集的缺省方法实例：\n\n``` java\nvar jetSet = Set(\"Boeing\", \"Airbus\")  //定义了名为jetSet的新var，包含两个字串\njetSet += \"Lear\"                      // jetSet = jetSet + \"Lear\" \nprintln(jetSet.contains(\"Cessna\"))    //打印输出集是否包含字串\"Cessna\"。\nprintln(jetSet.contains(\"Lear\"))      //打印输出集是否包含字串\"Lear\"。\n\n// 运行结果：\n// false\n// true\n```\n\n需要不可变集，就需要使用一个引用：import，如下所示：\n\n``` java\nimport scala.collection.mutable.Set  \n\nval movieSet = Set(\"Hitch\", \"Poltergeist\")  \nmovieSet += \"Shrek\" \nprintln(movieSet)  \n\n// 运行结果：\n// Set(Poltergeist, Shrek, Hitch)\n```\n\n需要一个不可变的HashSet，你可以这么做：\n\n``` java\nimport scala.collection.immutable.HashSet  \nval hashSet = HashSet(\"Tomatoes\", \"Chilies\")  \nprintln(hashSet + \"Coriander\") \n\n// 运行结果\n// Set(Chilies, Tomatoes, Coriander)\n```\n\nMap是Scala里另一种有用的集合类。 \n和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。\n\n`scala.collection` 包里面有一个基础Map特质和两个子特质Map： \n可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。\n\n可变映射的创造过程：\n\n``` java\nimport scala.collection.mutable.Map  \n\nval treasureMap = Map[Int, String]()  \ntreasureMap += (1 -> \"我在\")  \ntreasureMap += (2 -> \"学习\")  \ntreasureMap += (3 -> \"Scala\")  \nprintln(treasureMap(1) + treasureMap(2) + treasureMap(3)) \n\n// 运行结果：\n// 我在学习Scala.\n```\n\n至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：\n\n``` java\nval romanNumeral = Map(      \n        1 -> \"我\", 2 -> \"是\", 3 -> \"缺\", 4 -> \"省\", 5 -> \"的\" )  \nprintln(romanNumeral(1) + romanNumeral(2) + romanNumeral(3) + romanNumeral(4) + romanNumeral(5))  \n\n// 运行结果：\n// 我是缺省的\n```","source":"_posts/201805-scala-array-list-tuple-and-so-on.md","raw":"---\ntitle: scala array list tuple and so on\ndate: 2018-05-20 10:11:31\ntags:\n---\n\n# Array 类型参数化数组\n\nscala Array 的初始化\n\n``` java\n// 简洁的方法创造和初始化：\nval numNames = Array(\"zero\", \"one\", \"two\")\n\n// 更罗嗦的调用 apply 方法：\nval numNames2 = Array.apply(\"zero\", \"one\", \"two\") \n```\n\n``` java\nobject HelloWorld \n{\n\n    def main(args: Array[String]) \n    {\n      val greetStrings = new Array[String](3)  \n\n      greetStrings(0) = \"Scala: Hello\" \n      greetStrings(1) = \", \" \n      greetStrings(2) = \"world!\\n\" \n      for (i <- 0 to 2) \n           print(greetStrings(i)) \n    }\n\n}\n// 输出结果：Scala: Hello, world!\n```\n\nScala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。\n\n`val` 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。\n\n> 在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。\n\n# 使用列表【List】\n\nScala `Array` 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。\n\nScala的List类是共享相同类型的不可变对象序列。\n\n和数组一样，List[String]包含的仅仅是String。 \nScala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。\n\n``` java\n// 创建一个Scala的List很简单\nval oneTwoThree = List(1, 2, 3)\n\n```\n上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。\n\n## List 操作\n\n这个List可以这么用：\n\n``` java\nval oneTwo = List(1, 2)  \nval threeFour = List(3, 4) \nval oneTwoThreeFour = oneTwo ::: threeFour  // ::: 拼接List\n\nprintln(oneTwo + \" 和 \" + threeFour + \" 是不可变的\")  \nprintln(oneTwoThreeFour + \" 是个新列表了\")\n\n// 运行结果:\n// List(1, 2) 和 List(3, 4) 是不可变的\n// List(1, 2, 3, 4) 是个新列表了\n```\n\nList最常用的操作符是发音为”cons”的” :: “. 例如，\n\n``` java\nval twoThree = List(2, 3)\nval oneTwoThree = 1 :: twoThree  // 拼接元素 和 List\nprintln(oneTwoThree) \n\n// 结果为：List(1, 2, 3) \n```\n\n类List没有提供append操作。 \n如果你想通过添加元素来构造列表： \n- 前缀进去，完成之后再调用reverse； \n- 使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。\n\n# 使用元组【Tuple】\n\n另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。\n\n列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。\n\nScala里你可以简单地返回一个元组。 \n而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。 \n一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。\n\n一个例子：\n\n``` java\nval pair = (99, \"Luftballons\")  //Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。\nprintln(pair._1)                //访问_1字段，从而输出第一个元素，99。\nprintln(pair._2)                \n\n// 运行结果\n// 99\n// Luftballons\n```\n\n元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。\n\n元组的实际类型取决于它含有的元素数量和这些元素的类型。 \n因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。\n\n类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。\n\n## 访问元组的元素\n\n为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？ \n因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。 \n_1可以有一个结果类型，_2是另外一个。 \n\n> 另：元组元素编号从1开始。\n\n# 使用Set和Map\n\n当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。\n\n对于集和映射，Scala把可变性建模在类继承中。\n\n例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。\n\nScala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。\n\n如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。\n\n创造集的缺省方法实例：\n\n``` java\nvar jetSet = Set(\"Boeing\", \"Airbus\")  //定义了名为jetSet的新var，包含两个字串\njetSet += \"Lear\"                      // jetSet = jetSet + \"Lear\" \nprintln(jetSet.contains(\"Cessna\"))    //打印输出集是否包含字串\"Cessna\"。\nprintln(jetSet.contains(\"Lear\"))      //打印输出集是否包含字串\"Lear\"。\n\n// 运行结果：\n// false\n// true\n```\n\n需要不可变集，就需要使用一个引用：import，如下所示：\n\n``` java\nimport scala.collection.mutable.Set  \n\nval movieSet = Set(\"Hitch\", \"Poltergeist\")  \nmovieSet += \"Shrek\" \nprintln(movieSet)  \n\n// 运行结果：\n// Set(Poltergeist, Shrek, Hitch)\n```\n\n需要一个不可变的HashSet，你可以这么做：\n\n``` java\nimport scala.collection.immutable.HashSet  \nval hashSet = HashSet(\"Tomatoes\", \"Chilies\")  \nprintln(hashSet + \"Coriander\") \n\n// 运行结果\n// Set(Chilies, Tomatoes, Coriander)\n```\n\nMap是Scala里另一种有用的集合类。 \n和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。\n\n`scala.collection` 包里面有一个基础Map特质和两个子特质Map： \n可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。\n\n可变映射的创造过程：\n\n``` java\nimport scala.collection.mutable.Map  \n\nval treasureMap = Map[Int, String]()  \ntreasureMap += (1 -> \"我在\")  \ntreasureMap += (2 -> \"学习\")  \ntreasureMap += (3 -> \"Scala\")  \nprintln(treasureMap(1) + treasureMap(2) + treasureMap(3)) \n\n// 运行结果：\n// 我在学习Scala.\n```\n\n至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：\n\n``` java\nval romanNumeral = Map(      \n        1 -> \"我\", 2 -> \"是\", 3 -> \"缺\", 4 -> \"省\", 5 -> \"的\" )  \nprintln(romanNumeral(1) + romanNumeral(2) + romanNumeral(3) + romanNumeral(4) + romanNumeral(5))  \n\n// 运行结果：\n// 我是缺省的\n```","slug":"scala-array-list-tuple-and-so-on","published":1,"updated":"2018-05-27T07:16:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhoxoa1y00033n1dhw5qabw7","content":"<h1 id=\"Array-类型参数化数组\"><a href=\"#Array-类型参数化数组\" class=\"headerlink\" title=\"Array 类型参数化数组\"></a>Array 类型参数化数组</h1><p>scala Array 的初始化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简洁的方法创造和初始化：</span></span><br><span class=\"line\">val numNames = Array(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 更罗嗦的调用 apply 方法：</span></span><br><span class=\"line\">val numNames2 = Array.apply(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object HelloWorld </span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">def <span class=\"title\">main</span><span class=\"params\">(args: Array[String])</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      val greetStrings = <span class=\"keyword\">new</span> Array[String](<span class=\"number\">3</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\">      greetStrings(<span class=\"number\">0</span>) = <span class=\"string\">\"Scala: Hello\"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">1</span>) = <span class=\"string\">\", \"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">2</span>) = <span class=\"string\">\"world!\\n\"</span> </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i &lt;- <span class=\"number\">0</span> to <span class=\"number\">2</span>) </span><br><span class=\"line\">           print(greetStrings(i)) </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出结果：Scala: Hello, world!</span></span><br></pre></td></tr></table></figure>\n<p>Scala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。</p>\n<p><code>val</code> 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。</p>\n<blockquote>\n<p>在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。</p>\n</blockquote>\n<h1 id=\"使用列表【List】\"><a href=\"#使用列表【List】\" class=\"headerlink\" title=\"使用列表【List】\"></a>使用列表【List】</h1><p>Scala <code>Array</code> 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。</p>\n<p>Scala的List类是共享相同类型的不可变对象序列。</p>\n<p>和数组一样，List[String]包含的仅仅是String。<br>Scala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个Scala的List很简单</span></span><br><span class=\"line\">val oneTwoThree = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n<p>上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。</p>\n<h2 id=\"List-操作\"><a href=\"#List-操作\" class=\"headerlink\" title=\"List 操作\"></a>List 操作</h2><p>这个List可以这么用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val oneTwo = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>)  </span><br><span class=\"line\">val threeFour = List(<span class=\"number\">3</span>, <span class=\"number\">4</span>) </span><br><span class=\"line\">val oneTwoThreeFour = oneTwo ::: threeFour  <span class=\"comment\">// ::: 拼接List</span></span><br><span class=\"line\"></span><br><span class=\"line\">println(oneTwo + <span class=\"string\">\" 和 \"</span> + threeFour + <span class=\"string\">\" 是不可变的\"</span>)  </span><br><span class=\"line\">println(oneTwoThreeFour + <span class=\"string\">\" 是个新列表了\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果:</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2) 和 List(3, 4) 是不可变的</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2, 3, 4) 是个新列表了</span></span><br></pre></td></tr></table></figure>\n<p>List最常用的操作符是发音为”cons”的” :: “. 例如，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val twoThree = List(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">val oneTwoThree = <span class=\"number\">1</span> :: twoThree  <span class=\"comment\">// 拼接元素 和 List</span></span><br><span class=\"line\">println(oneTwoThree) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果为：List(1, 2, 3)</span></span><br></pre></td></tr></table></figure>\n<p>类List没有提供append操作。<br>如果你想通过添加元素来构造列表： </p>\n<ul>\n<li>前缀进去，完成之后再调用reverse； </li>\n<li>使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。</li>\n</ul>\n<h1 id=\"使用元组【Tuple】\"><a href=\"#使用元组【Tuple】\" class=\"headerlink\" title=\"使用元组【Tuple】\"></a>使用元组【Tuple】</h1><p>另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。</p>\n<p>列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。</p>\n<p>Scala里你可以简单地返回一个元组。<br>而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。<br>一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。</p>\n<p>一个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val pair = (<span class=\"number\">99</span>, <span class=\"string\">\"Luftballons\"</span>)  <span class=\"comment\">//Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。</span></span><br><span class=\"line\">println(pair._1)                <span class=\"comment\">//访问_1字段，从而输出第一个元素，99。</span></span><br><span class=\"line\">println(pair._2)                </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// 99</span></span><br><span class=\"line\"><span class=\"comment\">// Luftballons</span></span><br></pre></td></tr></table></figure>\n<p>元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。</p>\n<p>元组的实际类型取决于它含有的元素数量和这些元素的类型。<br>因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。</p>\n<p>类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。</p>\n<h2 id=\"访问元组的元素\"><a href=\"#访问元组的元素\" class=\"headerlink\" title=\"访问元组的元素\"></a>访问元组的元素</h2><p>为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？<br>因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。<br>_1可以有一个结果类型，_2是另外一个。 </p>\n<blockquote>\n<p>另：元组元素编号从1开始。</p>\n</blockquote>\n<h1 id=\"使用Set和Map\"><a href=\"#使用Set和Map\" class=\"headerlink\" title=\"使用Set和Map\"></a>使用Set和Map</h1><p>当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。</p>\n<p>对于集和映射，Scala把可变性建模在类继承中。</p>\n<p>例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。</p>\n<p>Scala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。</p>\n<p>如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。</p>\n<p>创造集的缺省方法实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var jetSet = Set(<span class=\"string\">\"Boeing\"</span>, <span class=\"string\">\"Airbus\"</span>)  <span class=\"comment\">//定义了名为jetSet的新var，包含两个字串</span></span><br><span class=\"line\">jetSet += <span class=\"string\">\"Lear\"</span>                      <span class=\"comment\">// jetSet = jetSet + \"Lear\" </span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Cessna\"</span>))    <span class=\"comment\">//打印输出集是否包含字串\"Cessna\"。</span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Lear\"</span>))      <span class=\"comment\">//打印输出集是否包含字串\"Lear\"。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>需要不可变集，就需要使用一个引用：import，如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Set  </span><br><span class=\"line\"></span><br><span class=\"line\">val movieSet = Set(<span class=\"string\">\"Hitch\"</span>, <span class=\"string\">\"Poltergeist\"</span>)  </span><br><span class=\"line\">movieSet += <span class=\"string\">\"Shrek\"</span> </span><br><span class=\"line\">println(movieSet)  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Poltergeist, Shrek, Hitch)</span></span><br></pre></td></tr></table></figure>\n<p>需要一个不可变的HashSet，你可以这么做：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.immutable.HashSet  </span><br><span class=\"line\">val hashSet = HashSet(<span class=\"string\">\"Tomatoes\"</span>, <span class=\"string\">\"Chilies\"</span>)  </span><br><span class=\"line\">println(hashSet + <span class=\"string\">\"Coriander\"</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Chilies, Tomatoes, Coriander)</span></span><br></pre></td></tr></table></figure>\n<p>Map是Scala里另一种有用的集合类。<br>和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。</p>\n<p><code>scala.collection</code> 包里面有一个基础Map特质和两个子特质Map：<br>可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。</p>\n<p>可变映射的创造过程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Map  </span><br><span class=\"line\"></span><br><span class=\"line\">val treasureMap = Map[Int, String]()  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">1</span> -&gt; <span class=\"string\">\"我在\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">2</span> -&gt; <span class=\"string\">\"学习\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">3</span> -&gt; <span class=\"string\">\"Scala\"</span>)  </span><br><span class=\"line\">println(treasureMap(<span class=\"number\">1</span>) + treasureMap(<span class=\"number\">2</span>) + treasureMap(<span class=\"number\">3</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我在学习Scala.</span></span><br></pre></td></tr></table></figure>\n<p>至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val romanNumeral = Map(      </span><br><span class=\"line\">        <span class=\"number\">1</span> -&gt; <span class=\"string\">\"我\"</span>, <span class=\"number\">2</span> -&gt; <span class=\"string\">\"是\"</span>, <span class=\"number\">3</span> -&gt; <span class=\"string\">\"缺\"</span>, <span class=\"number\">4</span> -&gt; <span class=\"string\">\"省\"</span>, <span class=\"number\">5</span> -&gt; <span class=\"string\">\"的\"</span> )  </span><br><span class=\"line\">println(romanNumeral(<span class=\"number\">1</span>) + romanNumeral(<span class=\"number\">2</span>) + romanNumeral(<span class=\"number\">3</span>) + romanNumeral(<span class=\"number\">4</span>) + romanNumeral(<span class=\"number\">5</span>))  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我是缺省的</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Array-类型参数化数组\"><a href=\"#Array-类型参数化数组\" class=\"headerlink\" title=\"Array 类型参数化数组\"></a>Array 类型参数化数组</h1><p>scala Array 的初始化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简洁的方法创造和初始化：</span></span><br><span class=\"line\">val numNames = Array(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 更罗嗦的调用 apply 方法：</span></span><br><span class=\"line\">val numNames2 = Array.apply(<span class=\"string\">\"zero\"</span>, <span class=\"string\">\"one\"</span>, <span class=\"string\">\"two\"</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object HelloWorld </span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">def <span class=\"title\">main</span><span class=\"params\">(args: Array[String])</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      val greetStrings = <span class=\"keyword\">new</span> Array[String](<span class=\"number\">3</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\">      greetStrings(<span class=\"number\">0</span>) = <span class=\"string\">\"Scala: Hello\"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">1</span>) = <span class=\"string\">\", \"</span> </span><br><span class=\"line\">      greetStrings(<span class=\"number\">2</span>) = <span class=\"string\">\"world!\\n\"</span> </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i &lt;- <span class=\"number\">0</span> to <span class=\"number\">2</span>) </span><br><span class=\"line\">           print(greetStrings(i)) </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出结果：Scala: Hello, world!</span></span><br></pre></td></tr></table></figure>\n<p>Scala里的数组是通过把索引放在圆括号里面访问的，而不是像Java那样放在方括号里。所以数组的第零个元素是greetStrings(0)，不是greetStrings[0]。</p>\n<p><code>val</code> 的概念: 当你用val定义一个变量，那么这个变量就不能重新赋值，但它指向的对象却仍可以改变。</p>\n<blockquote>\n<p>在本例中，你不能把greetStrings重新赋值成不同的数组；greetStrings将永远指向那个它被初始化时候指向的同一个Array[String]实例。但是你能一遍遍修改那个Array[String]的元素，因此数组本身是可变的。</p>\n</blockquote>\n<h1 id=\"使用列表【List】\"><a href=\"#使用列表【List】\" class=\"headerlink\" title=\"使用列表【List】\"></a>使用列表【List】</h1><p>Scala <code>Array</code> 数组是一个所有对象都共享相同类型的可变序列。比方说Array[String]仅包含String。尽管实例化之后你无法改变Array的长度，它的元素值却是可变的。因此，Array是可变的对象。</p>\n<p>Scala的List类是共享相同类型的不可变对象序列。</p>\n<p>和数组一样，List[String]包含的仅仅是String。<br>Scala的List不同于Java的java.util.List，总是不可变的（而Java的List可变）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个Scala的List很简单</span></span><br><span class=\"line\">val oneTwoThree = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n<p>上述代码完成了一个新的叫做oneTwoThree的val，并已经用带有整数元素值1，2和3的新List[Int]初始化。</p>\n<h2 id=\"List-操作\"><a href=\"#List-操作\" class=\"headerlink\" title=\"List 操作\"></a>List 操作</h2><p>这个List可以这么用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val oneTwo = List(<span class=\"number\">1</span>, <span class=\"number\">2</span>)  </span><br><span class=\"line\">val threeFour = List(<span class=\"number\">3</span>, <span class=\"number\">4</span>) </span><br><span class=\"line\">val oneTwoThreeFour = oneTwo ::: threeFour  <span class=\"comment\">// ::: 拼接List</span></span><br><span class=\"line\"></span><br><span class=\"line\">println(oneTwo + <span class=\"string\">\" 和 \"</span> + threeFour + <span class=\"string\">\" 是不可变的\"</span>)  </span><br><span class=\"line\">println(oneTwoThreeFour + <span class=\"string\">\" 是个新列表了\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果:</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2) 和 List(3, 4) 是不可变的</span></span><br><span class=\"line\"><span class=\"comment\">// List(1, 2, 3, 4) 是个新列表了</span></span><br></pre></td></tr></table></figure>\n<p>List最常用的操作符是发音为”cons”的” :: “. 例如，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val twoThree = List(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">val oneTwoThree = <span class=\"number\">1</span> :: twoThree  <span class=\"comment\">// 拼接元素 和 List</span></span><br><span class=\"line\">println(oneTwoThree) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果为：List(1, 2, 3)</span></span><br></pre></td></tr></table></figure>\n<p>类List没有提供append操作。<br>如果你想通过添加元素来构造列表： </p>\n<ul>\n<li>前缀进去，完成之后再调用reverse； </li>\n<li>使用ListBuffer，一种提供append操作的可变列表，完成之后调用toList。</li>\n</ul>\n<h1 id=\"使用元组【Tuple】\"><a href=\"#使用元组【Tuple】\" class=\"headerlink\" title=\"使用元组【Tuple】\"></a>使用元组【Tuple】</h1><p>另一种有用的容器对象是元组：tuple。与列表一样，元组也是不可变的，但与列表不同，元组可以包含不同类型的元素。</p>\n<p>列表应该是List[Int]或List[String]的样子，元组可以同时拥有Int和String。</p>\n<p>Scala里你可以简单地返回一个元组。<br>而且这么做的确简单：实例化一个装有一些对象的新元组，只要把这些对象放在括号里，并用逗号分隔即可。<br>一旦你已经实例化了一个元组，你可以用点号，下划线和一个基于1的元素索引访问它。</p>\n<p>一个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val pair = (<span class=\"number\">99</span>, <span class=\"string\">\"Luftballons\"</span>)  <span class=\"comment\">//Scala推断元组类型为Tuple2[Int, String]，并把它赋给变量pair。</span></span><br><span class=\"line\">println(pair._1)                <span class=\"comment\">//访问_1字段，从而输出第一个元素，99。</span></span><br><span class=\"line\">println(pair._2)                </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// 99</span></span><br><span class=\"line\"><span class=\"comment\">// Luftballons</span></span><br></pre></td></tr></table></figure>\n<p>元组第一个元素是以99为值的Int，第二个是”luftballons”为值的String。</p>\n<p>元组的实际类型取决于它含有的元素数量和这些元素的类型。<br>因此，(99, “Luftballons”)的类型是Tuple2[Int, String]。</p>\n<p>类似地，(‘u’, ‘r’, ‘the’, 1, 4, “me”)是Tuple6[Char, Char, String, Int, Int, String]。</p>\n<h2 id=\"访问元组的元素\"><a href=\"#访问元组的元素\" class=\"headerlink\" title=\"访问元组的元素\"></a>访问元组的元素</h2><p>为什么你不能像访问List里的元素那样访问元组的，就像pair(0)？<br>因为List的apply方法始终返回同样的类型，但是元组里的或许类型不同。<br>_1可以有一个结果类型，_2是另外一个。 </p>\n<blockquote>\n<p>另：元组元素编号从1开始。</p>\n</blockquote>\n<h1 id=\"使用Set和Map\"><a href=\"#使用Set和Map\" class=\"headerlink\" title=\"使用Set和Map\"></a>使用Set和Map</h1><p>当问题讨论到集和映射，Scala同样提供了可变和不可变的替代品，不过用了不同的办法。</p>\n<p>对于集和映射，Scala把可变性建模在类继承中。</p>\n<p>例如，Scala的API包含了集的一个基本特质：trait，特质这个概念接近于Java的接口。</p>\n<p>Scala于是提供了两个子特质，一个是可变的集，另一个是不可变的集。这三个特质都共享同样的简化名，Set。</p>\n<p>如果你想要使用HashSet，你可以根据你的需要选择可变的或不可变的变体。</p>\n<p>创造集的缺省方法实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var jetSet = Set(<span class=\"string\">\"Boeing\"</span>, <span class=\"string\">\"Airbus\"</span>)  <span class=\"comment\">//定义了名为jetSet的新var，包含两个字串</span></span><br><span class=\"line\">jetSet += <span class=\"string\">\"Lear\"</span>                      <span class=\"comment\">// jetSet = jetSet + \"Lear\" </span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Cessna\"</span>))    <span class=\"comment\">//打印输出集是否包含字串\"Cessna\"。</span></span><br><span class=\"line\">println(jetSet.contains(<span class=\"string\">\"Lear\"</span>))      <span class=\"comment\">//打印输出集是否包含字串\"Lear\"。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>需要不可变集，就需要使用一个引用：import，如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Set  </span><br><span class=\"line\"></span><br><span class=\"line\">val movieSet = Set(<span class=\"string\">\"Hitch\"</span>, <span class=\"string\">\"Poltergeist\"</span>)  </span><br><span class=\"line\">movieSet += <span class=\"string\">\"Shrek\"</span> </span><br><span class=\"line\">println(movieSet)  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Poltergeist, Shrek, Hitch)</span></span><br></pre></td></tr></table></figure>\n<p>需要一个不可变的HashSet，你可以这么做：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.immutable.HashSet  </span><br><span class=\"line\">val hashSet = HashSet(<span class=\"string\">\"Tomatoes\"</span>, <span class=\"string\">\"Chilies\"</span>)  </span><br><span class=\"line\">println(hashSet + <span class=\"string\">\"Coriander\"</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果</span></span><br><span class=\"line\"><span class=\"comment\">// Set(Chilies, Tomatoes, Coriander)</span></span><br></pre></td></tr></table></figure>\n<p>Map是Scala里另一种有用的集合类。<br>和集一样，Scala采用了类继承机制提供了可变的和不可变的两种版本的Map。</p>\n<p><code>scala.collection</code> 包里面有一个基础Map特质和两个子特质Map：<br>可变的Map在scala.collection.mutable里，不可变的在scala.collection.immutable里。</p>\n<p>可变映射的创造过程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.mutable.Map  </span><br><span class=\"line\"></span><br><span class=\"line\">val treasureMap = Map[Int, String]()  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">1</span> -&gt; <span class=\"string\">\"我在\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">2</span> -&gt; <span class=\"string\">\"学习\"</span>)  </span><br><span class=\"line\">treasureMap += (<span class=\"number\">3</span> -&gt; <span class=\"string\">\"Scala\"</span>)  </span><br><span class=\"line\">println(treasureMap(<span class=\"number\">1</span>) + treasureMap(<span class=\"number\">2</span>) + treasureMap(<span class=\"number\">3</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我在学习Scala.</span></span><br></pre></td></tr></table></figure>\n<p>至于不可变映射，就不用引用任何类了，因为不可变映射是缺省的，代码例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val romanNumeral = Map(      </span><br><span class=\"line\">        <span class=\"number\">1</span> -&gt; <span class=\"string\">\"我\"</span>, <span class=\"number\">2</span> -&gt; <span class=\"string\">\"是\"</span>, <span class=\"number\">3</span> -&gt; <span class=\"string\">\"缺\"</span>, <span class=\"number\">4</span> -&gt; <span class=\"string\">\"省\"</span>, <span class=\"number\">5</span> -&gt; <span class=\"string\">\"的\"</span> )  </span><br><span class=\"line\">println(romanNumeral(<span class=\"number\">1</span>) + romanNumeral(<span class=\"number\">2</span>) + romanNumeral(<span class=\"number\">3</span>) + romanNumeral(<span class=\"number\">4</span>) + romanNumeral(<span class=\"number\">5</span>))  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 运行结果：</span></span><br><span class=\"line\"><span class=\"comment\">// 我是缺省的</span></span><br></pre></td></tr></table></figure>"},{"title":"tensorflow-flags-guide","date":"2018-05-21T12:29:51.000Z","_content":"","source":"_posts/201805-tensorflow-flags-guide.md","raw":"---\ntitle: tensorflow-flags-guide\ndate: 2018-05-21 20:29:51\ntags:\n---\n","slug":"tensorflow-flags-guide","published":1,"updated":"2018-05-27T07:16:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhoxoa1z00043n1d21e8zd0e","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"hexo 网站的迁移","date":"2018-05-27T09:06:53.000Z","_content":"\nmark\nhttps://blog.csdn.net/aceking10/article/details/41540889\n\nhttps://www.jianshu.com/p/f8a55b972972","source":"_posts/201805-hexo-transfer.md","raw":"---\ntitle: hexo 网站的迁移\ndate: 2018-05-27 17:06:53\ntags:\n---\n\nmark\nhttps://blog.csdn.net/aceking10/article/details/41540889\n\nhttps://www.jianshu.com/p/f8a55b972972","slug":"hexo-transfer","published":1,"updated":"2018-05-27T12:52:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhoxoa2000053n1damme4xal","content":"<p>mark<br><a href=\"https://blog.csdn.net/aceking10/article/details/41540889\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/aceking10/article/details/41540889</a></p>\n<p><a href=\"https://www.jianshu.com/p/f8a55b972972\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/f8a55b972972</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>mark<br><a href=\"https://blog.csdn.net/aceking10/article/details/41540889\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/aceking10/article/details/41540889</a></p>\n<p><a href=\"https://www.jianshu.com/p/f8a55b972972\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/f8a55b972972</a></p>\n"},{"title":"vim使用指南及vim快捷键","date":"2018-05-19T17:12:54.000Z","_content":"\n# 移动光标\n\n``` \nh, j, k, l 上，下，左，右\nctrl-e 移动页面\nctrl-f 上翻一页\nctrl-b 下翻一页\nctrl-u 上翻半页\nctrl-d 下翻半页\nw 跳到下一个字首，按标点或单词分割\nW 跳到下一个字首，长跳，如end-of-line被认为是一个字\ne 跳到下一个字尾\nE 跳到下一个字尾，长跳\nb 跳到上一个字\nB 跳到上一个字，长跳\n0 跳至行首，不管有无缩进，就是跳到第0个字符\n^ 跳至行首的第一个字符\n$ 跳至行尾\ngg 跳至文首\nG 调至文尾\n5gg/5G 调至第5行\ngd 跳至当前光标所在的变量的声明处\nfx 在当前行中找x字符，找到了就跳转至\n; 重复上一个f命令，而不用重复的输入fx\n* 查找光标所在处的单词，向下查找\n# 查找光标所在处的单词，向上查找\n```\n\n# 删除复制\n\n```\ndd 删除光标所在行\ndw 删除一个字(word)\nd/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末\np 粘贴粘贴板的内容到当前行的下面\nP 粘贴粘贴板的内容到当前行的上面\n```\n\n# 插入模式\n\n```\ni 从当前光标处进入插入模式\nI 进入插入模式，并置光标于行首\na 追加模式，置光标于当前光标之后\nA 追加模式，置光标于行末\no 在当前行之下新加一行，并进入插入模式\nO 在当前行之上新加一行，并进入插入模式\nEsc 退出插入模式\n```\n\n# 编辑\n\n```\nJ 将下一行和当前行连接为一行\ncc 删除当前行并进入编辑模式\ncw 删除当前字，并进入编辑模式\nc$ 擦除从当前位置至行末的内容，并进入编辑模式\ns 删除当前字符并进入编辑模式\nS 删除光标所在行并进入编辑模式\nxp 交换当前字符和下一个字符\nu 撤销\nctrl+r 重做\n~ 切换大小写，当前字符\n>> 将当前行右移一个单位\n<< 将当前行左移一个单位(一个tab符)\n== 自动缩进当前行\n```\n\n# 查找替换\n```\n/pattern 向后搜索字符串pattern\n?pattern 向前搜索字符串pattern\n\"\\c\" 忽略大小写\n\"\\C\" 大小写敏感\n\nn 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)\nN 上一个匹配(同上)\n:%s/old/new/g 搜索整个文件，将所有的old替换为new\n:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换\n```\n# 退出编辑器\n```\n:w 将缓冲区写入文件，即保存修改\n:wq 保存修改并退出\n:x 保存修改并退出\n:q 退出，如果对缓冲区进行过修改，则会提示\n:q! 强制退出，放弃修改\n```\n# 多文件编辑\n\n```\nvim file1.. 同时打开多个文件\n:args 显示当前编辑文件\n:next 切换到下个文件\n:prev 切换到前个文件\n:next！ 不保存当前编辑文件并切换到下个文件\n:prev！ 不保存当前编辑文件并切换到上个文件\n:wnext 保存当前编辑文件并切换到下个文件\n:wprev 保存当前编辑文件并切换到上个文件\n:first 定位首文件\n:last 定位尾文件\nctrl+^ 快速在最近打开的两个文件间切换\n:split[sp] 把当前文件水平分割\n:split file 把当前窗口水平分割, file\n:vsplit[vsp] file 把当前窗口垂直分割, file\n:new file 同split file\n:close 关闭当前窗口\n:only 只显示当前窗口, 关闭所有其他的窗口\n:all 打开所有的窗口\n:vertical all 打开所有的窗口, 垂直打开\n:qall 对所有窗口执行：q操作\n:qall! 对所有窗口执行：q!操作\n:wall 对所有窗口执行：w操作\n:wqall 对所有窗口执行：wq操作\nctrl-w h 跳转到左边的窗口\nctrl-w j 跳转到下面的窗口\nctrl-w k 跳转到上面的窗口\nctrl-w l 跳转到右边的窗口\nctrl-w t 跳转到最顶上的窗口\nctrl-w b 跳转到最底下的窗口\n```\n# 多标签编辑\n```\n:tabedit file 在新标签中打开文件file\n:tab split file 在新标签中打开文件file\n:tabp 切换到前一个标签\n:tabn 切换到后一个标签\n:tabc 关闭当前标签\n:tabo 关闭其他标签\ngt 到下一个tab\ngT 到上一个tab\n0gt 跳到第一个tab\n5gt 跳到第五个tab\n```\n# 执行shell命令\n\n1、在命令模式下输入\":sh\"，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器\n2、可以\"!command\"，运行结束后自动回到VIM编辑器中\n3、用“Ctrl+Z“回到shell，用fg返回编辑\n4、:!make -> 直接在当前目录下运行make指令\n\n# VIM启动项\n-o[n] 以水平分屏的方式打开多个文件\n-O[n] 以垂直分屏的方式打开多个文件\n\n# 自动排版\n在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定\n\n# 如何在vim中编译程序\n在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make\n编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。\n\n# buffer操作\n\n## buffer状态\n```\n- （非活动的缓冲区）\na （当前被激活缓冲区）\nh （隐藏的缓冲区）\n% （当前的缓冲区）\n# （交换缓冲区）\n= （只读缓冲区）\n+ （已经更改的缓冲区）\n```\n\n# VIM 操作目录\n## 打开目录\n\n```\nvim .\nvim a-path/\n```\n## 以下操作在操作目录时生效\n```\np,P,t,u,U,x,v,o,r,s\n\nc 使当前打开的目录成为当前目录\nd 创建目录\n% 创建文件\nD 删除文件/目录\n- 转到上层目录\ngb 转到上一个 bookmarked directory\ni 改变目录文件列表方式\n^l 刷新当前打开的目录\n\nmf - 标记文件\nmu - unmark all marked files\nmz - Compress/decompress marked files\ngh 显示/不显示隐藏文件( dot-files)\n^h 编辑隐藏文件列表\na 转换显示模式, all - hide - unhide\nqf diplay infomation about file\nqb list the bookmarked directories and directory traversal history\ngi Display information on file\n\nmb\nmc\nmd - 将标记的文件(mf标记文件)使用 diff 模式\nme - 编辑标记的文件,只显示一个，其余放入 buffer 中\nmh\nmm - move marked files to marked-file target directory\nmc - copy\nmp\nmr\nmt\n```\n\nvim 中复制,移动文件\n```\n1, mt - 移动到的目录\n2, mf - 标记要移动的文件\n3, mc - 移动/复制\n```\n\nR 移动文件\n\n打开当前编辑文件的目录\n\n```\n:Explore\n:Hexplore\n:Nexplore\n:Pexplore\n:Sexplore\n:Texplore\n:Vexplore\n```","source":"_posts/201805-vim-guide.md","raw":"---\ntitle: vim使用指南及vim快捷键\ndate: 2018-05-20 01:12:54\ntags: Linux, vim\n---\n\n# 移动光标\n\n``` \nh, j, k, l 上，下，左，右\nctrl-e 移动页面\nctrl-f 上翻一页\nctrl-b 下翻一页\nctrl-u 上翻半页\nctrl-d 下翻半页\nw 跳到下一个字首，按标点或单词分割\nW 跳到下一个字首，长跳，如end-of-line被认为是一个字\ne 跳到下一个字尾\nE 跳到下一个字尾，长跳\nb 跳到上一个字\nB 跳到上一个字，长跳\n0 跳至行首，不管有无缩进，就是跳到第0个字符\n^ 跳至行首的第一个字符\n$ 跳至行尾\ngg 跳至文首\nG 调至文尾\n5gg/5G 调至第5行\ngd 跳至当前光标所在的变量的声明处\nfx 在当前行中找x字符，找到了就跳转至\n; 重复上一个f命令，而不用重复的输入fx\n* 查找光标所在处的单词，向下查找\n# 查找光标所在处的单词，向上查找\n```\n\n# 删除复制\n\n```\ndd 删除光标所在行\ndw 删除一个字(word)\nd/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末\np 粘贴粘贴板的内容到当前行的下面\nP 粘贴粘贴板的内容到当前行的上面\n```\n\n# 插入模式\n\n```\ni 从当前光标处进入插入模式\nI 进入插入模式，并置光标于行首\na 追加模式，置光标于当前光标之后\nA 追加模式，置光标于行末\no 在当前行之下新加一行，并进入插入模式\nO 在当前行之上新加一行，并进入插入模式\nEsc 退出插入模式\n```\n\n# 编辑\n\n```\nJ 将下一行和当前行连接为一行\ncc 删除当前行并进入编辑模式\ncw 删除当前字，并进入编辑模式\nc$ 擦除从当前位置至行末的内容，并进入编辑模式\ns 删除当前字符并进入编辑模式\nS 删除光标所在行并进入编辑模式\nxp 交换当前字符和下一个字符\nu 撤销\nctrl+r 重做\n~ 切换大小写，当前字符\n>> 将当前行右移一个单位\n<< 将当前行左移一个单位(一个tab符)\n== 自动缩进当前行\n```\n\n# 查找替换\n```\n/pattern 向后搜索字符串pattern\n?pattern 向前搜索字符串pattern\n\"\\c\" 忽略大小写\n\"\\C\" 大小写敏感\n\nn 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)\nN 上一个匹配(同上)\n:%s/old/new/g 搜索整个文件，将所有的old替换为new\n:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换\n```\n# 退出编辑器\n```\n:w 将缓冲区写入文件，即保存修改\n:wq 保存修改并退出\n:x 保存修改并退出\n:q 退出，如果对缓冲区进行过修改，则会提示\n:q! 强制退出，放弃修改\n```\n# 多文件编辑\n\n```\nvim file1.. 同时打开多个文件\n:args 显示当前编辑文件\n:next 切换到下个文件\n:prev 切换到前个文件\n:next！ 不保存当前编辑文件并切换到下个文件\n:prev！ 不保存当前编辑文件并切换到上个文件\n:wnext 保存当前编辑文件并切换到下个文件\n:wprev 保存当前编辑文件并切换到上个文件\n:first 定位首文件\n:last 定位尾文件\nctrl+^ 快速在最近打开的两个文件间切换\n:split[sp] 把当前文件水平分割\n:split file 把当前窗口水平分割, file\n:vsplit[vsp] file 把当前窗口垂直分割, file\n:new file 同split file\n:close 关闭当前窗口\n:only 只显示当前窗口, 关闭所有其他的窗口\n:all 打开所有的窗口\n:vertical all 打开所有的窗口, 垂直打开\n:qall 对所有窗口执行：q操作\n:qall! 对所有窗口执行：q!操作\n:wall 对所有窗口执行：w操作\n:wqall 对所有窗口执行：wq操作\nctrl-w h 跳转到左边的窗口\nctrl-w j 跳转到下面的窗口\nctrl-w k 跳转到上面的窗口\nctrl-w l 跳转到右边的窗口\nctrl-w t 跳转到最顶上的窗口\nctrl-w b 跳转到最底下的窗口\n```\n# 多标签编辑\n```\n:tabedit file 在新标签中打开文件file\n:tab split file 在新标签中打开文件file\n:tabp 切换到前一个标签\n:tabn 切换到后一个标签\n:tabc 关闭当前标签\n:tabo 关闭其他标签\ngt 到下一个tab\ngT 到上一个tab\n0gt 跳到第一个tab\n5gt 跳到第五个tab\n```\n# 执行shell命令\n\n1、在命令模式下输入\":sh\"，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器\n2、可以\"!command\"，运行结束后自动回到VIM编辑器中\n3、用“Ctrl+Z“回到shell，用fg返回编辑\n4、:!make -> 直接在当前目录下运行make指令\n\n# VIM启动项\n-o[n] 以水平分屏的方式打开多个文件\n-O[n] 以垂直分屏的方式打开多个文件\n\n# 自动排版\n在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定\n\n# 如何在vim中编译程序\n在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make\n编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。\n\n# buffer操作\n\n## buffer状态\n```\n- （非活动的缓冲区）\na （当前被激活缓冲区）\nh （隐藏的缓冲区）\n% （当前的缓冲区）\n# （交换缓冲区）\n= （只读缓冲区）\n+ （已经更改的缓冲区）\n```\n\n# VIM 操作目录\n## 打开目录\n\n```\nvim .\nvim a-path/\n```\n## 以下操作在操作目录时生效\n```\np,P,t,u,U,x,v,o,r,s\n\nc 使当前打开的目录成为当前目录\nd 创建目录\n% 创建文件\nD 删除文件/目录\n- 转到上层目录\ngb 转到上一个 bookmarked directory\ni 改变目录文件列表方式\n^l 刷新当前打开的目录\n\nmf - 标记文件\nmu - unmark all marked files\nmz - Compress/decompress marked files\ngh 显示/不显示隐藏文件( dot-files)\n^h 编辑隐藏文件列表\na 转换显示模式, all - hide - unhide\nqf diplay infomation about file\nqb list the bookmarked directories and directory traversal history\ngi Display information on file\n\nmb\nmc\nmd - 将标记的文件(mf标记文件)使用 diff 模式\nme - 编辑标记的文件,只显示一个，其余放入 buffer 中\nmh\nmm - move marked files to marked-file target directory\nmc - copy\nmp\nmr\nmt\n```\n\nvim 中复制,移动文件\n```\n1, mt - 移动到的目录\n2, mf - 标记要移动的文件\n3, mc - 移动/复制\n```\n\nR 移动文件\n\n打开当前编辑文件的目录\n\n```\n:Explore\n:Hexplore\n:Nexplore\n:Pexplore\n:Sexplore\n:Texplore\n:Vexplore\n```","slug":"vim-guide","published":1,"updated":"2018-05-27T07:16:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhoxoa2200073n1dfr3z5kkh","content":"<h1 id=\"移动光标\"><a href=\"#移动光标\" class=\"headerlink\" title=\"移动光标\"></a>移动光标</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h, j, k, l 上，下，左，右</span><br><span class=\"line\">ctrl-e 移动页面</span><br><span class=\"line\">ctrl-f 上翻一页</span><br><span class=\"line\">ctrl-b 下翻一页</span><br><span class=\"line\">ctrl-u 上翻半页</span><br><span class=\"line\">ctrl-d 下翻半页</span><br><span class=\"line\">w 跳到下一个字首，按标点或单词分割</span><br><span class=\"line\">W 跳到下一个字首，长跳，如end-of-line被认为是一个字</span><br><span class=\"line\">e 跳到下一个字尾</span><br><span class=\"line\">E 跳到下一个字尾，长跳</span><br><span class=\"line\">b 跳到上一个字</span><br><span class=\"line\">B 跳到上一个字，长跳</span><br><span class=\"line\">0 跳至行首，不管有无缩进，就是跳到第0个字符</span><br><span class=\"line\">^ 跳至行首的第一个字符</span><br><span class=\"line\">$ 跳至行尾</span><br><span class=\"line\">gg 跳至文首</span><br><span class=\"line\">G 调至文尾</span><br><span class=\"line\">5gg/5G 调至第5行</span><br><span class=\"line\">gd 跳至当前光标所在的变量的声明处</span><br><span class=\"line\">fx 在当前行中找x字符，找到了就跳转至</span><br><span class=\"line\">; 重复上一个f命令，而不用重复的输入fx</span><br><span class=\"line\">* 查找光标所在处的单词，向下查找</span><br><span class=\"line\"># 查找光标所在处的单词，向上查找</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除复制\"><a href=\"#删除复制\" class=\"headerlink\" title=\"删除复制\"></a>删除复制</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd 删除光标所在行</span><br><span class=\"line\">dw 删除一个字(word)</span><br><span class=\"line\">d/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末</span><br><span class=\"line\">p 粘贴粘贴板的内容到当前行的下面</span><br><span class=\"line\">P 粘贴粘贴板的内容到当前行的上面</span><br></pre></td></tr></table></figure>\n<h1 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i 从当前光标处进入插入模式</span><br><span class=\"line\">I 进入插入模式，并置光标于行首</span><br><span class=\"line\">a 追加模式，置光标于当前光标之后</span><br><span class=\"line\">A 追加模式，置光标于行末</span><br><span class=\"line\">o 在当前行之下新加一行，并进入插入模式</span><br><span class=\"line\">O 在当前行之上新加一行，并进入插入模式</span><br><span class=\"line\">Esc 退出插入模式</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J 将下一行和当前行连接为一行</span><br><span class=\"line\">cc 删除当前行并进入编辑模式</span><br><span class=\"line\">cw 删除当前字，并进入编辑模式</span><br><span class=\"line\">c$ 擦除从当前位置至行末的内容，并进入编辑模式</span><br><span class=\"line\">s 删除当前字符并进入编辑模式</span><br><span class=\"line\">S 删除光标所在行并进入编辑模式</span><br><span class=\"line\">xp 交换当前字符和下一个字符</span><br><span class=\"line\">u 撤销</span><br><span class=\"line\">ctrl+r 重做</span><br><span class=\"line\">~ 切换大小写，当前字符</span><br><span class=\"line\">&gt;&gt; 将当前行右移一个单位</span><br><span class=\"line\">&lt;&lt; 将当前行左移一个单位(一个tab符)</span><br><span class=\"line\">== 自动缩进当前行</span><br></pre></td></tr></table></figure>\n<h1 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/pattern 向后搜索字符串pattern</span><br><span class=\"line\">?pattern 向前搜索字符串pattern</span><br><span class=\"line\">&quot;\\c&quot; 忽略大小写</span><br><span class=\"line\">&quot;\\C&quot; 大小写敏感</span><br><span class=\"line\"></span><br><span class=\"line\">n 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)</span><br><span class=\"line\">N 上一个匹配(同上)</span><br><span class=\"line\">:%s/old/new/g 搜索整个文件，将所有的old替换为new</span><br><span class=\"line\">:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换</span><br></pre></td></tr></table></figure>\n<h1 id=\"退出编辑器\"><a href=\"#退出编辑器\" class=\"headerlink\" title=\"退出编辑器\"></a>退出编辑器</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:w 将缓冲区写入文件，即保存修改</span><br><span class=\"line\">:wq 保存修改并退出</span><br><span class=\"line\">:x 保存修改并退出</span><br><span class=\"line\">:q 退出，如果对缓冲区进行过修改，则会提示</span><br><span class=\"line\">:q! 强制退出，放弃修改</span><br></pre></td></tr></table></figure>\n<h1 id=\"多文件编辑\"><a href=\"#多文件编辑\" class=\"headerlink\" title=\"多文件编辑\"></a>多文件编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim file1.. 同时打开多个文件</span><br><span class=\"line\">:args 显示当前编辑文件</span><br><span class=\"line\">:next 切换到下个文件</span><br><span class=\"line\">:prev 切换到前个文件</span><br><span class=\"line\">:next！ 不保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:prev！ 不保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:wnext 保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:wprev 保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:first 定位首文件</span><br><span class=\"line\">:last 定位尾文件</span><br><span class=\"line\">ctrl+^ 快速在最近打开的两个文件间切换</span><br><span class=\"line\">:split[sp] 把当前文件水平分割</span><br><span class=\"line\">:split file 把当前窗口水平分割, file</span><br><span class=\"line\">:vsplit[vsp] file 把当前窗口垂直分割, file</span><br><span class=\"line\">:new file 同split file</span><br><span class=\"line\">:close 关闭当前窗口</span><br><span class=\"line\">:only 只显示当前窗口, 关闭所有其他的窗口</span><br><span class=\"line\">:all 打开所有的窗口</span><br><span class=\"line\">:vertical all 打开所有的窗口, 垂直打开</span><br><span class=\"line\">:qall 对所有窗口执行：q操作</span><br><span class=\"line\">:qall! 对所有窗口执行：q!操作</span><br><span class=\"line\">:wall 对所有窗口执行：w操作</span><br><span class=\"line\">:wqall 对所有窗口执行：wq操作</span><br><span class=\"line\">ctrl-w h 跳转到左边的窗口</span><br><span class=\"line\">ctrl-w j 跳转到下面的窗口</span><br><span class=\"line\">ctrl-w k 跳转到上面的窗口</span><br><span class=\"line\">ctrl-w l 跳转到右边的窗口</span><br><span class=\"line\">ctrl-w t 跳转到最顶上的窗口</span><br><span class=\"line\">ctrl-w b 跳转到最底下的窗口</span><br></pre></td></tr></table></figure>\n<h1 id=\"多标签编辑\"><a href=\"#多标签编辑\" class=\"headerlink\" title=\"多标签编辑\"></a>多标签编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:tabedit file 在新标签中打开文件file</span><br><span class=\"line\">:tab split file 在新标签中打开文件file</span><br><span class=\"line\">:tabp 切换到前一个标签</span><br><span class=\"line\">:tabn 切换到后一个标签</span><br><span class=\"line\">:tabc 关闭当前标签</span><br><span class=\"line\">:tabo 关闭其他标签</span><br><span class=\"line\">gt 到下一个tab</span><br><span class=\"line\">gT 到上一个tab</span><br><span class=\"line\">0gt 跳到第一个tab</span><br><span class=\"line\">5gt 跳到第五个tab</span><br></pre></td></tr></table></figure>\n<h1 id=\"执行shell命令\"><a href=\"#执行shell命令\" class=\"headerlink\" title=\"执行shell命令\"></a>执行shell命令</h1><p>1、在命令模式下输入”:sh”，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器<br>2、可以”!command”，运行结束后自动回到VIM编辑器中<br>3、用“Ctrl+Z“回到shell，用fg返回编辑<br>4、:!make -&gt; 直接在当前目录下运行make指令</p>\n<h1 id=\"VIM启动项\"><a href=\"#VIM启动项\" class=\"headerlink\" title=\"VIM启动项\"></a>VIM启动项</h1><p>-o[n] 以水平分屏的方式打开多个文件<br>-O[n] 以垂直分屏的方式打开多个文件</p>\n<h1 id=\"自动排版\"><a href=\"#自动排版\" class=\"headerlink\" title=\"自动排版\"></a>自动排版</h1><p>在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定</p>\n<h1 id=\"如何在vim中编译程序\"><a href=\"#如何在vim中编译程序\" class=\"headerlink\" title=\"如何在vim中编译程序\"></a>如何在vim中编译程序</h1><p>在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make<br>编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。</p>\n<h1 id=\"buffer操作\"><a href=\"#buffer操作\" class=\"headerlink\" title=\"buffer操作\"></a>buffer操作</h1><h2 id=\"buffer状态\"><a href=\"#buffer状态\" class=\"headerlink\" title=\"buffer状态\"></a>buffer状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- （非活动的缓冲区）</span><br><span class=\"line\">a （当前被激活缓冲区）</span><br><span class=\"line\">h （隐藏的缓冲区）</span><br><span class=\"line\">% （当前的缓冲区）</span><br><span class=\"line\"># （交换缓冲区）</span><br><span class=\"line\">= （只读缓冲区）</span><br><span class=\"line\">+ （已经更改的缓冲区）</span><br></pre></td></tr></table></figure>\n<h1 id=\"VIM-操作目录\"><a href=\"#VIM-操作目录\" class=\"headerlink\" title=\"VIM 操作目录\"></a>VIM 操作目录</h1><h2 id=\"打开目录\"><a href=\"#打开目录\" class=\"headerlink\" title=\"打开目录\"></a>打开目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .</span><br><span class=\"line\">vim a-path/</span><br></pre></td></tr></table></figure>\n<h2 id=\"以下操作在操作目录时生效\"><a href=\"#以下操作在操作目录时生效\" class=\"headerlink\" title=\"以下操作在操作目录时生效\"></a>以下操作在操作目录时生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p,P,t,u,U,x,v,o,r,s</span><br><span class=\"line\"></span><br><span class=\"line\">c 使当前打开的目录成为当前目录</span><br><span class=\"line\">d 创建目录</span><br><span class=\"line\">% 创建文件</span><br><span class=\"line\">D 删除文件/目录</span><br><span class=\"line\">- 转到上层目录</span><br><span class=\"line\">gb 转到上一个 bookmarked directory</span><br><span class=\"line\">i 改变目录文件列表方式</span><br><span class=\"line\">^l 刷新当前打开的目录</span><br><span class=\"line\"></span><br><span class=\"line\">mf - 标记文件</span><br><span class=\"line\">mu - unmark all marked files</span><br><span class=\"line\">mz - Compress/decompress marked files</span><br><span class=\"line\">gh 显示/不显示隐藏文件( dot-files)</span><br><span class=\"line\">^h 编辑隐藏文件列表</span><br><span class=\"line\">a 转换显示模式, all - hide - unhide</span><br><span class=\"line\">qf diplay infomation about file</span><br><span class=\"line\">qb list the bookmarked directories and directory traversal history</span><br><span class=\"line\">gi Display information on file</span><br><span class=\"line\"></span><br><span class=\"line\">mb</span><br><span class=\"line\">mc</span><br><span class=\"line\">md - 将标记的文件(mf标记文件)使用 diff 模式</span><br><span class=\"line\">me - 编辑标记的文件,只显示一个，其余放入 buffer 中</span><br><span class=\"line\">mh</span><br><span class=\"line\">mm - move marked files to marked-file target directory</span><br><span class=\"line\">mc - copy</span><br><span class=\"line\">mp</span><br><span class=\"line\">mr</span><br><span class=\"line\">mt</span><br></pre></td></tr></table></figure>\n<p>vim 中复制,移动文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1, mt - 移动到的目录</span><br><span class=\"line\">2, mf - 标记要移动的文件</span><br><span class=\"line\">3, mc - 移动/复制</span><br></pre></td></tr></table></figure></p>\n<p>R 移动文件</p>\n<p>打开当前编辑文件的目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:Explore</span><br><span class=\"line\">:Hexplore</span><br><span class=\"line\">:Nexplore</span><br><span class=\"line\">:Pexplore</span><br><span class=\"line\">:Sexplore</span><br><span class=\"line\">:Texplore</span><br><span class=\"line\">:Vexplore</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"移动光标\"><a href=\"#移动光标\" class=\"headerlink\" title=\"移动光标\"></a>移动光标</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h, j, k, l 上，下，左，右</span><br><span class=\"line\">ctrl-e 移动页面</span><br><span class=\"line\">ctrl-f 上翻一页</span><br><span class=\"line\">ctrl-b 下翻一页</span><br><span class=\"line\">ctrl-u 上翻半页</span><br><span class=\"line\">ctrl-d 下翻半页</span><br><span class=\"line\">w 跳到下一个字首，按标点或单词分割</span><br><span class=\"line\">W 跳到下一个字首，长跳，如end-of-line被认为是一个字</span><br><span class=\"line\">e 跳到下一个字尾</span><br><span class=\"line\">E 跳到下一个字尾，长跳</span><br><span class=\"line\">b 跳到上一个字</span><br><span class=\"line\">B 跳到上一个字，长跳</span><br><span class=\"line\">0 跳至行首，不管有无缩进，就是跳到第0个字符</span><br><span class=\"line\">^ 跳至行首的第一个字符</span><br><span class=\"line\">$ 跳至行尾</span><br><span class=\"line\">gg 跳至文首</span><br><span class=\"line\">G 调至文尾</span><br><span class=\"line\">5gg/5G 调至第5行</span><br><span class=\"line\">gd 跳至当前光标所在的变量的声明处</span><br><span class=\"line\">fx 在当前行中找x字符，找到了就跳转至</span><br><span class=\"line\">; 重复上一个f命令，而不用重复的输入fx</span><br><span class=\"line\">* 查找光标所在处的单词，向下查找</span><br><span class=\"line\"># 查找光标所在处的单词，向上查找</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除复制\"><a href=\"#删除复制\" class=\"headerlink\" title=\"删除复制\"></a>删除复制</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd 删除光标所在行</span><br><span class=\"line\">dw 删除一个字(word)</span><br><span class=\"line\">d/D删除到行末x删除当前字符X删除前一个字符yy复制一行yw复制一个字y/Y 复制到行末</span><br><span class=\"line\">p 粘贴粘贴板的内容到当前行的下面</span><br><span class=\"line\">P 粘贴粘贴板的内容到当前行的上面</span><br></pre></td></tr></table></figure>\n<h1 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i 从当前光标处进入插入模式</span><br><span class=\"line\">I 进入插入模式，并置光标于行首</span><br><span class=\"line\">a 追加模式，置光标于当前光标之后</span><br><span class=\"line\">A 追加模式，置光标于行末</span><br><span class=\"line\">o 在当前行之下新加一行，并进入插入模式</span><br><span class=\"line\">O 在当前行之上新加一行，并进入插入模式</span><br><span class=\"line\">Esc 退出插入模式</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J 将下一行和当前行连接为一行</span><br><span class=\"line\">cc 删除当前行并进入编辑模式</span><br><span class=\"line\">cw 删除当前字，并进入编辑模式</span><br><span class=\"line\">c$ 擦除从当前位置至行末的内容，并进入编辑模式</span><br><span class=\"line\">s 删除当前字符并进入编辑模式</span><br><span class=\"line\">S 删除光标所在行并进入编辑模式</span><br><span class=\"line\">xp 交换当前字符和下一个字符</span><br><span class=\"line\">u 撤销</span><br><span class=\"line\">ctrl+r 重做</span><br><span class=\"line\">~ 切换大小写，当前字符</span><br><span class=\"line\">&gt;&gt; 将当前行右移一个单位</span><br><span class=\"line\">&lt;&lt; 将当前行左移一个单位(一个tab符)</span><br><span class=\"line\">== 自动缩进当前行</span><br></pre></td></tr></table></figure>\n<h1 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/pattern 向后搜索字符串pattern</span><br><span class=\"line\">?pattern 向前搜索字符串pattern</span><br><span class=\"line\">&quot;\\c&quot; 忽略大小写</span><br><span class=\"line\">&quot;\\C&quot; 大小写敏感</span><br><span class=\"line\"></span><br><span class=\"line\">n 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)</span><br><span class=\"line\">N 上一个匹配(同上)</span><br><span class=\"line\">:%s/old/new/g 搜索整个文件，将所有的old替换为new</span><br><span class=\"line\">:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换</span><br></pre></td></tr></table></figure>\n<h1 id=\"退出编辑器\"><a href=\"#退出编辑器\" class=\"headerlink\" title=\"退出编辑器\"></a>退出编辑器</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:w 将缓冲区写入文件，即保存修改</span><br><span class=\"line\">:wq 保存修改并退出</span><br><span class=\"line\">:x 保存修改并退出</span><br><span class=\"line\">:q 退出，如果对缓冲区进行过修改，则会提示</span><br><span class=\"line\">:q! 强制退出，放弃修改</span><br></pre></td></tr></table></figure>\n<h1 id=\"多文件编辑\"><a href=\"#多文件编辑\" class=\"headerlink\" title=\"多文件编辑\"></a>多文件编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim file1.. 同时打开多个文件</span><br><span class=\"line\">:args 显示当前编辑文件</span><br><span class=\"line\">:next 切换到下个文件</span><br><span class=\"line\">:prev 切换到前个文件</span><br><span class=\"line\">:next！ 不保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:prev！ 不保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:wnext 保存当前编辑文件并切换到下个文件</span><br><span class=\"line\">:wprev 保存当前编辑文件并切换到上个文件</span><br><span class=\"line\">:first 定位首文件</span><br><span class=\"line\">:last 定位尾文件</span><br><span class=\"line\">ctrl+^ 快速在最近打开的两个文件间切换</span><br><span class=\"line\">:split[sp] 把当前文件水平分割</span><br><span class=\"line\">:split file 把当前窗口水平分割, file</span><br><span class=\"line\">:vsplit[vsp] file 把当前窗口垂直分割, file</span><br><span class=\"line\">:new file 同split file</span><br><span class=\"line\">:close 关闭当前窗口</span><br><span class=\"line\">:only 只显示当前窗口, 关闭所有其他的窗口</span><br><span class=\"line\">:all 打开所有的窗口</span><br><span class=\"line\">:vertical all 打开所有的窗口, 垂直打开</span><br><span class=\"line\">:qall 对所有窗口执行：q操作</span><br><span class=\"line\">:qall! 对所有窗口执行：q!操作</span><br><span class=\"line\">:wall 对所有窗口执行：w操作</span><br><span class=\"line\">:wqall 对所有窗口执行：wq操作</span><br><span class=\"line\">ctrl-w h 跳转到左边的窗口</span><br><span class=\"line\">ctrl-w j 跳转到下面的窗口</span><br><span class=\"line\">ctrl-w k 跳转到上面的窗口</span><br><span class=\"line\">ctrl-w l 跳转到右边的窗口</span><br><span class=\"line\">ctrl-w t 跳转到最顶上的窗口</span><br><span class=\"line\">ctrl-w b 跳转到最底下的窗口</span><br></pre></td></tr></table></figure>\n<h1 id=\"多标签编辑\"><a href=\"#多标签编辑\" class=\"headerlink\" title=\"多标签编辑\"></a>多标签编辑</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:tabedit file 在新标签中打开文件file</span><br><span class=\"line\">:tab split file 在新标签中打开文件file</span><br><span class=\"line\">:tabp 切换到前一个标签</span><br><span class=\"line\">:tabn 切换到后一个标签</span><br><span class=\"line\">:tabc 关闭当前标签</span><br><span class=\"line\">:tabo 关闭其他标签</span><br><span class=\"line\">gt 到下一个tab</span><br><span class=\"line\">gT 到上一个tab</span><br><span class=\"line\">0gt 跳到第一个tab</span><br><span class=\"line\">5gt 跳到第五个tab</span><br></pre></td></tr></table></figure>\n<h1 id=\"执行shell命令\"><a href=\"#执行shell命令\" class=\"headerlink\" title=\"执行shell命令\"></a>执行shell命令</h1><p>1、在命令模式下输入”:sh”，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器<br>2、可以”!command”，运行结束后自动回到VIM编辑器中<br>3、用“Ctrl+Z“回到shell，用fg返回编辑<br>4、:!make -&gt; 直接在当前目录下运行make指令</p>\n<h1 id=\"VIM启动项\"><a href=\"#VIM启动项\" class=\"headerlink\" title=\"VIM启动项\"></a>VIM启动项</h1><p>-o[n] 以水平分屏的方式打开多个文件<br>-O[n] 以垂直分屏的方式打开多个文件</p>\n<h1 id=\"自动排版\"><a href=\"#自动排版\" class=\"headerlink\" title=\"自动排版\"></a>自动排版</h1><p>在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定</p>\n<h1 id=\"如何在vim中编译程序\"><a href=\"#如何在vim中编译程序\" class=\"headerlink\" title=\"如何在vim中编译程序\"></a>如何在vim中编译程序</h1><p>在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make<br>编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。</p>\n<h1 id=\"buffer操作\"><a href=\"#buffer操作\" class=\"headerlink\" title=\"buffer操作\"></a>buffer操作</h1><h2 id=\"buffer状态\"><a href=\"#buffer状态\" class=\"headerlink\" title=\"buffer状态\"></a>buffer状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- （非活动的缓冲区）</span><br><span class=\"line\">a （当前被激活缓冲区）</span><br><span class=\"line\">h （隐藏的缓冲区）</span><br><span class=\"line\">% （当前的缓冲区）</span><br><span class=\"line\"># （交换缓冲区）</span><br><span class=\"line\">= （只读缓冲区）</span><br><span class=\"line\">+ （已经更改的缓冲区）</span><br></pre></td></tr></table></figure>\n<h1 id=\"VIM-操作目录\"><a href=\"#VIM-操作目录\" class=\"headerlink\" title=\"VIM 操作目录\"></a>VIM 操作目录</h1><h2 id=\"打开目录\"><a href=\"#打开目录\" class=\"headerlink\" title=\"打开目录\"></a>打开目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .</span><br><span class=\"line\">vim a-path/</span><br></pre></td></tr></table></figure>\n<h2 id=\"以下操作在操作目录时生效\"><a href=\"#以下操作在操作目录时生效\" class=\"headerlink\" title=\"以下操作在操作目录时生效\"></a>以下操作在操作目录时生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p,P,t,u,U,x,v,o,r,s</span><br><span class=\"line\"></span><br><span class=\"line\">c 使当前打开的目录成为当前目录</span><br><span class=\"line\">d 创建目录</span><br><span class=\"line\">% 创建文件</span><br><span class=\"line\">D 删除文件/目录</span><br><span class=\"line\">- 转到上层目录</span><br><span class=\"line\">gb 转到上一个 bookmarked directory</span><br><span class=\"line\">i 改变目录文件列表方式</span><br><span class=\"line\">^l 刷新当前打开的目录</span><br><span class=\"line\"></span><br><span class=\"line\">mf - 标记文件</span><br><span class=\"line\">mu - unmark all marked files</span><br><span class=\"line\">mz - Compress/decompress marked files</span><br><span class=\"line\">gh 显示/不显示隐藏文件( dot-files)</span><br><span class=\"line\">^h 编辑隐藏文件列表</span><br><span class=\"line\">a 转换显示模式, all - hide - unhide</span><br><span class=\"line\">qf diplay infomation about file</span><br><span class=\"line\">qb list the bookmarked directories and directory traversal history</span><br><span class=\"line\">gi Display information on file</span><br><span class=\"line\"></span><br><span class=\"line\">mb</span><br><span class=\"line\">mc</span><br><span class=\"line\">md - 将标记的文件(mf标记文件)使用 diff 模式</span><br><span class=\"line\">me - 编辑标记的文件,只显示一个，其余放入 buffer 中</span><br><span class=\"line\">mh</span><br><span class=\"line\">mm - move marked files to marked-file target directory</span><br><span class=\"line\">mc - copy</span><br><span class=\"line\">mp</span><br><span class=\"line\">mr</span><br><span class=\"line\">mt</span><br></pre></td></tr></table></figure>\n<p>vim 中复制,移动文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1, mt - 移动到的目录</span><br><span class=\"line\">2, mf - 标记要移动的文件</span><br><span class=\"line\">3, mc - 移动/复制</span><br></pre></td></tr></table></figure></p>\n<p>R 移动文件</p>\n<p>打开当前编辑文件的目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:Explore</span><br><span class=\"line\">:Hexplore</span><br><span class=\"line\">:Nexplore</span><br><span class=\"line\">:Pexplore</span><br><span class=\"line\">:Sexplore</span><br><span class=\"line\">:Texplore</span><br><span class=\"line\">:Vexplore</span><br></pre></td></tr></table></figure>"},{"title":"to-write-list","date":"2018-05-27T09:07:59.000Z","_content":"","source":"_posts/201805-to-write-list.md","raw":"---\ntitle: to-write-list\ndate: 2018-05-27 17:07:59\ntags:\n---\n","slug":"to-write-list","published":1,"updated":"2018-05-27T09:07:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhoxoa2400083n1dg0fos9f7","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjhoxoa1q00003n1d4f0y174c","tag_id":"cjhoxoa1w00023n1du6lhdors","_id":"cjhoxoa2200063n1drhlm8pj5"},{"post_id":"cjhoxoa2200073n1dfr3z5kkh","tag_id":"cjhoxoa2500093n1dvxh0aze1","_id":"cjhoxoa25000a3n1dv3bn9h1v"}],"Tag":[{"name":"git","_id":"cjhoxoa1w00023n1du6lhdors"},{"name":"Linux, vim","_id":"cjhoxoa2500093n1dvxh0aze1"}]}}
>>>>>>> refs/remotes/origin/hexo
